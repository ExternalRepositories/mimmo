dist: xenial

language:
  - cpp

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-7
      - g++-7
      - gfortran-7
      - cmake
      - libblas-dev
      - liblapack-dev
      - liblapacke-dev
      - openmpi-bin
      - libopenmpi-dev
      - libpetsc3.6
      - libpetsc3.6.2-dev
      - git
      - libxml2-dev
      
env:
  global:
    - C_COMPILER="gcc-7"
    - CXX_COMPILER="g++-7"
    - Fortran_COMPILER="gfortran-7"

jobs:
  include:
    - if: branch != coverity
      os: linux
      env:
        - BUILD_TYPE="Release" ENABLE_MPI="False"

    - if: branch = coverity
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gfortran
            - cmake
            - libblas-dev
            - liblapack-dev
            - liblapacke-dev
            - openmpi-bin
            - libopenmpi-dev
            - libpetsc3.6
            - libpetsc3.6.2-dev
            - git
            - libxml2-dev
        coverity_scan:
          project:
            name: optimad/mimmo
            description: "mimmo :: Surface manipulation and mesh morphing library"
          notification_email: edoardo.lombardi@optimad.it
          build_command_prepend: >
            mkdir build;
            cd build;
      mkdir git;
      cd git;
      git clone https://github.com/optimad/bitpit.git;
      cd bitpit;
      git checkout 1.6;
      mkdir build;
      cd build;
      cmake -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_Fortran_COMPILER=${Fortran_COMPILER} -DPETSC_DIR=/usr/lib/petscdir/3.6.2/x86_64-linux-gnu-real -DPETSC_ARCH= -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_MPI=False -DVERBOSE_MAKE=False -DCMAKE_INSTALL_PREFIX=/opt/bitpit ..;
      make -j2 install;
      cd ../../../;
      mkdir build;
      cd build;
      cmake -DCMAKE_C_COMPILER=${C_COMPILER} \
        -DCMAKE_CXX_COMPILER=${CXX_COMPILER} \
        -DCMAKE_Fortran_COMPILER=${Fortran_COMPILER} \
        -DPETSC_DIR=/usr/lib/petscdir/3.6.2/x86_64-linux-gnu-real \
        -DPETSC_ARCH= \
        -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
        -DENABLE_MPI=${ENABLE_MPI} \
        -DVERBOSE_MAKE=True \
        -DBITPIT_DIR=/opt/bitpit/lib/cmake/bitpit-1.6 \
        -DMIMMO_MODULE_GEOHANDLERS=True \
        -DMIMMO_MODULE_IOCGNS=False \
        -DMIMMO_MODULE_IOOFOAM=False \
        -DMIMMO_MODULE_IOVTK=False \
        -DMIMMO_MODULE_PROPAGATORS=False \
        -DMIMMO_MODULE_UTILS=False \
        -DBUILD_EXAMPLES=True \
        -DBUILD_XMLTUI=True \
        ..;            
          build_command: >
            make -j2
          branch_pattern: coverity

      env:
        - C_COMPILER="gcc"
        - CXX_COMPILER="g++"
        - Fortran_COMPILER="gfortran"
        - BUILD_TYPE="Release" ENABLE_MPI="False"

        # Encrypted COVERITY_SCAN_TOKEN
           - secure: "nPwrFOUzNJ8LLs/bkaY5zg9cth4aywHj4G3DdfLjLTlMu79xbEIiNnP+j7H8buvpLRcqkBYCziFaSQVl48ADSnqoWrvv4xFOTos9N3xthbI790q3VpmxyXMtE/5QJrZEvxh5fK74hm5AH2ALGySWJEJC0icb1nv3H8P76PM+wPmkWhmxsNMFSI1s5hqrc12IQ/TPhqw+N/UtiXqOofeGPKwgUDEIQFjV5Yc709yR3oZfCFSq6GtZH049FlrNhZB6mXiy5Q1lExJh5akScekLRsYBOqOo7TfeHUmXgxkLRVBI5V0Yk62Sps6VJCc1WEwIHEeEkvjF2mQft/4PwV3yJH0FEUk7amZKboaadx4M5d9zA+oe6ecacPmC69H6pj+pUkC1SI/2Q2rzD0upEzwvjpnSvVyYDASQPBEYXo69To4DMIlCFBvuG3PDsQeLlbAIgjBfyQAOvkEg1YfKECrr27nNZsuHOn60pKXX03MMaVbJtSf38ic7Gf81THZVOTc0ATvI3py8+apfQaehvcIc3fO871YkMLJXsDmGBEtSrlwl7mjDoyknUP/VcO1SY/TiWUu/N/B2fTgr9AFR5/UhBGroJDUH5+WKTX4r5rCcWvhtr2qZVN7bD8U+FvSPerHH5Sxz1Z3OyCCYRuvzDzk1Pf6XH7zpWOdO8VeL/D03nsc="

before_install:
  - echo "Building branch ${TRAVIS_BRANCH}..."
  - if [ ${TRAVIS_BRANCH} != "coverity" ]; then
      echo "Coverity build... No";
    else
      echo "Coverity build... Yes";
    fi
  - sudo apt-get update
  - test -n $CC && unset CC
  - test -n $CXX && unset CXX
  - test -n $FC && unset FC
  - if [ ${TRAVIS_BRANCH} == "coverity" ]; then
      echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-;
    fi

before_script:
  - if [ ${TRAVIS_BRANCH} != "coverity" ]; then
      echo "Installing bitpit...";      
      mkdir git;
      cd git;
      git clone https://github.com/optimad/bitpit.git;
      cd bitpit;
      git checkout 1.6;
      mkdir build;
      cd build;
      cmake -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_Fortran_COMPILER=${Fortran_COMPILER} -DPETSC_DIR=/usr/lib/petscdir/3.6.2/x86_64-linux-gnu-real -DPETSC_ARCH= -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_MPI=False -DVERBOSE_MAKE=False -DCMAKE_INSTALL_PREFIX=/opt/bitpit ..;
      make -j2 install;
      
      cd ../../../;
      mkdir build;
      cd build;
      cmake
        -DCMAKE_C_COMPILER=${C_COMPILER}
        -DCMAKE_CXX_COMPILER=${CXX_COMPILER}
        -DCMAKE_Fortran_COMPILER=${Fortran_COMPILER}
        -DPETSC_DIR=/usr/lib/petscdir/3.6.2/x86_64-linux-gnu-real
        -DPETSC_ARCH=
        -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
        -DENABLE_MPI=${ENABLE_MPI}
        -DVERBOSE_MAKE=True
        -DBITPIT_DIR=/opt/bitpit/lib/cmake/bitpit-1.6 
        -DMIMMO_MODULE_GEOHANDLERS=True
        -DMIMMO_MODULE_IOCGNS=False
        -DMIMMO_MODULE_IOOFOAM=False
        -DMIMMO_MODULE_IOVTK=False
        -DMIMMO_MODULE_PROPAGATORS=False
        -DMIMMO_MODULE_UTILS=False
        -DBUILD_EXAMPLES=True
        -DBUILD_XMLTUI=True
        ..;
    fi

script:
  - if [ ${TRAVIS_BRANCH} != "coverity" ]; then  
      make -j2 && ctest;
    fi

after_script:
  # When using secret variables, the output gets filtered through a helper
  # process by default. This may leed to truncated ouptut after failures.
  # Waiting some seconds after the script should workaround the issue (see
  # https://github.com/travis-ci/travis-ci/issues/6018).
  - sleep 10

notifications:
  slack:
    rooms:
      # Channel cmake on romanticdevs
      - secure: "fl5eXHRN4EnO5aizGBTfsK2ZwNMO+0ZocXvDvs5yoIVrE+uUlKPEayUtSLC5X0EO7JOxzCMfey51cr+Wk0O6ME1cj2WPZHMaziXkLshPltFbx6m+O0XGZJCOO5l6gFuAEZWXkfFzz2fQz80tUpQHQCaZjFq1OsRq4FiWPpAFjsxqYgz524EHwxFWxIFcZnl6gnFwlmtQbmPBVCEMDoqRmDPiWIEQ0Paom9DUPdEm7K6JTP0TSIWOcGLvYWtJqNsJ0kauvQtCZQc1XnrSu5vRrHY+uBWXew+JXq7aJ2kM2NlaeOqMBQsxDicjYa9vFGSo5Qmdck9ZXE79rc1BA05UVRb5G/9dyhxLlm2YbncmsaH4Lyua0qQ4TA1FepB7DOF4E2rs4ywqMwR+WKoZeTuk1yqkvurH2WfLmOsDw8ybwgqLiITYuL7pMpvakluYI2hT6bL2EiF3g0oA/10vyi2PmLx9ScRKrs7CosApHaPjo06ViqSHUFlcCqvUQDKdUp7n7AvuCE2gRBCXXgpI3d5oRVWX3KoHNChTir/vUhZfGRqpzfA1CCsGht2kciD7IEAAjMxZ9adgfFJWJe00IQaCx7KBOXlZF3SjvWOfAuLfta7sDXl1NOE9x55RVolSs2L9lZExLR0PajLdCbfVdgV6359wYsmAJV+jJHS6Ma0zB4U="
    on_success: change
    on_failure: change

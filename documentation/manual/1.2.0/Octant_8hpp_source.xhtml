
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - src/PABLO/Octant.hpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_8f4a7db415b2362c102e34a058f0a80b.xhtml">PABLO</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Octant.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef __BITPIT_OCTANT_HPP__</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __BITPIT_OCTANT_HPP__</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">// INCLUDES                                                                            //</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;inlinedFunct.hpp&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;bitset&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>bitpit {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">// TYPEDEFS</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">typedef</span> std::vector&lt;uint8_t&gt;                u8vector;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">typedef</span> std::vector&lt;uint32_t&gt;               u32vector;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">typedef</span> std::vector&lt;uint64_t&gt;               u64vector;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">typedef</span> std::vector&lt;double&gt;                 dvector;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">typedef</span> std::array&lt;double, 3&gt;               darray3;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">typedef</span> std::array&lt;int8_t, 3&gt;               i8array3;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">typedef</span> std::array&lt;uint32_t, 3&gt;             u32array3;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">typedef</span> std::vector&lt;std::vector&lt;uint32_t&gt; &gt; u32vector2D;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">typedef</span> std::vector&lt;std::vector&lt;uint64_t&gt; &gt; u64vector2D;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">typedef</span> std::vector&lt;u32array3&gt;              u32arr3vector;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">// CLASS DEFINITION                                                                    //</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classbitpit_1_1Octant.xhtml">   79</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classbitpit_1_1Octant.xhtml">Octant</a>{</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="comment">// FRIENDSHIPS</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classbitpit_1_1LocalTree.xhtml">LocalTree</a>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classbitpit_1_1ParaTree.xhtml">ParaTree</a>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// MEMBERS</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    uint32_t            m_x;            </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    uint32_t            m_y;            </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    uint32_t            m_z;            </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    uint8_t             m_level;        </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    int8_t              m_marker;       </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    std::bitset&lt;17&gt;     m_info;         </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    uint8_t             m_dim;          </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="comment">//TODO add bitset for edge &amp; node</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="comment">// STATIC MEMBERS</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">int</span>    sm_CoeffNode[8][3]        = {{0,0,0},{1,0,0},{0,1,0},</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                                        {1,1,0},{0,0,1},{1,0,1},</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                                        {0,1,1},{1,1,1}}; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">int</span>    sm_CoeffFaceCenter[6][3]  = {{0,1,1},{2,1,1},{1,0,1},</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                                        {1,2,1},{1,1,0},{1,1,2}}; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">static</span> constexpr <span class="keywordtype">int</span>    sm_CoeffEdgeCenter[12][3] = {{0,1,0},{2,1,0},{1,0,0},</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                                        {1,2,0},{0,0,1},{2,0,1},</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                                        {0,2,1},{2,2,1},{0,1,2},</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                                        {2,1,2},{1,0,2},{1,2,2}};  </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">static</span> int8_t           sm_maxLevel;                </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="comment">// CONSTRUCTORS AND OPERATORS</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">//  Octant();</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="classbitpit_1_1Octant.xhtml#aceab76f99e89342edccaeeadbfda34c3">Octant</a>(<span class="keyword">const</span> <a class="code" href="classbitpit_1_1Octant.xhtml">Octant</a> &amp;octant);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="classbitpit_1_1Octant.xhtml#aceab76f99e89342edccaeeadbfda34c3">Octant</a>(uint8_t dim, int8_t maxlevel = 20);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="classbitpit_1_1Octant.xhtml#aceab76f99e89342edccaeeadbfda34c3">Octant</a>(uint8_t dim, uint8_t level, int32_t x, int32_t y, int32_t z = 0, int8_t maxlevel = 20);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="classbitpit_1_1Octant.xhtml#aceab76f99e89342edccaeeadbfda34c3">Octant</a>(<span class="keywordtype">bool</span> bound, uint8_t dim, uint8_t level, int32_t x, int32_t y, int32_t z = 0, int8_t maxlevel = 20);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">bool</span> operator ==(<span class="keyword">const</span> <a class="code" href="classbitpit_1_1Octant.xhtml">Octant</a> &amp; oct2);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="comment">// METHODS</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="comment">// BASIC GET/SET METHODS</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    uint32_t    getDim() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    u32array3   getCoordinates() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    uint32_t    getX() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    uint32_t    getY() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    uint32_t    getZ() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    u32array3   getCoord() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    uint8_t     getLevel() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    int8_t      getMarker() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordtype">bool</span>        getBound(uint8_t face) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">bool</span>        getBound() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordtype">void</span>        setBound(uint8_t face);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordtype">bool</span>        getPbound(uint8_t face) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordtype">bool</span>        getPbound() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">bool</span>        getIsNewR() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">bool</span>        getIsNewC() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordtype">bool</span>        getIsGhost() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordtype">bool</span>        getNotBalance() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordtype">bool</span>        getBalance() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordtype">void</span>        setMarker(int8_t marker);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordtype">void</span>        setBalance(<span class="keywordtype">bool</span> balance);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordtype">void</span>        setLevel(uint8_t level);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">void</span>        setPbound(uint8_t face, <span class="keywordtype">bool</span> flag);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="comment">// OTHER GET/SET METHODS</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    uint32_t        getSize() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    uint64_t        getArea() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    uint64_t        getVolume() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    darray3         getCenter() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    darray3         getFaceCenter(uint8_t iface) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    darray3         getEdgeCenter(uint8_t iedge) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordtype">void</span>            getNodes(u32arr3vector &amp; nodes) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    u32arr3vector   getNodes() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordtype">void</span>            getNode(u32array3 &amp; node, uint8_t inode) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    u32array3       getNode(uint8_t inode) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordtype">void</span>            getNormal(uint8_t &amp; iface, i8array3 &amp; normal, int8_t (&amp;normals)[6][3]) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    uint64_t        computeMorton() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    uint64_t        computeMorton();</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="comment">// OTHER METHODS                                                                   //</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="classbitpit_1_1Octant.xhtml">Octant</a>                  buildLastDesc();</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="classbitpit_1_1Octant.xhtml">Octant</a>                  buildFather();</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    std::vector&lt; Octant &gt;   buildChildren();</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    std::vector&lt;uint64_t&gt;       computeHalfSizeMorton(uint8_t iface, uint32_t &amp; sizehf);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    std::vector&lt;uint64_t&gt;       computeMinSizeMorton(uint8_t iface, <span class="keyword">const</span> uint8_t &amp; maxdepth,</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            uint32_t &amp; sizem);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    std::vector&lt;uint64_t&gt;       computeVirtualMorton(uint8_t iface, <span class="keyword">const</span> uint8_t &amp; maxdepth,</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            uint32_t &amp; sizeneigh);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    std::vector&lt;uint64_t&gt;       computeEdgeHalfSizeMorton(uint8_t iedge, uint32_t &amp; sizehf, uint8_t (&amp;edgeface)[12][2]);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    std::vector&lt;uint64_t&gt;       computeEdgeMinSizeMorton(uint8_t iedge, <span class="keyword">const</span> uint8_t &amp; maxdepth,</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            uint32_t &amp; sizem, uint8_t (&amp;edgeface)[12][2]);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    std::vector&lt;uint64_t&gt;       computeEdgeVirtualMorton(uint8_t iedge, <span class="keyword">const</span> uint8_t &amp; maxdepth,</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            uint32_t &amp; sizeneigh, uint8_t balance_codim, uint8_t (&amp;edgeface)[12][2]);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    uint64_t        computeNodeMinSizeMorton(uint8_t inode, <span class="keyword">const</span> uint8_t &amp; maxdepth,</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            uint32_t &amp; sizehf, uint8_t (&amp;nodeface)[8][3]);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    uint64_t        computeNodeVirtualMorton(uint8_t inode, <span class="keyword">const</span> uint8_t &amp; maxdepth,</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            uint32_t &amp; sizeneigh, uint8_t (&amp;nodeface)[8][3]);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    uint64_t computePeriodicMorton(uint8_t iface);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <a class="code" href="classbitpit_1_1Octant.xhtml">Octant</a> computePeriodicOctant(uint8_t iface) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    std::array&lt;int64_t,3&gt; getPeriodicCoord(uint8_t iface) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;};</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">/*  @} */</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __BITPIT_OCTANT_HPP__ */</span><span class="preprocessor"></span></div>
<div class="ttc" id="classbitpit_1_1LocalTree_xhtml"><div class="ttname"><a href="classbitpit_1_1LocalTree.xhtml">bitpit::LocalTree</a></div><div class="ttdoc">Local octree portion for each process. </div><div class="ttdef"><b>Definition:</b> <a href="LocalTree_8hpp_source.xhtml#l00072">LocalTree.hpp:72</a></div></div>
<div class="ttc" id="classbitpit_1_1ParaTree_xhtml"><div class="ttname"><a href="classbitpit_1_1ParaTree.xhtml">bitpit::ParaTree</a></div><div class="ttdoc">Para Tree is the user interface class. </div><div class="ttdef"><b>Definition:</b> <a href="ParaTree_8hpp_source.xhtml#l00084">ParaTree.hpp:84</a></div></div>
<div class="ttc" id="classbitpit_1_1Octant_xhtml"><div class="ttname"><a href="classbitpit_1_1Octant.xhtml">bitpit::Octant</a></div><div class="ttdoc">Octant class definition. </div><div class="ttdef"><b>Definition:</b> <a href="Octant_8hpp_source.xhtml#l00079">Octant.hpp:79</a></div></div>
<div class="ttc" id="classbitpit_1_1Octant_xhtml_aceab76f99e89342edccaeeadbfda34c3"><div class="ttname"><a href="classbitpit_1_1Octant.xhtml#aceab76f99e89342edccaeeadbfda34c3">bitpit::Octant::Octant</a></div><div class="ttdeci">Octant(const Octant &amp;octant)</div><div class="ttdef"><b>Definition:</b> <a href="Octant_8cpp_source.xhtml#l00145">Octant.cpp:145</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:24 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

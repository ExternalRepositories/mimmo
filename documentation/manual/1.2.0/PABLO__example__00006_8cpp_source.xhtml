
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - examples/PABLO_example_00006.cpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">PABLO_example_00006.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;bitpit_PABLO.hpp&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#if BITPIT_ENABLE_MPI==1</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;PABLO_userDataComm.hpp&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">using namespace </span>std;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">using namespace </span>bitpit;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"></span><span class="comment">// =================================================================================== //</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[]) {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">#if BITPIT_ENABLE_MPI==1</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor"></span>    MPI_Init(&amp;argc, &amp;argv);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor"></span>        <span class="keywordtype">int</span> iter = 0;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordtype">int</span> dim = 2;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordtype">int</span> nproc;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordtype">int</span> rank;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">#if BITPIT_ENABLE_MPI==1</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor"></span>        MPI_Comm comm = MPI_COMM_WORLD;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        MPI_Comm_size(comm,&amp;nproc);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        MPI_Comm_rank(comm,&amp;rank);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor"></span>        nproc = 1;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        rank = 0;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor"></span>        log::manager().initialize(log::SEPARATE, <span class="keyword">false</span>, nproc, rank);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        log::cout() &lt;&lt; <a class="code" href="namespacebitpit_1_1log.xhtml#acd50005e81bd303fa96065d563592348">fileVerbosity</a>(log::NORMAL);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        log::cout() &lt;&lt; <a class="code" href="namespacebitpit_1_1log.xhtml#ad6f89bcb2adf0f51cb232969b714e83b">consoleVerbosity</a>(log::QUIET);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <a class="code" href="classbitpit_1_1PabloUniform.xhtml">PabloUniform</a> pablo6;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">for</span> (iter=1; iter&lt;5; iter++){</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            pablo6.<a class="code" href="classbitpit_1_1ParaTree.xhtml#a5eacb88f2324b915ba8dbac95c994755">adaptGlobalRefine</a>();</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#if BITPIT_ENABLE_MPI==1</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        pablo6.<a class="code" href="classbitpit_1_1ParaTree.xhtml#ab6a1a1ee440397820bd1d0f81d02bf18">loadBalance</a>();</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordtype">double</span> xc, yc;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        xc = yc = 0.5;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordtype">double</span> radius = 0.25;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        uint32_t nocts = pablo6.<a class="code" href="classbitpit_1_1ParaTree.xhtml#aedea46c7857bffcebb567995285d40db">getNumOctants</a>();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        uint32_t nghosts = pablo6.<a class="code" href="classbitpit_1_1ParaTree.xhtml#a79732d79d809a863e4f8b918154da561">getNumGhosts</a>();</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        vector&lt;double&gt; oct_data(nocts, 0.0), ghost_data(nghosts, 0.0);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i&lt;nocts; i++){</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            vector&lt;array&lt;double,3&gt; &gt; nodes = pablo6.<a class="code" href="classbitpit_1_1PabloUniform.xhtml#a42de7a4c2923568a21d3e951a85bf1c3">getNodes</a>(i);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j&lt;4; j++){</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                <span class="keywordtype">double</span> x = nodes[j][0];</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keywordtype">double</span> y = nodes[j][1];</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                <span class="keywordflow">if</span> ((<a class="code" href="group__MathFunctions.xhtml#ga6da0697577be6fda9b574b2344c58014">pow</a>((x-xc),2.0)+<a class="code" href="group__MathFunctions.xhtml#ga6da0697577be6fda9b574b2344c58014">pow</a>((y-yc),2.0) &lt;= <a class="code" href="group__MathFunctions.xhtml#ga6da0697577be6fda9b574b2344c58014">pow</a>(radius,2.0))){</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                    oct_data[i] = 1.0;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i&lt;nghosts; i++){</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <a class="code" href="classbitpit_1_1Octant.xhtml">Octant</a> *oct = pablo6.<a class="code" href="classbitpit_1_1ParaTree.xhtml#afb007fe22f8e4450f81e57508ddea43b">getGhostOctant</a>(i);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            vector&lt;array&lt;double,3&gt; &gt; nodes = pablo6.<a class="code" href="classbitpit_1_1PabloUniform.xhtml#a42de7a4c2923568a21d3e951a85bf1c3">getNodes</a>(oct);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0; j&lt;4; j++){</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="keywordtype">double</span> x = nodes[j][0];</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                <span class="keywordtype">double</span> y = nodes[j][1];</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                <span class="keywordflow">if</span> ((<a class="code" href="group__MathFunctions.xhtml#ga6da0697577be6fda9b574b2344c58014">pow</a>((x-xc),2.0)+<a class="code" href="group__MathFunctions.xhtml#ga6da0697577be6fda9b574b2344c58014">pow</a>((y-yc),2.0) &lt;= <a class="code" href="group__MathFunctions.xhtml#ga6da0697577be6fda9b574b2344c58014">pow</a>(radius,2.0))){</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                    ghost_data[i] = 1.0;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        iter = 0;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        pablo6.<a class="code" href="classbitpit_1_1ParaTree.xhtml#ab4aa4521f6f8b2c046ad2bcb57bf568d">updateConnectivity</a>();</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        pablo6.<a class="code" href="classbitpit_1_1ParaTree.xhtml#a098f36e490f514449565458be20d3f4e">writeTest</a>(<span class="stringliteral">&quot;pablo00006_iter&quot;</span>+to_string(static_cast&lt;unsigned long long&gt;(iter)), oct_data);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordtype">int</span> start = iter + 1;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">for</span> (iter=start; iter&lt;start+25; iter++){</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            vector&lt;double&gt; oct_data_smooth(nocts, 0.0);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            vector&lt;uint32_t&gt; neigh, neigh_t;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            vector&lt;bool&gt; isghost, isghost_t;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            uint8_t iface, nfaces, codim;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0; i&lt;nocts; i++){</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                neigh.clear();</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                isghost.clear();</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="keywordflow">for</span> (codim=1; codim&lt;dim+1; codim++){</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                    <span class="keywordflow">if</span> (codim == 1){</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                        nfaces = 4;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                    }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (codim == 2){</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                        nfaces = 4;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    }</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                    <span class="keywordflow">for</span> (iface=0; iface&lt;nfaces; iface++){</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                        pablo6.findNeighbours(i,iface,codim,neigh_t,isghost_t);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                        neigh.insert(neigh.end(), neigh_t.begin(), neigh_t.end());</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                        isghost.insert(isghost.end(), isghost_t.begin(), isghost_t.end());</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                oct_data_smooth[i] = oct_data[i]/(neigh.size()+1);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> j=0; j&lt;neigh.size(); j++){</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                    <span class="keywordflow">if</span> (isghost[j]){</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                        oct_data_smooth[i] += ghost_data[neigh[j]]/(neigh.size()+1);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    <span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                        oct_data_smooth[i] += oct_data[neigh[j]]/(neigh.size()+1);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            pablo6.<a class="code" href="classbitpit_1_1ParaTree.xhtml#ab4aa4521f6f8b2c046ad2bcb57bf568d">updateConnectivity</a>();</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            pablo6.<a class="code" href="classbitpit_1_1ParaTree.xhtml#a098f36e490f514449565458be20d3f4e">writeTest</a>(<span class="stringliteral">&quot;pablo00006_iter&quot;</span>+to_string(static_cast&lt;unsigned long long&gt;(iter)), oct_data_smooth);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor">#if BITPIT_ENABLE_MPI==1</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            UserDataComm&lt;vector&lt;double&gt; &gt; data_comm(oct_data_smooth, ghost_data);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            pablo6.<a class="code" href="classbitpit_1_1ParaTree.xhtml#ababbebf9bc8f6f7e55061079b8138aa6">communicate</a>(data_comm);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="preprocessor"></span>            oct_data = oct_data_smooth;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        }</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor">#if BITPIT_ENABLE_MPI==1</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="preprocessor"></span>    }</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    MPI_Finalize();</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_acd50005e81bd303fa96065d563592348"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#acd50005e81bd303fa96065d563592348">bitpit::log::fileVerbosity</a></div><div class="ttdeci">LoggerManipulator&lt; log::Verbosity &gt; fileVerbosity(const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01460">logger.cpp:1460</a></div></div>
<div class="ttc" id="classbitpit_1_1ParaTree_xhtml_aedea46c7857bffcebb567995285d40db"><div class="ttname"><a href="classbitpit_1_1ParaTree.xhtml#aedea46c7857bffcebb567995285d40db">bitpit::ParaTree::getNumOctants</a></div><div class="ttdeci">uint32_t getNumOctants() const </div><div class="ttdef"><b>Definition:</b> <a href="ParaTree_8cpp_source.xhtml#l01390">ParaTree.cpp:1390</a></div></div>
<div class="ttc" id="classbitpit_1_1ParaTree_xhtml_ab4aa4521f6f8b2c046ad2bcb57bf568d"><div class="ttname"><a href="classbitpit_1_1ParaTree.xhtml#ab4aa4521f6f8b2c046ad2bcb57bf568d">bitpit::ParaTree::updateConnectivity</a></div><div class="ttdeci">void updateConnectivity()</div><div class="ttdef"><b>Definition:</b> <a href="ParaTree_8cpp_source.xhtml#l02806">ParaTree.cpp:2806</a></div></div>
<div class="ttc" id="classbitpit_1_1ParaTree_xhtml_a5eacb88f2324b915ba8dbac95c994755"><div class="ttname"><a href="classbitpit_1_1ParaTree.xhtml#a5eacb88f2324b915ba8dbac95c994755">bitpit::ParaTree::adaptGlobalRefine</a></div><div class="ttdeci">bool adaptGlobalRefine(bool mapper_flag=false)</div><div class="ttdef"><b>Definition:</b> <a href="ParaTree_8cpp_source.xhtml#l02530">ParaTree.cpp:2530</a></div></div>
<div class="ttc" id="classbitpit_1_1ParaTree_xhtml_a79732d79d809a863e4f8b918154da561"><div class="ttname"><a href="classbitpit_1_1ParaTree.xhtml#a79732d79d809a863e4f8b918154da561">bitpit::ParaTree::getNumGhosts</a></div><div class="ttdeci">uint32_t getNumGhosts() const </div><div class="ttdef"><b>Definition:</b> <a href="ParaTree_8cpp_source.xhtml#l01398">ParaTree.cpp:1398</a></div></div>
<div class="ttc" id="classbitpit_1_1ParaTree_xhtml_afb007fe22f8e4450f81e57508ddea43b"><div class="ttname"><a href="classbitpit_1_1ParaTree.xhtml#afb007fe22f8e4450f81e57508ddea43b">bitpit::ParaTree::getGhostOctant</a></div><div class="ttdeci">Octant * getGhostOctant(uint32_t idx)</div><div class="ttdef"><b>Definition:</b> <a href="ParaTree_8cpp_source.xhtml#l01748">ParaTree.cpp:1748</a></div></div>
<div class="ttc" id="group__MathFunctions_xhtml_ga6da0697577be6fda9b574b2344c58014"><div class="ttname"><a href="group__MathFunctions.xhtml#ga6da0697577be6fda9b574b2344c58014">pow</a></div><div class="ttdeci">std::array&lt; T, d &gt; pow(std::array&lt; T, d &gt; &amp;x, double p)</div><div class="ttdef"><b>Definition:</b> <a href="MathOperators__array_8tpp_source.xhtml#l00637">MathOperators_array.tpp:637</a></div></div>
<div class="ttc" id="classbitpit_1_1PabloUniform_xhtml_a42de7a4c2923568a21d3e951a85bf1c3"><div class="ttname"><a href="classbitpit_1_1PabloUniform.xhtml#a42de7a4c2923568a21d3e951a85bf1c3">bitpit::PabloUniform::getNodes</a></div><div class="ttdeci">void getNodes(uint32_t idx, darr3vector &amp;nodes)</div><div class="ttdef"><b>Definition:</b> <a href="PabloUniform_8cpp_source.xhtml#l00345">PabloUniform.cpp:345</a></div></div>
<div class="ttc" id="classbitpit_1_1ParaTree_xhtml_ababbebf9bc8f6f7e55061079b8138aa6"><div class="ttname"><a href="classbitpit_1_1ParaTree.xhtml#ababbebf9bc8f6f7e55061079b8138aa6">bitpit::ParaTree::communicate</a></div><div class="ttdeci">void communicate(DataCommInterface&lt; Impl &gt; &amp;userData)</div><div class="ttdef"><b>Definition:</b> <a href="ParaTree_8hpp_source.xhtml#l00442">ParaTree.hpp:442</a></div></div>
<div class="ttc" id="classbitpit_1_1PabloUniform_xhtml"><div class="ttname"><a href="classbitpit_1_1PabloUniform.xhtml">bitpit::PabloUniform</a></div><div class="ttdoc">PABLO Uniform is an example of user class derived from ParaTree to map ParaTree in a uniform (square/...</div><div class="ttdef"><b>Definition:</b> <a href="PabloUniform_8hpp_source.xhtml#l00062">PabloUniform.hpp:62</a></div></div>
<div class="ttc" id="classbitpit_1_1ParaTree_xhtml_a098f36e490f514449565458be20d3f4e"><div class="ttname"><a href="classbitpit_1_1ParaTree.xhtml#a098f36e490f514449565458be20d3f4e">bitpit::ParaTree::writeTest</a></div><div class="ttdeci">void writeTest(std::string filename, dvector data)</div><div class="ttdef"><b>Definition:</b> <a href="ParaTree_8cpp_source.xhtml#l04801">ParaTree.cpp:4801</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ad6f89bcb2adf0f51cb232969b714e83b"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ad6f89bcb2adf0f51cb232969b714e83b">bitpit::log::consoleVerbosity</a></div><div class="ttdeci">LoggerManipulator&lt; log::Verbosity &gt; consoleVerbosity(const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01431">logger.cpp:1431</a></div></div>
<div class="ttc" id="classbitpit_1_1Octant_xhtml"><div class="ttname"><a href="classbitpit_1_1Octant.xhtml">bitpit::Octant</a></div><div class="ttdoc">Octant class definition. </div><div class="ttdef"><b>Definition:</b> <a href="Octant_8hpp_source.xhtml#l00079">Octant.hpp:79</a></div></div>
<div class="ttc" id="classbitpit_1_1ParaTree_xhtml_ab6a1a1ee440397820bd1d0f81d02bf18"><div class="ttname"><a href="classbitpit_1_1ParaTree.xhtml#ab6a1a1ee440397820bd1d0f81d02bf18">bitpit::ParaTree::loadBalance</a></div><div class="ttdeci">void loadBalance(dvector *weight=NULL)</div><div class="ttdef"><b>Definition:</b> <a href="ParaTree_8cpp_source.xhtml#l02971">ParaTree.cpp:2971</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:23 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

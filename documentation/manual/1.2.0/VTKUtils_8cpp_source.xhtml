
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - src/IO/VTKUtils.cpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_fae119eb913a40fe8ed97cde8b98911e.xhtml">IO</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">VTKUtils.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;VTK.hpp&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">namespace </span>bitpit{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1vtk.xhtml#af025c60241ef04d341d95726996dd552">   35</a></span>&#160;uint8_t <a class="code" href="namespacebitpit_1_1vtk.xhtml#af025c60241ef04d341d95726996dd552">vtk::getNNodeInElement</a>( <span class="keyword">const</span> <a class="code" href="group__VTKEnums.xhtml#ga2224b32dc1c12ab1eb65044a1ed02c08">VTKElementType</a> &amp; t){</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordtype">int</span> myType = <span class="keyword">static_cast&lt;</span>std::underlying_type&lt;VTKElementType&gt;::type<span class="keyword">&gt;</span>(t);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">switch</span> (myType){</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">case</span> 1: </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <span class="keywordflow">return</span>(1);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">case</span> 3: </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keywordflow">return</span>(2);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordflow">case</span> 5: <span class="keywordflow">case</span> 21: </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordflow">return</span>(3);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">case</span> 8: <span class="keywordflow">case</span> 9:  <span class="keywordflow">case</span> 10: </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keywordflow">return</span>(4);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">case</span> 11: <span class="keywordflow">case</span> 12: <span class="keywordflow">case</span> 23: <span class="keywordflow">case</span> 24: </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            <span class="keywordflow">return</span>(8);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">case</span> 13: <span class="keywordflow">case</span> 22: </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">return</span>(6);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">case</span> 14: </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">return</span>(5) ;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">case</span> 25: </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">return</span>(20);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keywordflow">return</span>(0);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    };</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;};</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1vtk.xhtml#ab11e4706059b30ba7e2184b3570871d1">   69</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacebitpit_1_1vtk.xhtml#ab11e4706059b30ba7e2184b3570871d1">vtk::convertStringToDataArray</a>( <span class="keyword">const</span> std::string &amp;line, <a class="code" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;field  ){</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    std::string typ, name, code, com, offs ;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">int</span>         components(1), offset ;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>    codex ;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="group__VTKEnums.xhtml#ga442bde5dd01b348dd5667ca73f5ffa73">VTKDataType</a>  type ;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="group__VTKEnums.xhtml#ga1f8c30c6536d5ed697b58acbb45bc4c4">VTKFieldType</a> comp(VTKFieldType::SCALAR) ;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">bool</span>  success(<span class="keyword">true</span>) ;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">if</span>( <a class="code" href="group__commonUtils.xhtml#ga74c227d4f60cdedcd7264a7937fd09b2">bitpit::utils::keywordInString</a>( line, <span class="stringliteral">&quot;&lt;DataArray &quot;</span>) ){  </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        success = success &amp;&amp; bitpit::utils::getAfterKeyword( line, <span class="stringliteral">&quot;type=&quot;</span>, <span class="charliteral">&#39;\&quot;&#39;</span>, typ) ;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        success = success &amp;&amp; bitpit::utils::getAfterKeyword( line, <span class="stringliteral">&quot;Name=&quot;</span>, <span class="charliteral">&#39;\&quot;&#39;</span>, name) ;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        success = success &amp;&amp; bitpit::utils::getAfterKeyword( line, <span class="stringliteral">&quot;format=&quot;</span>, <span class="charliteral">&#39;\&quot;&#39;</span>, code) ;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">if</span>( bitpit::utils::getAfterKeyword( line, <span class="stringliteral">&quot;NumberOfComponents=&quot;</span>, <span class="charliteral">&#39;\&quot;&#39;</span>, com)  ){</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <a class="code" href="group__commonUtils.xhtml#ga6d129095e8d03237f1ad81cee6efa771">bitpit::utils::convertString</a>( com, components ) ;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        };</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">if</span>(components==3)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            comp=VTKFieldType::VECTOR ;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <a class="code" href="namespacebitpit_1_1vtk.xhtml#a851b8014f4a70a9c63009fef22cd34ab">vtk::convertStringToEnum</a>( typ, type) ;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <a class="code" href="namespacebitpit_1_1vtk.xhtml#a851b8014f4a70a9c63009fef22cd34ab">vtk::convertStringToEnum</a>( code, codex) ;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a80362219acdbd136302e391c2c4143f0">setDataType</a>(type) ;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a34535a33950fe980a452be33812a5292">setName</a>(name) ;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        field.<a class="code" href="classbitpit_1_1VTKField.xhtml#ab34679a05dce0831de942d8cd9c12119">setCodification</a>(codex) ;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">if</span>(name != <span class="stringliteral">&quot;connectivity&quot;</span>) </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            field.<a class="code" href="classbitpit_1_1VTKField.xhtml#ad3ff7468f7a4c7271c1c62fe4ccaf733">setFieldType</a>(comp) ;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">if</span>(code==<span class="stringliteral">&quot;appended&quot;</span>) {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">if</span>( bitpit::utils::getAfterKeyword( line, <span class="stringliteral">&quot;offset=&quot;</span>, <span class="charliteral">&#39;\&quot;&#39;</span>, offs) ){</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <a class="code" href="group__commonUtils.xhtml#ga6d129095e8d03237f1ad81cee6efa771">bitpit::utils::convertString</a>( offs, offset ) ;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                field.<a class="code" href="classbitpit_1_1VTKField.xhtml#afbb417b5a6e07cf3a24a0146fc1a1391">setOffset</a>(offset) ;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                success = false ;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            };</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">return</span> success ;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">return</span> false ;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    };</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;};</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1vtk.xhtml#a21cfa5d293f233e4b9409f1a027ae68e">  127</a></span>&#160;std::string  <a class="code" href="namespacebitpit_1_1vtk.xhtml#a21cfa5d293f233e4b9409f1a027ae68e">vtk::convertDataArrayToString</a>( <span class="keyword">const</span> <a class="code" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;field ){</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    std::stringstream   os(<span class="stringliteral">&quot;&quot;</span>) ;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordtype">unsigned</span>            comp = <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span><span class="keyword">&gt;</span>(field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a5100f02d88724124b74ed19be9301f0a">getFieldType</a>())  ;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">if</span>( field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a5100f02d88724124b74ed19be9301f0a">getFieldType</a>() != VTKFieldType::SCALAR &amp;&amp; field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a5100f02d88724124b74ed19be9301f0a">getFieldType</a>() != VTKFieldType::VECTOR )</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        comp = 1 ;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    os &lt;&lt; <span class="stringliteral">&quot;        &lt;DataArray &quot;</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        &lt;&lt; <span class="stringliteral">&quot;type=\&quot;&quot;</span> &lt;&lt; <a class="code" href="namespacebitpit_1_1vtk.xhtml#a8a34afb271f1cff7cc71e7870d567f7c">vtk::convertEnumToString</a>( field.<a class="code" href="classbitpit_1_1VTKField.xhtml#aa46ea50107150ebd252bedb204ff9380">getDataType</a>() ) &lt;&lt; <span class="stringliteral">&quot;\&quot; &quot;</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        &lt;&lt; <span class="stringliteral">&quot;Name=\&quot;&quot;</span> &lt;&lt; field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a191f68cfec1ae1992fb16a2248b06570">getName</a>() &lt;&lt; <span class="stringliteral">&quot;\&quot; &quot;</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        &lt;&lt; <span class="stringliteral">&quot;NumberOfComponents=\&quot;&quot;</span>&lt;&lt; comp &lt;&lt; <span class="stringliteral">&quot;\&quot; &quot;</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        &lt;&lt; <span class="stringliteral">&quot;format=\&quot;&quot;</span> &lt;&lt; <a class="code" href="namespacebitpit_1_1vtk.xhtml#a8a34afb271f1cff7cc71e7870d567f7c">vtk::convertEnumToString</a>(field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a455ba8df88b3662485f551e9d44bc40f">getCodification</a>()) &lt;&lt; <span class="stringliteral">&quot;\&quot; &quot;</span>;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">if</span>( field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a455ba8df88b3662485f551e9d44bc40f">getCodification</a>() == VTKFormat::APPENDED ){</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;offset=\&quot;&quot;</span> &lt;&lt; field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a2c9db950a0400a4ef68003931f274d13">getOffset</a>() &lt;&lt; <span class="stringliteral">&quot;\&quot; &quot;</span> ;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    };</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    os &lt;&lt; <span class="stringliteral">&quot;&gt;&quot;</span> ;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">return</span>( os.str() ) ;       </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;};</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1vtk.xhtml#a8f72ddf0f1411d45a5700acbe8e29880">  157</a></span>&#160;std::string  <a class="code" href="namespacebitpit_1_1vtk.xhtml#a8f72ddf0f1411d45a5700acbe8e29880">vtk::convertPDataArrayToString</a>( <span class="keyword">const</span> <a class="code" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;field ){</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    std::stringstream  os(<span class="stringliteral">&quot;&quot;</span>) ;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordtype">unsigned</span>            comp = <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span><span class="keyword">&gt;</span>(field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a5100f02d88724124b74ed19be9301f0a">getFieldType</a>())  ;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">if</span>( field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a5100f02d88724124b74ed19be9301f0a">getFieldType</a>() != VTKFieldType::SCALAR &amp;&amp; field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a5100f02d88724124b74ed19be9301f0a">getFieldType</a>() != VTKFieldType::VECTOR )</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        comp = 1 ;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    os &lt;&lt; <span class="stringliteral">&quot;        &lt;PDataArray &quot;</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        &lt;&lt; <span class="stringliteral">&quot;type=\&quot;&quot;</span> &lt;&lt; <a class="code" href="namespacebitpit_1_1vtk.xhtml#a8a34afb271f1cff7cc71e7870d567f7c">vtk::convertEnumToString</a>(field.<a class="code" href="classbitpit_1_1VTKField.xhtml#aa46ea50107150ebd252bedb204ff9380">getDataType</a>()) &lt;&lt; <span class="stringliteral">&quot;\&quot; &quot;</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        &lt;&lt; <span class="stringliteral">&quot;Name=\&quot;&quot;</span> &lt;&lt; field.<a class="code" href="classbitpit_1_1VTKField.xhtml#a191f68cfec1ae1992fb16a2248b06570">getName</a>() &lt;&lt; <span class="stringliteral">&quot;\&quot; &quot;</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        &lt;&lt; <span class="stringliteral">&quot;NumberOfComponents=\&quot;&quot;</span>&lt;&lt; comp &lt;&lt; <span class="stringliteral">&quot;\&quot; &quot;</span> </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        &lt;&lt; <span class="stringliteral">&quot;&gt;&quot;</span> ;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">return</span>( os.str() ) ;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;};</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1vtk.xhtml#a8a34afb271f1cff7cc71e7870d567f7c">  180</a></span>&#160;std::string <a class="code" href="namespacebitpit_1_1vtk.xhtml#a8a34afb271f1cff7cc71e7870d567f7c">vtk::convertEnumToString</a>( <span class="keyword">const</span> <a class="code" href="group__VTKEnums.xhtml#ga7e8de9746792a1a21608002941e870c9">VTKLocation</a> &amp;loc ){</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;   </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">switch</span>(loc){</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordflow">case</span> VTKLocation::CELL :</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Cell&quot;</span>);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">case</span> VTKLocation::POINT :</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Point&quot;</span>);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">case</span> VTKLocation::UNDEFINED :</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Undefined&quot;</span>) ;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Undefined&quot;</span>) ;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    };</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;};</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1vtk.xhtml#aaf48066a23a56f97e64416d28aa2f2ad">  199</a></span>&#160;std::string <a class="code" href="namespacebitpit_1_1vtk.xhtml#a8a34afb271f1cff7cc71e7870d567f7c">vtk::convertEnumToString</a>( <span class="keyword">const</span> <a class="code" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a> &amp;cod ){</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">switch</span>(cod){</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">case</span> VTKFormat::ASCII :</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;ascii&quot;</span>);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">case</span> VTKFormat::APPENDED :</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;appended&quot;</span>);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">case</span> VTKFormat::UNDEFINED :</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Undefined&quot;</span>) ;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Undefined&quot;</span>) ;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    };</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;};</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1vtk.xhtml#a37012ecfdde3dcbd2c98eb47f90ebc2a">  218</a></span>&#160;std::string <a class="code" href="namespacebitpit_1_1vtk.xhtml#a8a34afb271f1cff7cc71e7870d567f7c">vtk::convertEnumToString</a>( <span class="keyword">const</span> <a class="code" href="group__VTKEnums.xhtml#ga442bde5dd01b348dd5667ca73f5ffa73">VTKDataType</a> &amp;type ){</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">switch</span>(type){</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">case</span> VTKDataType::Int8 :</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Int8&quot;</span>);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordflow">case</span> VTKDataType::Int16 :</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Int16&quot;</span>);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">case</span> VTKDataType::Int32 :</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Int32&quot;</span>);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">case</span> VTKDataType::Int64 :</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Int64&quot;</span>);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keywordflow">case</span> VTKDataType::UInt8 :</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;UInt8&quot;</span>);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keywordflow">case</span> VTKDataType::UInt16 :</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;UInt16&quot;</span>);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">case</span> VTKDataType::UInt32 :</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;UInt32&quot;</span>);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">case</span> VTKDataType::UInt64 :</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;UInt64&quot;</span>);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">case</span> VTKDataType::Float32 :</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Float32&quot;</span>);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keywordflow">case</span> VTKDataType::Float64 :</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Float64&quot;</span>);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keywordflow">case</span> VTKDataType::UNDEFINED :</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Undefined&quot;</span>);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <span class="keywordflow">return</span>(<span class="stringliteral">&quot;Undefined&quot;</span>) ;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    };</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;};</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1vtk.xhtml#a851b8014f4a70a9c63009fef22cd34ab">  254</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacebitpit_1_1vtk.xhtml#a851b8014f4a70a9c63009fef22cd34ab">vtk::convertStringToEnum</a>(  <span class="keyword">const</span> std::string &amp;str, <a class="code" href="group__VTKEnums.xhtml#ga7e8de9746792a1a21608002941e870c9">VTKLocation</a> &amp;loc ){</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">if</span>( str == <span class="stringliteral">&quot;Cell&quot;</span>){</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        loc = VTKLocation::CELL;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( str == <span class="stringliteral">&quot;Point&quot;</span> ){</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        loc = VTKLocation::POINT;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        loc = VTKLocation::UNDEFINED ;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    };</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;};</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1vtk.xhtml#adc58cd9a57012016d9322c0b5b5f690b">  278</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacebitpit_1_1vtk.xhtml#a851b8014f4a70a9c63009fef22cd34ab">vtk::convertStringToEnum</a>( <span class="keyword">const</span>  std::string &amp;str, <a class="code" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a> &amp;cod ){</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordflow">if</span>( str == <span class="stringliteral">&quot;ascii&quot;</span>){</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        cod = VTKFormat::ASCII ;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( str == <span class="stringliteral">&quot;appended&quot;</span> ){</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        cod = VTKFormat::APPENDED ;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        cod = VTKFormat::UNDEFINED ;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    };</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;};</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1vtk.xhtml#aca1e2af864a4f1c324a43c861ca02ed7">  302</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacebitpit_1_1vtk.xhtml#a851b8014f4a70a9c63009fef22cd34ab">vtk::convertStringToEnum</a>( <span class="keyword">const</span> std::string &amp;str, <a class="code" href="group__VTKEnums.xhtml#ga442bde5dd01b348dd5667ca73f5ffa73">VTKDataType</a> &amp;type ){</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">if</span> ( str ==<span class="stringliteral">&quot;Int8&quot;</span> ){</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        type = VTKDataType::Int8;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( str ==<span class="stringliteral">&quot;Int16&quot;</span> ){</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        type = VTKDataType::Int16;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( str ==<span class="stringliteral">&quot;Int32&quot;</span> ){</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        type = VTKDataType::Int32;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    }</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( str ==<span class="stringliteral">&quot;Int64&quot;</span> ){</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        type = VTKDataType::Int64;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    }</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( str ==<span class="stringliteral">&quot;UInt8&quot;</span> ){</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        type = VTKDataType::UInt8;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    }</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( str ==<span class="stringliteral">&quot;UInt16&quot;</span> ){</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        type = VTKDataType::UInt16;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( str ==<span class="stringliteral">&quot;UInt32&quot;</span> ){</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        type = VTKDataType::UInt32;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( str ==<span class="stringliteral">&quot;UInt64&quot;</span> ){</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        type = VTKDataType::UInt64;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( str ==<span class="stringliteral">&quot;Float32&quot;</span> ){</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        type = VTKDataType::Float32;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    }</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( str ==<span class="stringliteral">&quot;Float64&quot;</span> ){</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        type = VTKDataType::Float64;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        type = VTKDataType::UNDEFINED;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">return</span>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;};</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;}</div>
<div class="ttc" id="group__commonUtils_xhtml_ga74c227d4f60cdedcd7264a7937fd09b2"><div class="ttname"><a href="group__commonUtils.xhtml#ga74c227d4f60cdedcd7264a7937fd09b2">bitpit::utils::keywordInString</a></div><div class="ttdeci">bool keywordInString(std::string, std::string)</div><div class="ttdef"><b>Definition:</b> <a href="utilsString_8tpp_source.xhtml#l00261">utilsString.tpp:261</a></div></div>
<div class="ttc" id="group__VTKEnums_xhtml_ga2197e628becd3f4d3093e1f681b5deb8"><div class="ttname"><a href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">bitpit::VTKFormat</a></div><div class="ttdeci">VTKFormat</div><div class="ttdef"><b>Definition:</b> <a href="VTK_8hpp_source.xhtml#l00088">VTK.hpp:88</a></div></div>
<div class="ttc" id="group__VTKEnums_xhtml_ga442bde5dd01b348dd5667ca73f5ffa73"><div class="ttname"><a href="group__VTKEnums.xhtml#ga442bde5dd01b348dd5667ca73f5ffa73">bitpit::VTKDataType</a></div><div class="ttdeci">VTKDataType</div><div class="ttdef"><b>Definition:</b> <a href="VTK_8hpp_source.xhtml#l00070">VTK.hpp:70</a></div></div>
<div class="ttc" id="group__VTKEnums_xhtml_ga7e8de9746792a1a21608002941e870c9"><div class="ttname"><a href="group__VTKEnums.xhtml#ga7e8de9746792a1a21608002941e870c9">bitpit::VTKLocation</a></div><div class="ttdeci">VTKLocation</div><div class="ttdef"><b>Definition:</b> <a href="VTK_8hpp_source.xhtml#l00098">VTK.hpp:98</a></div></div>
<div class="ttc" id="classbitpit_1_1VTKField_xhtml_a455ba8df88b3662485f551e9d44bc40f"><div class="ttname"><a href="classbitpit_1_1VTKField.xhtml#a455ba8df88b3662485f551e9d44bc40f">bitpit::VTKField::getCodification</a></div><div class="ttdeci">VTKFormat getCodification() const </div><div class="ttdef"><b>Definition:</b> <a href="VTKField_8cpp_source.xhtml#l00215">VTKField.cpp:215</a></div></div>
<div class="ttc" id="namespacebitpit_1_1vtk_xhtml_a8f72ddf0f1411d45a5700acbe8e29880"><div class="ttname"><a href="namespacebitpit_1_1vtk.xhtml#a8f72ddf0f1411d45a5700acbe8e29880">bitpit::vtk::convertPDataArrayToString</a></div><div class="ttdeci">std::string convertPDataArrayToString(const VTKField &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="VTKUtils_8cpp_source.xhtml#l00157">VTKUtils.cpp:157</a></div></div>
<div class="ttc" id="classbitpit_1_1VTKField_xhtml_afbb417b5a6e07cf3a24a0146fc1a1391"><div class="ttname"><a href="classbitpit_1_1VTKField.xhtml#afbb417b5a6e07cf3a24a0146fc1a1391">bitpit::VTKField::setOffset</a></div><div class="ttdeci">void setOffset(uint64_t)</div><div class="ttdef"><b>Definition:</b> <a href="VTKField_8cpp_source.xhtml#l00151">VTKField.cpp:151</a></div></div>
<div class="ttc" id="classbitpit_1_1VTKField_xhtml_ab34679a05dce0831de942d8cd9c12119"><div class="ttname"><a href="classbitpit_1_1VTKField.xhtml#ab34679a05dce0831de942d8cd9c12119">bitpit::VTKField::setCodification</a></div><div class="ttdeci">void setCodification(VTKFormat)</div><div class="ttdef"><b>Definition:</b> <a href="VTKField_8cpp_source.xhtml#l00124">VTKField.cpp:124</a></div></div>
<div class="ttc" id="classbitpit_1_1VTKField_xhtml_a2c9db950a0400a4ef68003931f274d13"><div class="ttname"><a href="classbitpit_1_1VTKField.xhtml#a2c9db950a0400a4ef68003931f274d13">bitpit::VTKField::getOffset</a></div><div class="ttdeci">uint64_t getOffset() const </div><div class="ttdef"><b>Definition:</b> <a href="VTKField_8cpp_source.xhtml#l00223">VTKField.cpp:223</a></div></div>
<div class="ttc" id="classbitpit_1_1VTKField_xhtml_aa46ea50107150ebd252bedb204ff9380"><div class="ttname"><a href="classbitpit_1_1VTKField.xhtml#aa46ea50107150ebd252bedb204ff9380">bitpit::VTKField::getDataType</a></div><div class="ttdeci">VTKDataType getDataType() const </div><div class="ttdef"><b>Definition:</b> <a href="VTKField_8cpp_source.xhtml#l00199">VTKField.cpp:199</a></div></div>
<div class="ttc" id="classbitpit_1_1VTKField_xhtml_a34535a33950fe980a452be33812a5292"><div class="ttname"><a href="classbitpit_1_1VTKField.xhtml#a34535a33950fe980a452be33812a5292">bitpit::VTKField::setName</a></div><div class="ttdeci">void setName(std::string)</div><div class="ttdef"><b>Definition:</b> <a href="VTKField_8cpp_source.xhtml#l00097">VTKField.cpp:97</a></div></div>
<div class="ttc" id="group__VTKEnums_xhtml_ga1f8c30c6536d5ed697b58acbb45bc4c4"><div class="ttname"><a href="group__VTKEnums.xhtml#ga1f8c30c6536d5ed697b58acbb45bc4c4">bitpit::VTKFieldType</a></div><div class="ttdeci">VTKFieldType</div><div class="ttdef"><b>Definition:</b> <a href="VTK_8hpp_source.xhtml#l00059">VTK.hpp:59</a></div></div>
<div class="ttc" id="namespacebitpit_1_1vtk_xhtml_af025c60241ef04d341d95726996dd552"><div class="ttname"><a href="namespacebitpit_1_1vtk.xhtml#af025c60241ef04d341d95726996dd552">bitpit::vtk::getNNodeInElement</a></div><div class="ttdeci">uint8_t getNNodeInElement(const VTKElementType &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="VTKUtils_8cpp_source.xhtml#l00035">VTKUtils.cpp:35</a></div></div>
<div class="ttc" id="classbitpit_1_1VTKField_xhtml_ad3ff7468f7a4c7271c1c62fe4ccaf733"><div class="ttname"><a href="classbitpit_1_1VTKField.xhtml#ad3ff7468f7a4c7271c1c62fe4ccaf733">bitpit::VTKField::setFieldType</a></div><div class="ttdeci">void setFieldType(VTKFieldType)</div><div class="ttdef"><b>Definition:</b> <a href="VTKField_8cpp_source.xhtml#l00133">VTKField.cpp:133</a></div></div>
<div class="ttc" id="classbitpit_1_1VTKField_xhtml_a5100f02d88724124b74ed19be9301f0a"><div class="ttname"><a href="classbitpit_1_1VTKField.xhtml#a5100f02d88724124b74ed19be9301f0a">bitpit::VTKField::getFieldType</a></div><div class="ttdeci">VTKFieldType getFieldType() const </div><div class="ttdef"><b>Definition:</b> <a href="VTKField_8cpp_source.xhtml#l00191">VTKField.cpp:191</a></div></div>
<div class="ttc" id="classbitpit_1_1VTKField_xhtml_a80362219acdbd136302e391c2c4143f0"><div class="ttname"><a href="classbitpit_1_1VTKField.xhtml#a80362219acdbd136302e391c2c4143f0">bitpit::VTKField::setDataType</a></div><div class="ttdeci">void setDataType(VTKDataType)</div><div class="ttdef"><b>Definition:</b> <a href="VTKField_8cpp_source.xhtml#l00106">VTKField.cpp:106</a></div></div>
<div class="ttc" id="classbitpit_1_1VTKField_xhtml"><div class="ttname"><a href="classbitpit_1_1VTKField.xhtml">bitpit::VTKField</a></div><div class="ttdoc">VTKField handles geometry and data field information for the VTK format. </div><div class="ttdef"><b>Definition:</b> <a href="VTK_8hpp_source.xhtml#l00220">VTK.hpp:220</a></div></div>
<div class="ttc" id="namespacebitpit_1_1vtk_xhtml_a21cfa5d293f233e4b9409f1a027ae68e"><div class="ttname"><a href="namespacebitpit_1_1vtk.xhtml#a21cfa5d293f233e4b9409f1a027ae68e">bitpit::vtk::convertDataArrayToString</a></div><div class="ttdeci">std::string convertDataArrayToString(const VTKField &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="VTKUtils_8cpp_source.xhtml#l00127">VTKUtils.cpp:127</a></div></div>
<div class="ttc" id="namespacebitpit_1_1vtk_xhtml_a851b8014f4a70a9c63009fef22cd34ab"><div class="ttname"><a href="namespacebitpit_1_1vtk.xhtml#a851b8014f4a70a9c63009fef22cd34ab">bitpit::vtk::convertStringToEnum</a></div><div class="ttdeci">bool convertStringToEnum(const std::string &amp;, VTKLocation &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="VTKUtils_8cpp_source.xhtml#l00254">VTKUtils.cpp:254</a></div></div>
<div class="ttc" id="classbitpit_1_1VTKField_xhtml_a191f68cfec1ae1992fb16a2248b06570"><div class="ttname"><a href="classbitpit_1_1VTKField.xhtml#a191f68cfec1ae1992fb16a2248b06570">bitpit::VTKField::getName</a></div><div class="ttdeci">std::string getName() const </div><div class="ttdef"><b>Definition:</b> <a href="VTKField_8cpp_source.xhtml#l00183">VTKField.cpp:183</a></div></div>
<div class="ttc" id="group__VTKEnums_xhtml_ga2224b32dc1c12ab1eb65044a1ed02c08"><div class="ttname"><a href="group__VTKEnums.xhtml#ga2224b32dc1c12ab1eb65044a1ed02c08">bitpit::VTKElementType</a></div><div class="ttdeci">VTKElementType</div><div class="ttdef"><b>Definition:</b> <a href="VTK_8hpp_source.xhtml#l00108">VTK.hpp:108</a></div></div>
<div class="ttc" id="namespacebitpit_1_1vtk_xhtml_a8a34afb271f1cff7cc71e7870d567f7c"><div class="ttname"><a href="namespacebitpit_1_1vtk.xhtml#a8a34afb271f1cff7cc71e7870d567f7c">bitpit::vtk::convertEnumToString</a></div><div class="ttdeci">std::string convertEnumToString(const VTKLocation &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="VTKUtils_8cpp_source.xhtml#l00180">VTKUtils.cpp:180</a></div></div>
<div class="ttc" id="group__commonUtils_xhtml_ga6d129095e8d03237f1ad81cee6efa771"><div class="ttname"><a href="group__commonUtils.xhtml#ga6d129095e8d03237f1ad81cee6efa771">bitpit::utils::convertString</a></div><div class="ttdeci">void convertString(std::string, T &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="utilsString_8tpp_source.xhtml#l00279">utilsString.tpp:279</a></div></div>
<div class="ttc" id="namespacebitpit_1_1vtk_xhtml_ab11e4706059b30ba7e2184b3570871d1"><div class="ttname"><a href="namespacebitpit_1_1vtk.xhtml#ab11e4706059b30ba7e2184b3570871d1">bitpit::vtk::convertStringToDataArray</a></div><div class="ttdeci">bool convertStringToDataArray(const std::string &amp;, VTKField &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="VTKUtils_8cpp_source.xhtml#l00069">VTKUtils.cpp:69</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:24 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

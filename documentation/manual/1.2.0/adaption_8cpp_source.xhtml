
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - src/patchkernel/adaption.cpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_9dc7aa6b5c138a40bfa86c6dff2965ac.xhtml">patchkernel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">adaption.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;unordered_set&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;patch_kernel.hpp&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span>bitpit {</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1adaption.xhtml">   41</a></span>&#160;<span class="keyword">namespace </span>adaption</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a01a14a2f64ca4c0cacb609a667e7be12">   75</a></span>&#160;<a class="code" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a01a14a2f64ca4c0cacb609a667e7be12">InfoCollection::InfoCollection</a>()</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    m_cachedTypes.insert(adaption::TYPE_DELETION);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    m_cachedTypes.insert(adaption::TYPE_CREATION);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    m_cachedTypes.insert(adaption::TYPE_PARTITION_RECV);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    m_cachedTypes.insert(adaption::TYPE_PARTITION_SEND);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a0ce683147e93f76df2922291267f6e57">   90</a></span>&#160;<span class="keyword">const</span> std::vector&lt;Info&gt; &amp; <a class="code" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a0ce683147e93f76df2922291267f6e57">InfoCollection::data</a>() const noexcept</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">return</span> m_collection;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a87141eea922b21af9c05cf1d13d53a64">  102</a></span>&#160;std::vector&lt;Info&gt; &amp; <a class="code" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a0ce683147e93f76df2922291267f6e57">InfoCollection::data</a>() noexcept</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> m_collection;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a0c22c309e0fd56256380e67ea79565ce">  112</a></span>&#160;std::size_t <a class="code" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a0c22c309e0fd56256380e67ea79565ce">InfoCollection::create</a>()</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    m_collection.emplace_back();</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> m_collection.size() - 1;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a6aa388ba2323f3f2d8003bb69fea877a">  132</a></span>&#160;std::size_t <a class="code" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a0c22c309e0fd56256380e67ea79565ce">InfoCollection::create</a>(<a class="code" href="namespacebitpit_1_1adaption.xhtml#acd94e1004d190c95756c226592e13d72">Type</a> type, <a class="code" href="namespacebitpit_1_1adaption.xhtml#ae0d189981a5c510cf2c009cba42b6514">Entity</a> entity, <span class="keywordtype">int</span> rank)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    infoData_t infoData = infoData_t(type, entity, rank);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">bool</span> useCache = (m_cachedTypes.count(type) &gt; 0);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">if</span> (useCache) {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">if</span> (m_cache.count(infoData) &gt; 0) {;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keywordflow">return</span> m_cache.at(infoData);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    m_collection.emplace_back(type, entity, rank);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    std::size_t <span class="keywordtype">id</span> = m_collection.size() - 1;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">if</span> (useCache) {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        m_cache.insert({{infoData, <span class="keywordtype">id</span>}});</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">return</span> id;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#af8313ae4e212caf01aef9799242766b2">  159</a></span>&#160;<a class="code" href="structbitpit_1_1adaption_1_1Info.xhtml">Info</a> &amp; <a class="code" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#af8313ae4e212caf01aef9799242766b2">InfoCollection::at</a>(std::size_t n)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;{</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">if</span> (n &gt;= m_collection.size()) {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keywordflow">throw</span> std::out_of_range(<span class="stringliteral">&quot;Requested adaption info is not in the collection&quot;</span>);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">return</span> (*<span class="keyword">this</span>)[n];</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a2333be018e0043c52f6f47ad1286e843">  175</a></span>&#160;<span class="keyword">const</span> <a class="code" href="structbitpit_1_1adaption_1_1Info.xhtml">Info</a> &amp; <a class="code" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#af8313ae4e212caf01aef9799242766b2">InfoCollection::at</a>(std::size_t n)<span class="keyword"> const</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">if</span> (n &gt;= m_collection.size()) {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">throw</span> std::out_of_range(<span class="stringliteral">&quot;Requested adaption info is not in the collection&quot;</span>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">return</span> (*<span class="keyword">this</span>)[n];</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a1ad40a1bde9357ec24db4dea735157f7">  190</a></span>&#160;<a class="code" href="structbitpit_1_1adaption_1_1Info.xhtml">Info</a> &amp; <a class="code" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a1ad40a1bde9357ec24db4dea735157f7">InfoCollection::operator[]</a>(std::size_t <span class="keywordtype">id</span>)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">return</span> m_collection[id];</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;}</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#aff05af41abd54913d8bf3ed8d4c06449">  201</a></span>&#160;<span class="keyword">const</span> <a class="code" href="structbitpit_1_1adaption_1_1Info.xhtml">Info</a> &amp; <a class="code" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a1ad40a1bde9357ec24db4dea735157f7">InfoCollection::operator[]</a>(std::size_t <span class="keywordtype">id</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">return</span> m_collection[id];</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;}</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#af61f0ee342286c45612aacb17f01271c">  214</a></span>&#160;std::vector&lt;Info&gt; <a class="code" href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#af61f0ee342286c45612aacb17f01271c">InfoCollection::dump</a>()</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;{</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    std::vector&lt;Info&gt; exportedCollection;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    exportedCollection.swap(m_collection);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    m_cache.clear();</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordflow">return</span> exportedCollection;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="classbitpit_1_1FlatMapping.xhtml#a3384a17659759bfeeb539a0635a9078c">  245</a></span>&#160;<a class="code" href="classbitpit_1_1FlatMapping.xhtml#a3384a17659759bfeeb539a0635a9078c">FlatMapping::FlatMapping</a>()</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    : m_patch(nullptr)</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;{</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="classbitpit_1_1FlatMapping.xhtml#a31ed545fe020c5c17f830d09a2353460">  255</a></span>&#160;<a class="code" href="classbitpit_1_1FlatMapping.xhtml#a3384a17659759bfeeb539a0635a9078c">FlatMapping::FlatMapping</a>(<a class="code" href="classbitpit_1_1PatchKernel.xhtml">PatchKernel</a> *patch)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    : m_patch(patch)</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;{</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;}</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="classbitpit_1_1FlatMapping.xhtml#a650f889a61f4bd921b7fc431a4e8662a">  263</a></span>&#160;<a class="code" href="classbitpit_1_1FlatMapping.xhtml#a650f889a61f4bd921b7fc431a4e8662a">FlatMapping::~FlatMapping</a>()</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;{</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;}</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="classbitpit_1_1FlatMapping.xhtml#aafd400264555548fe07eecb84135c21d">  272</a></span>&#160;<span class="keyword">const</span> std::vector&lt;long&gt; &amp; <a class="code" href="classbitpit_1_1FlatMapping.xhtml#aafd400264555548fe07eecb84135c21d">FlatMapping::getNumbering</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keywordflow">return</span> m_numbering;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;}</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div>
<div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="classbitpit_1_1FlatMapping.xhtml#aa064f38356b4b03b3293ab2b83980822">  282</a></span>&#160;<span class="keyword">const</span> std::vector&lt;long&gt; &amp; <a class="code" href="classbitpit_1_1FlatMapping.xhtml#aa064f38356b4b03b3293ab2b83980822">FlatMapping::getMapping</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">return</span> m_mapping;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;}</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00306"></a><span class="lineno"><a class="line" href="classbitpit_1_1CellFlatMapping.xhtml#a79a851c607582bd65ed2377adb6157d3">  306</a></span>&#160;<a class="code" href="classbitpit_1_1CellFlatMapping.xhtml#a79a851c607582bd65ed2377adb6157d3">CellFlatMapping::CellFlatMapping</a>()</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    : <a class="code" href="classbitpit_1_1FlatMapping.xhtml">FlatMapping</a>()</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;{</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;}</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="classbitpit_1_1CellFlatMapping.xhtml#a0767a40397871e2b425084db25fea9e7">  316</a></span>&#160;<a class="code" href="classbitpit_1_1CellFlatMapping.xhtml#a79a851c607582bd65ed2377adb6157d3">CellFlatMapping::CellFlatMapping</a>(<a class="code" href="classbitpit_1_1PatchKernel.xhtml">PatchKernel</a> *patch)</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    : <a class="code" href="classbitpit_1_1FlatMapping.xhtml">FlatMapping</a>(patch)</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;{</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    m_numbering.reserve(m_patch-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#a3f366837c2cc93ec757c533813b1ebea">getCellCount</a>());</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    m_mapping.reserve(m_patch-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#a3f366837c2cc93ec757c533813b1ebea">getCellCount</a>());</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keywordtype">long</span> flatId = -1;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;cell : m_patch-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#a1799d61f7a4ea2c0f043ee860de457fe">getCells</a>()) {</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        flatId++;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        m_numbering.emplace_back();</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="keywordtype">long</span> &amp;cellId = m_numbering.back();</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        cellId = cell.getId();</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        m_mapping.emplace_back();</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="keywordtype">long</span> &amp;cellMapping = m_mapping.back();</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        cellMapping = flatId;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    }</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;}</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div>
<div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="classbitpit_1_1CellFlatMapping.xhtml#ada287e7ff76bcdd9359bb874f1cc0a7d">  339</a></span>&#160;<a class="code" href="classbitpit_1_1CellFlatMapping.xhtml#ada287e7ff76bcdd9359bb874f1cc0a7d">CellFlatMapping::~CellFlatMapping</a>()</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;{</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;}</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno"><a class="line" href="classbitpit_1_1CellFlatMapping.xhtml#a625efd7d440d6dce83bf69d16f1b493d">  349</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1CellFlatMapping.xhtml#a625efd7d440d6dce83bf69d16f1b493d">CellFlatMapping::update</a>(<span class="keyword">const</span> std::vector&lt;adaption::Info&gt; adaptionData)</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;{</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="comment">// Previous number of cells</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keywordtype">long</span> nPreviousCells = m_numbering.size();</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="comment">// Current number of cells</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keywordtype">long</span> nCurrentCells = m_patch-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#a3f366837c2cc93ec757c533813b1ebea">getCellCount</a>();</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="comment">// Find the first change</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordtype">long</span> firstChangedFlatId = <a class="code" href="group__MathFunctions.xhtml#ga88740c05f6c499a2784fcc1a221c1c9f">std::min</a>(nCurrentCells, nPreviousCells);</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordtype">long</span> firstChangedId     = m_patch-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#a1799d61f7a4ea2c0f043ee860de457fe">getCells</a>().getSizeMarker(firstChangedFlatId, Element::NULL_ID);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;adaptionInfo : adaptionData) {</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <span class="keywordflow">if</span> (adaptionInfo.entity != adaption::ENTITY_CELL) {</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;currentId : adaptionInfo.current) {</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keywordtype">long</span> currentFlatId = m_patch-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#a1799d61f7a4ea2c0f043ee860de457fe">getCells</a>().evalFlatIndex(currentId);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">if</span> (currentFlatId &lt; firstChangedFlatId) {</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                firstChangedId     = currentId;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                firstChangedFlatId = currentFlatId;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            }</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        }</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    }</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="comment">// The mapping, until the flat id with the first change, is a no-op mapping</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    m_mapping.resize(nCurrentCells);</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">long</span> flatId = 0; flatId &lt; firstChangedFlatId; ++flatId) {</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        m_mapping[flatId] = flatId;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    }</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="comment">// If there are no changes the mapping is already updated</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keywordflow">if</span> (firstChangedId &lt; 0) {</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="comment">// List of cells that have been deleted</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    std::unordered_set&lt;long&gt; removedIds;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;adaptionInfo : adaptionData) {</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordflow">if</span> (adaptionInfo.entity != adaption::ENTITY_CELL) {</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        }</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;previousId : adaptionInfo.previous) {</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            removedIds.insert(previousId);</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        }</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    }</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keywordtype">long</span> nRemovedCells = removedIds.size();</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="comment">// Create a mapping between cell ids and previous flat ids</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    std::unordered_map&lt;long, long&gt; previousFlatIds;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    std::unordered_map&lt;long, long&gt; removedFlatIds;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    previousFlatIds.reserve(nCurrentCells - firstChangedFlatId - nRemovedCells);</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    removedFlatIds.reserve(nRemovedCells);</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">long</span> previousFlatId = firstChangedFlatId; previousFlatId &lt; nPreviousCells; ++previousFlatId) {</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keywordtype">long</span> previousId = m_numbering[previousFlatId];</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        <span class="keywordflow">if</span> (removedIds.count(previousId) &gt; 0) {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            removedFlatIds.insert({{previousId, previousFlatId}});</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            previousFlatIds.insert({{previousId, previousFlatId}});</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        }</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    }</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="comment">// Add to the mapping the added cells</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;adaptionInfo : adaptionData) {</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="keywordflow">if</span> (adaptionInfo.entity != adaption::ENTITY_CELL) {</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        }</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="comment">// Ancestor flat index of the added cells</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <span class="keywordtype">long</span> ancestorFlatId;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="keywordflow">if</span> (adaptionInfo.previous.size() &gt; 0) {</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            ancestorFlatId = removedFlatIds.at(adaptionInfo.previous[0]);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            ancestorFlatId = -1;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        }</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <span class="comment">// Mapping of the added cells</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;currentId : adaptionInfo.current) {</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            previousFlatIds.insert({{currentId, ancestorFlatId}});</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        }</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    }</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    std::unordered_map&lt;long, long&gt;().swap(removedFlatIds);</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="comment">// Update numbering and mapping past the flat id with the first change</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    m_numbering.resize(nCurrentCells);</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="keyword">auto</span> cellIterator = m_patch-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#a1799d61f7a4ea2c0f043ee860de457fe">getCells</a>().getConstIterator(firstChangedId);</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">long</span> flatId = firstChangedFlatId; flatId &lt; nCurrentCells; ++flatId) {</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <span class="keywordtype">long</span> cellId = cellIterator-&gt;getId();</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        m_numbering[flatId] = cellId;</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        m_mapping[flatId]   = previousFlatIds[cellId];</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        cellIterator++;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    }</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;}</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;}</div>
<div class="ttc" id="classbitpit_1_1CellFlatMapping_xhtml_a625efd7d440d6dce83bf69d16f1b493d"><div class="ttname"><a href="classbitpit_1_1CellFlatMapping.xhtml#a625efd7d440d6dce83bf69d16f1b493d">bitpit::CellFlatMapping::update</a></div><div class="ttdeci">void update(const std::vector&lt; adaption::Info &gt; adaptionData)</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00349">adaption.cpp:349</a></div></div>
<div class="ttc" id="classbitpit_1_1FlatMapping_xhtml_aafd400264555548fe07eecb84135c21d"><div class="ttname"><a href="classbitpit_1_1FlatMapping.xhtml#aafd400264555548fe07eecb84135c21d">bitpit::FlatMapping::getNumbering</a></div><div class="ttdeci">const std::vector&lt; long &gt; &amp; getNumbering() const </div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00272">adaption.cpp:272</a></div></div>
<div class="ttc" id="classbitpit_1_1adaption_1_1InfoCollection_xhtml_a0ce683147e93f76df2922291267f6e57"><div class="ttname"><a href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a0ce683147e93f76df2922291267f6e57">bitpit::adaption::InfoCollection::data</a></div><div class="ttdeci">const std::vector&lt; Info &gt; &amp; data() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00090">adaption.cpp:90</a></div></div>
<div class="ttc" id="namespacebitpit_1_1adaption_xhtml_acd94e1004d190c95756c226592e13d72"><div class="ttname"><a href="namespacebitpit_1_1adaption.xhtml#acd94e1004d190c95756c226592e13d72">bitpit::adaption::Type</a></div><div class="ttdeci">Type</div><div class="ttdoc">The Type enum defines the type of adaption that has been performed. </div><div class="ttdef"><b>Definition:</b> <a href="adaption_8hpp_source.xhtml#l00036">adaption.hpp:36</a></div></div>
<div class="ttc" id="namespacebitpit_1_1adaption_xhtml_ae0d189981a5c510cf2c009cba42b6514"><div class="ttname"><a href="namespacebitpit_1_1adaption.xhtml#ae0d189981a5c510cf2c009cba42b6514">bitpit::adaption::Entity</a></div><div class="ttdeci">Entity</div><div class="ttdoc">The Entity enum defines the type of entities on which the adaption has been performed. </div><div class="ttdef"><b>Definition:</b> <a href="adaption_8hpp_source.xhtml#l00049">adaption.hpp:49</a></div></div>
<div class="ttc" id="classbitpit_1_1adaption_1_1InfoCollection_xhtml_a0c22c309e0fd56256380e67ea79565ce"><div class="ttname"><a href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a0c22c309e0fd56256380e67ea79565ce">bitpit::adaption::InfoCollection::create</a></div><div class="ttdeci">std::size_t create()</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00112">adaption.cpp:112</a></div></div>
<div class="ttc" id="classbitpit_1_1PatchKernel_xhtml_a3f366837c2cc93ec757c533813b1ebea"><div class="ttname"><a href="classbitpit_1_1PatchKernel.xhtml#a3f366837c2cc93ec757c533813b1ebea">bitpit::PatchKernel::getCellCount</a></div><div class="ttdeci">virtual long getCellCount() const </div><div class="ttdef"><b>Definition:</b> <a href="patch__kernel_8cpp_source.xhtml#l01017">patch_kernel.cpp:1017</a></div></div>
<div class="ttc" id="classbitpit_1_1CellFlatMapping_xhtml_ada287e7ff76bcdd9359bb874f1cc0a7d"><div class="ttname"><a href="classbitpit_1_1CellFlatMapping.xhtml#ada287e7ff76bcdd9359bb874f1cc0a7d">bitpit::CellFlatMapping::~CellFlatMapping</a></div><div class="ttdeci">~CellFlatMapping()</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00339">adaption.cpp:339</a></div></div>
<div class="ttc" id="classbitpit_1_1CellFlatMapping_xhtml_a79a851c607582bd65ed2377adb6157d3"><div class="ttname"><a href="classbitpit_1_1CellFlatMapping.xhtml#a79a851c607582bd65ed2377adb6157d3">bitpit::CellFlatMapping::CellFlatMapping</a></div><div class="ttdeci">CellFlatMapping()</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00306">adaption.cpp:306</a></div></div>
<div class="ttc" id="classbitpit_1_1FlatMapping_xhtml_aa064f38356b4b03b3293ab2b83980822"><div class="ttname"><a href="classbitpit_1_1FlatMapping.xhtml#aa064f38356b4b03b3293ab2b83980822">bitpit::FlatMapping::getMapping</a></div><div class="ttdeci">const std::vector&lt; long &gt; &amp; getMapping() const </div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00282">adaption.cpp:282</a></div></div>
<div class="ttc" id="classbitpit_1_1FlatMapping_xhtml_a650f889a61f4bd921b7fc431a4e8662a"><div class="ttname"><a href="classbitpit_1_1FlatMapping.xhtml#a650f889a61f4bd921b7fc431a4e8662a">bitpit::FlatMapping::~FlatMapping</a></div><div class="ttdeci">virtual ~FlatMapping()</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00263">adaption.cpp:263</a></div></div>
<div class="ttc" id="classbitpit_1_1adaption_1_1InfoCollection_xhtml_af61f0ee342286c45612aacb17f01271c"><div class="ttname"><a href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#af61f0ee342286c45612aacb17f01271c">bitpit::adaption::InfoCollection::dump</a></div><div class="ttdeci">std::vector&lt; Info &gt; dump()</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00214">adaption.cpp:214</a></div></div>
<div class="ttc" id="structbitpit_1_1adaption_1_1Info_xhtml"><div class="ttname"><a href="structbitpit_1_1adaption_1_1Info.xhtml">bitpit::adaption::Info</a></div><div class="ttdoc">The Info struct defines the information associated to an adaption. </div><div class="ttdef"><b>Definition:</b> <a href="adaption_8hpp_source.xhtml#l00055">adaption.hpp:55</a></div></div>
<div class="ttc" id="classbitpit_1_1FlatMapping_xhtml"><div class="ttname"><a href="classbitpit_1_1FlatMapping.xhtml">bitpit::FlatMapping</a></div><div class="ttdoc">The FlatMapping class allows to generate a mapping between an id-base numeration to a continuous-inde...</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8hpp_source.xhtml#l00105">adaption.hpp:105</a></div></div>
<div class="ttc" id="classbitpit_1_1FlatMapping_xhtml_a3384a17659759bfeeb539a0635a9078c"><div class="ttname"><a href="classbitpit_1_1FlatMapping.xhtml#a3384a17659759bfeeb539a0635a9078c">bitpit::FlatMapping::FlatMapping</a></div><div class="ttdeci">FlatMapping()</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00245">adaption.cpp:245</a></div></div>
<div class="ttc" id="classbitpit_1_1adaption_1_1InfoCollection_xhtml_a1ad40a1bde9357ec24db4dea735157f7"><div class="ttname"><a href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a1ad40a1bde9357ec24db4dea735157f7">bitpit::adaption::InfoCollection::operator[]</a></div><div class="ttdeci">Info &amp; operator[](std::size_t id)</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00190">adaption.cpp:190</a></div></div>
<div class="ttc" id="classbitpit_1_1PatchKernel_xhtml_a1799d61f7a4ea2c0f043ee860de457fe"><div class="ttname"><a href="classbitpit_1_1PatchKernel.xhtml#a1799d61f7a4ea2c0f043ee860de457fe">bitpit::PatchKernel::getCells</a></div><div class="ttdeci">PiercedVector&lt; Cell &gt; &amp; getCells()</div><div class="ttdef"><b>Definition:</b> <a href="patch__kernel_8cpp_source.xhtml#l01047">patch_kernel.cpp:1047</a></div></div>
<div class="ttc" id="classbitpit_1_1adaption_1_1InfoCollection_xhtml_a01a14a2f64ca4c0cacb609a667e7be12"><div class="ttname"><a href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#a01a14a2f64ca4c0cacb609a667e7be12">bitpit::adaption::InfoCollection::InfoCollection</a></div><div class="ttdeci">InfoCollection()</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00075">adaption.cpp:75</a></div></div>
<div class="ttc" id="classbitpit_1_1PatchKernel_xhtml"><div class="ttname"><a href="classbitpit_1_1PatchKernel.xhtml">bitpit::PatchKernel</a></div><div class="ttdoc">The PatchKernel class provides an interface for defining patches. </div><div class="ttdef"><b>Definition:</b> <a href="patch__kernel_8hpp_source.xhtml#l00081">patch_kernel.hpp:81</a></div></div>
<div class="ttc" id="classbitpit_1_1adaption_1_1InfoCollection_xhtml_af8313ae4e212caf01aef9799242766b2"><div class="ttname"><a href="classbitpit_1_1adaption_1_1InfoCollection.xhtml#af8313ae4e212caf01aef9799242766b2">bitpit::adaption::InfoCollection::at</a></div><div class="ttdeci">Info &amp; at(std::size_t id)</div><div class="ttdef"><b>Definition:</b> <a href="adaption_8cpp_source.xhtml#l00159">adaption.cpp:159</a></div></div>
<div class="ttc" id="group__MathFunctions_xhtml_ga88740c05f6c499a2784fcc1a221c1c9f"><div class="ttname"><a href="group__MathFunctions.xhtml#ga88740c05f6c499a2784fcc1a221c1c9f">min</a></div><div class="ttdeci">std::array&lt; T, d &gt; min(const std::array&lt; T, d &gt; &amp;x, const std::array&lt; T, d &gt; &amp;y)</div><div class="ttdef"><b>Definition:</b> <a href="MathOperators__array_8tpp_source.xhtml#l00067">MathOperators_array.tpp:67</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:24 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - src/patchkernel/cell.hpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_9dc7aa6b5c138a40bfa86c6dff2965ac.xhtml">patchkernel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">cell.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef __BITPIT_CELL_HPP__</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __BITPIT_CELL_HPP__</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;bitpit_containers.hpp&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;element.hpp&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>bitpit {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keyword">class </span>Cell;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">class </span>PatchKernel;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<a class="code" href="classbitpit_1_1IBinaryStream.xhtml">bitpit::IBinaryStream</a>&amp; <a class="code" href="group__Operators.xhtml#ga91ecc3462d869a3132ba96d017ae549b">operator&gt;&gt;</a>(<a class="code" href="classbitpit_1_1IBinaryStream.xhtml">bitpit::IBinaryStream</a> &amp;buf, <a class="code" href="classbitpit_1_1Cell.xhtml">bitpit::Cell</a>&amp; cell);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<a class="code" href="classbitpit_1_1OBinaryStream.xhtml">bitpit::OBinaryStream</a>&amp; <a class="code" href="group__Operators.xhtml#gae6ad1dc96cc1000aded39aecb5d66493">operator&lt;&lt;</a>(<a class="code" href="classbitpit_1_1OBinaryStream.xhtml">bitpit::OBinaryStream</a> &amp;buf, <span class="keyword">const</span> <a class="code" href="classbitpit_1_1Cell.xhtml">bitpit::Cell</a>&amp; cell);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>bitpit {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classbitpit_1_1Cell.xhtml">   44</a></span>&#160;<span class="keyword">class </span><a class="code" href="classbitpit_1_1Cell.xhtml">Cell</a> : <span class="keyword">public</span> <a class="code" href="classbitpit_1_1Element.xhtml">Element</a> {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classbitpit_1_1PatchKernel.xhtml">PatchKernel</a>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">friend</span> <a class="code" href="classbitpit_1_1OBinaryStream.xhtml">bitpit::OBinaryStream</a>&amp; (::operator&lt;&lt;) (<a class="code" href="classbitpit_1_1OBinaryStream.xhtml">bitpit::OBinaryStream</a>&amp; buf, <span class="keyword">const</span> <a class="code" href="classbitpit_1_1Cell.xhtml">Cell</a>&amp; cell);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">friend</span> <a class="code" href="classbitpit_1_1IBinaryStream.xhtml">bitpit::IBinaryStream</a>&amp; (::operator&gt;&gt;) (<a class="code" href="classbitpit_1_1IBinaryStream.xhtml">bitpit::IBinaryStream</a>&amp; buf, <a class="code" href="classbitpit_1_1Cell.xhtml">Cell</a>&amp; cell);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classbitpit_1_1Cell.xhtml#a9452849fe49171e02184bf1555e16494">Cell</a>();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="classbitpit_1_1Cell.xhtml#a9452849fe49171e02184bf1555e16494">Cell</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> &amp;<span class="keywordtype">id</span>, <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type = <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314af962ccefc7ceb3e5f1c38513458505b9">ElementInfo::UNDEFINED</a>,</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;         <span class="keywordtype">bool</span> interior = <span class="keyword">true</span>, <span class="keywordtype">bool</span> storeNeighbourhood = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="classbitpit_1_1Cell.xhtml#a9452849fe49171e02184bf1555e16494">Cell</a>(<span class="keyword">const</span> <a class="code" href="classbitpit_1_1Cell.xhtml">Cell</a> &amp;other);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="classbitpit_1_1Cell.xhtml#a9452849fe49171e02184bf1555e16494">Cell</a>(<a class="code" href="classbitpit_1_1Cell.xhtml">Cell</a>&amp;&amp; other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classbitpit_1_1Cell.xhtml">Cell</a>&amp; <a class="code" href="classbitpit_1_1Cell.xhtml#a2012817de3f1f1ffb0540ad9e739d848">operator = </a>(<span class="keyword">const</span> <a class="code" href="classbitpit_1_1Cell.xhtml">Cell</a> &amp;other);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="classbitpit_1_1Cell.xhtml">Cell</a>&amp; <a class="code" href="classbitpit_1_1Cell.xhtml#a2012817de3f1f1ffb0540ad9e739d848">operator=</a>(<a class="code" href="classbitpit_1_1Cell.xhtml">Cell</a>&amp;&amp; other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#acdce9c67696da61a59d7fdf2a469ba01">initialize</a>(<a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type, <span class="keywordtype">bool</span> interior, <span class="keywordtype">bool</span> storeNeighbourhood = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a5415789a8af4586940fa0fbc3e7d7f48">isInterior</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a302ab8ea3ca4344314d563d273f0b320">setPID</a>(<span class="keywordtype">int</span> pid);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Cell.xhtml#abb72de49bdeaf2147973e2ae3720bf8e">getPID</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a71e5b6426857ddee54a7ebf61f5b3b92">resetInterfaces</a>(<span class="keywordtype">bool</span> storeInterfaces = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a30edd43a587c9a0029165fb27e3dac77">setInterfaces</a>(std::vector&lt;std::vector&lt;long&gt;&gt; &amp;interfaces);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#ac7b560774d2cf4d858d851ef77f6366a">setInterface</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;index, <span class="keyword">const</span> <span class="keywordtype">long</span> &amp;interface);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#aa3582949c911b29f260cce92216b817b">pushInterface</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face, <span class="keyword">const</span> <span class="keywordtype">long</span> &amp;interface);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a5a99fcf991a72b8dc061d7175e6e855b">deleteInterface</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;i);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Cell.xhtml#af95f90cb1619d65d3613603079bafe44">getInterfaceCount</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Cell.xhtml#af95f90cb1619d65d3613603079bafe44">getInterfaceCount</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordtype">long</span> <a class="code" href="classbitpit_1_1Cell.xhtml#ab12abc7226f80ad99f9a7dd27129bd67">getInterface</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;index = 0) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">long</span> * <a class="code" href="classbitpit_1_1Cell.xhtml#a1d1d296b0cec58f89ef47f51ce09b20b">getInterfaces</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">long</span> * <a class="code" href="classbitpit_1_1Cell.xhtml#a1d1d296b0cec58f89ef47f51ce09b20b">getInterfaces</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Cell.xhtml#ac8344404d7845487c69fb50a6e9c46ab">findInterface</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;interface);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Cell.xhtml#ac8344404d7845487c69fb50a6e9c46ab">findInterface</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;interface);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a8861022c6b169ba9aad2b6ed340c0254">resetAdjacencies</a>(<span class="keywordtype">bool</span> storeAdjacencies = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#aa04b4ce52f7e4f30c9ea5b261e23be37">setAdjacencies</a>(std::vector&lt;std::vector&lt;long&gt;&gt; &amp;adjacencies);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#ad590d2251996ef44aad5c79fea68277f">setAdjacency</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;index, <span class="keyword">const</span> <span class="keywordtype">long</span> &amp;adjacencies);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a703f2ce12319b53c6804c5d0b54a0ca1">pushAdjacency</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face, <span class="keyword">const</span> <span class="keywordtype">long</span> &amp;adjacency);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a8b3bf978bde8640c4da2f25bd5d537e4">deleteAdjacency</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;i);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Cell.xhtml#aa61245982eeb160544d260289840a04f">getAdjacencyCount</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Cell.xhtml#aa61245982eeb160544d260289840a04f">getAdjacencyCount</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">long</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a8e451a8f6f5a1f323bedb040231ad49f">getAdjacency</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;index = 0) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">long</span> * <a class="code" href="classbitpit_1_1Cell.xhtml#a5caa1482ad646991f7cc73e4c09ef48e">getAdjacencies</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">long</span> * <a class="code" href="classbitpit_1_1Cell.xhtml#a5caa1482ad646991f7cc73e4c09ef48e">getAdjacencies</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a2b518a2c297a50b7a9bc6df8908b18d5">findAdjacency</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;adjacency);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a2b518a2c297a50b7a9bc6df8908b18d5">findAdjacency</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;adjacency);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a9fc5d6c572da5484da4a307694178520">findVertex</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> &amp;vertex);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a026d03c1f28550f8540cc5e103d822fc">isFaceBorder</a>(<span class="keywordtype">int</span> face) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#ab8ff7feeee1f8c4449a10603827ec037">display</a>(std::ostream &amp;out, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <span class="keywordtype">int</span> indent) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a3efeca8fc3ef399e0b5606a3da53f2b5">getBinarySize</a>( );</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Cell.xhtml#a34d99949ba9ea37374082bec49ff6934">setInterior</a>(<span class="keywordtype">bool</span> interior);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordtype">bool</span> m_interior;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">int</span> m_pid;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="classbitpit_1_1CollapsedVector2D.xhtml">bitpit::CollapsedVector2D&lt;long&gt;</a> m_interfaces;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="classbitpit_1_1CollapsedVector2D.xhtml">bitpit::CollapsedVector2D&lt;long&gt;</a> m_adjacencies;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordtype">void</span> _initialize(<span class="keywordtype">bool</span> interior, <span class="keywordtype">bool</span> storeNeighbourhood);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;};</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword">extern</span> <span class="keyword">template</span> <span class="keyword">class </span><a class="code" href="classbitpit_1_1PiercedVector.xhtml">PiercedVector&lt;Cell&gt;</a>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="classbitpit_1_1CollapsedVector2D_xhtml"><div class="ttname"><a href="classbitpit_1_1CollapsedVector2D.xhtml">bitpit::CollapsedVector2D&lt; long &gt;</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a8861022c6b169ba9aad2b6ed340c0254"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a8861022c6b169ba9aad2b6ed340c0254">bitpit::Cell::resetAdjacencies</a></div><div class="ttdeci">void resetAdjacencies(bool storeAdjacencies=true)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00438">cell.cpp:438</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_abb72de49bdeaf2147973e2ae3720bf8e"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#abb72de49bdeaf2147973e2ae3720bf8e">bitpit::Cell::getPID</a></div><div class="ttdeci">int getPID() const </div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00196">cell.cpp:196</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a8e451a8f6f5a1f323bedb040231ad49f"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a8e451a8f6f5a1f323bedb040231ad49f">bitpit::Cell::getAdjacency</a></div><div class="ttdeci">long getAdjacency(const int &amp;face, const int &amp;index=0) const </div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00571">cell.cpp:571</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a30edd43a587c9a0029165fb27e3dac77"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a30edd43a587c9a0029165fb27e3dac77">bitpit::Cell::setInterfaces</a></div><div class="ttdeci">void setInterfaces(std::vector&lt; std::vector&lt; long &gt;&gt; &amp;interfaces)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00231">cell.cpp:231</a></div></div>
<div class="ttc" id="classbitpit_1_1PiercedVector_xhtml"><div class="ttname"><a href="classbitpit_1_1PiercedVector.xhtml">bitpit::PiercedVector</a></div><div class="ttdoc">Metafunction for generating a pierced vector. </div><div class="ttdef"><b>Definition:</b> <a href="piercedVector_8hpp_source.xhtml#l00040">piercedVector.hpp:40</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a3efeca8fc3ef399e0b5606a3da53f2b5"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a3efeca8fc3ef399e0b5606a3da53f2b5">bitpit::Cell::getBinarySize</a></div><div class="ttdeci">unsigned int getBinarySize()</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00782">cell.cpp:782</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml"><div class="ttname"><a href="classbitpit_1_1Element.xhtml">bitpit::Element</a></div><div class="ttdoc">The Element class provides an interface for defining elements. </div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00107">element.hpp:107</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a1d1d296b0cec58f89ef47f51ce09b20b"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a1d1d296b0cec58f89ef47f51ce09b20b">bitpit::Cell::getInterfaces</a></div><div class="ttdeci">const long * getInterfaces() const </div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00360">cell.cpp:360</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a026d03c1f28550f8540cc5e103d822fc"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a026d03c1f28550f8540cc5e103d822fc">bitpit::Cell::isFaceBorder</a></div><div class="ttdeci">bool isFaceBorder(int face) const </div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00667">cell.cpp:667</a></div></div>
<div class="ttc" id="group__Operators_xhtml_gae6ad1dc96cc1000aded39aecb5d66493"><div class="ttname"><a href="group__Operators.xhtml#gae6ad1dc96cc1000aded39aecb5d66493">operator&lt;&lt;</a></div><div class="ttdeci">std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const std::array&lt; T, d &gt; &amp;x)</div><div class="ttdef"><b>Definition:</b> <a href="Operators__array_8tpp_source.xhtml#l01320">Operators_array.tpp:1320</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_af95f90cb1619d65d3613603079bafe44"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#af95f90cb1619d65d3613603079bafe44">bitpit::Cell::getInterfaceCount</a></div><div class="ttdeci">int getInterfaceCount() const </div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00324">cell.cpp:324</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314af962ccefc7ceb3e5f1c38513458505b9"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314af962ccefc7ceb3e5f1c38513458505b9">bitpit::ElementInfo::UNDEFINED</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00047">element.hpp:47</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_ad590d2251996ef44aad5c79fea68277f"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#ad590d2251996ef44aad5c79fea68277f">bitpit::Cell::setAdjacency</a></div><div class="ttdeci">void setAdjacency(const int &amp;face, const int &amp;index, const long &amp;adjacencies)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00485">cell.cpp:485</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_ab12abc7226f80ad99f9a7dd27129bd67"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#ab12abc7226f80ad99f9a7dd27129bd67">bitpit::Cell::getInterface</a></div><div class="ttdeci">long getInterface(const int &amp;face, const int &amp;index=0) const </div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00350">cell.cpp:350</a></div></div>
<div class="ttc" id="classbitpit_1_1OBinaryStream_xhtml"><div class="ttname"><a href="classbitpit_1_1OBinaryStream.xhtml">bitpit::OBinaryStream</a></div><div class="ttdoc">creates output binary stream </div><div class="ttdef"><b>Definition:</b> <a href="binary__stream_8hpp_source.xhtml#l00169">binary_stream.hpp:169</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a2012817de3f1f1ffb0540ad9e739d848"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a2012817de3f1f1ffb0540ad9e739d848">bitpit::Cell::operator=</a></div><div class="ttdeci">Cell &amp; operator=(const Cell &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00123">cell.cpp:123</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a5a99fcf991a72b8dc061d7175e6e855b"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a5a99fcf991a72b8dc061d7175e6e855b">bitpit::Cell::deleteInterface</a></div><div class="ttdeci">void deleteInterface(const int &amp;face, const int &amp;i)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00303">cell.cpp:303</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_acdce9c67696da61a59d7fdf2a469ba01"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#acdce9c67696da61a59d7fdf2a469ba01">bitpit::Cell::initialize</a></div><div class="ttdeci">void initialize(ElementInfo::Type type, bool interior, bool storeNeighbourhood=true)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00142">cell.cpp:142</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_aa3582949c911b29f260cce92216b817b"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#aa3582949c911b29f260cce92216b817b">bitpit::Cell::pushInterface</a></div><div class="ttdeci">void pushInterface(const int &amp;face, const long &amp;interface)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00275">cell.cpp:275</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a302ab8ea3ca4344314d563d273f0b320"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a302ab8ea3ca4344314d563d273f0b320">bitpit::Cell::setPID</a></div><div class="ttdeci">void setPID(int pid)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00186">cell.cpp:186</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a34d99949ba9ea37374082bec49ff6934"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a34d99949ba9ea37374082bec49ff6934">bitpit::Cell::setInterior</a></div><div class="ttdeci">void setInterior(bool interior)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00165">cell.cpp:165</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a9452849fe49171e02184bf1555e16494"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a9452849fe49171e02184bf1555e16494">bitpit::Cell::Cell</a></div><div class="ttdeci">Cell()</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00096">cell.cpp:96</a></div></div>
<div class="ttc" id="classbitpit_1_1IBinaryStream_xhtml"><div class="ttname"><a href="classbitpit_1_1IBinaryStream.xhtml">bitpit::IBinaryStream</a></div><div class="ttdoc">creates input binary stream </div><div class="ttdef"><b>Definition:</b> <a href="binary__stream_8hpp_source.xhtml#l00087">binary_stream.hpp:87</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml">bitpit::Cell</a></div><div class="ttdoc">The Cell class defines the cells. </div><div class="ttdef"><b>Definition:</b> <a href="cell_8hpp_source.xhtml#l00044">cell.hpp:44</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a5415789a8af4586940fa0fbc3e7d7f48"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a5415789a8af4586940fa0fbc3e7d7f48">bitpit::Cell::isInterior</a></div><div class="ttdeci">bool isInterior() const </div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00176">cell.cpp:176</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a703f2ce12319b53c6804c5d0b54a0ca1"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a703f2ce12319b53c6804c5d0b54a0ca1">bitpit::Cell::pushAdjacency</a></div><div class="ttdeci">void pushAdjacency(const int &amp;face, const long &amp;adjacency)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00496">cell.cpp:496</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_ac7b560774d2cf4d858d851ef77f6366a"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#ac7b560774d2cf4d858d851ef77f6366a">bitpit::Cell::setInterface</a></div><div class="ttdeci">void setInterface(const int &amp;face, const int &amp;index, const long &amp;interface)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00264">cell.cpp:264</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a8b3bf978bde8640c4da2f25bd5d537e4"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a8b3bf978bde8640c4da2f25bd5d537e4">bitpit::Cell::deleteAdjacency</a></div><div class="ttdeci">void deleteAdjacency(const int &amp;face, const int &amp;i)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00524">cell.cpp:524</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a2b518a2c297a50b7a9bc6df8908b18d5"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a2b518a2c297a50b7a9bc6df8908b18d5">bitpit::Cell::findAdjacency</a></div><div class="ttdeci">int findAdjacency(const int &amp;face, const int &amp;adjacency)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00608">cell.cpp:608</a></div></div>
<div class="ttc" id="group__Operators_xhtml_ga91ecc3462d869a3132ba96d017ae549b"><div class="ttname"><a href="group__Operators.xhtml#ga91ecc3462d869a3132ba96d017ae549b">operator&gt;&gt;</a></div><div class="ttdeci">std::istream &amp; operator&gt;&gt;(std::istream &amp;in, std::array&lt; T, d &gt; &amp;x)</div><div class="ttdef"><b>Definition:</b> <a href="Operators__array_8tpp_source.xhtml#l01398">Operators_array.tpp:1398</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a71e5b6426857ddee54a7ebf61f5b3b92"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a71e5b6426857ddee54a7ebf61f5b3b92">bitpit::Cell::resetInterfaces</a></div><div class="ttdeci">void resetInterfaces(bool storeInterfaces=true)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00217">cell.cpp:217</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a5caa1482ad646991f7cc73e4c09ef48e"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a5caa1482ad646991f7cc73e4c09ef48e">bitpit::Cell::getAdjacencies</a></div><div class="ttdeci">const long * getAdjacencies() const </div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00581">cell.cpp:581</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">bitpit::ElementInfo::Type</a></div><div class="ttdeci">Type</div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00046">element.hpp:46</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_ac8344404d7845487c69fb50a6e9c46ab"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#ac8344404d7845487c69fb50a6e9c46ab">bitpit::Cell::findInterface</a></div><div class="ttdeci">int findInterface(const int &amp;face, const int &amp;interface)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00387">cell.cpp:387</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_aa61245982eeb160544d260289840a04f"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#aa61245982eeb160544d260289840a04f">bitpit::Cell::getAdjacencyCount</a></div><div class="ttdeci">int getAdjacencyCount() const </div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00545">cell.cpp:545</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_ab8ff7feeee1f8c4449a10603827ec037"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#ab8ff7feeee1f8c4449a10603827ec037">bitpit::Cell::display</a></div><div class="ttdeci">void display(std::ostream &amp;out, unsigned short int indent) const </div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00685">cell.cpp:685</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_a9fc5d6c572da5484da4a307694178520"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#a9fc5d6c572da5484da4a307694178520">bitpit::Cell::findVertex</a></div><div class="ttdeci">int findVertex(const long &amp;vertex)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00628">cell.cpp:628</a></div></div>
<div class="ttc" id="classbitpit_1_1PatchKernel_xhtml"><div class="ttname"><a href="classbitpit_1_1PatchKernel.xhtml">bitpit::PatchKernel</a></div><div class="ttdoc">The PatchKernel class provides an interface for defining patches. </div><div class="ttdef"><b>Definition:</b> <a href="patch__kernel_8hpp_source.xhtml#l00081">patch_kernel.hpp:81</a></div></div>
<div class="ttc" id="classbitpit_1_1Cell_xhtml_aa04b4ce52f7e4f30c9ea5b261e23be37"><div class="ttname"><a href="classbitpit_1_1Cell.xhtml#aa04b4ce52f7e4f30c9ea5b261e23be37">bitpit::Cell::setAdjacencies</a></div><div class="ttdeci">void setAdjacencies(std::vector&lt; std::vector&lt; long &gt;&gt; &amp;adjacencies)</div><div class="ttdef"><b>Definition:</b> <a href="cell_8cpp_source.xhtml#l00452">cell.cpp:452</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:24 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

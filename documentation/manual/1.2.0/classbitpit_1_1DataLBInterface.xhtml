
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - bitpit::DataLBInterface&lt; Impl &gt; Class Template Reference</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>bitpit</b></li><li class="navelem"><a class="el" href="classbitpit_1_1DataLBInterface.xhtml">DataLBInterface</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classbitpit_1_1DataLBInterface-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">bitpit::DataLBInterface&lt; Impl &gt; Class Template Reference<div class="ingroups"><a class="el" href="group__PABLO.xhtml">PABLO (Octree)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Base class for data communications.  
 <a href="classbitpit_1_1DataLBInterface.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="DataLBInterface_8hpp_source.xhtml">DataLBInterface.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3b6333907919e620ed5b614c4149e569"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1DataLBInterface.xhtml#a3b6333907919e620ed5b614c4149e569">assign</a> (uint32_t stride, uint32_t length)</td></tr>
<tr class="separator:a3b6333907919e620ed5b614c4149e569"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1e5275a5bb55ac57359d45faade401c"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1DataLBInterface.xhtml#ad1e5275a5bb55ac57359d45faade401c">fixedSize</a> () const </td></tr>
<tr class="separator:ad1e5275a5bb55ac57359d45faade401c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a343d7d122b886a23470d2c89585fd4f3"><td class="memTemplParams" colspan="2">template&lt;class Buffer &gt; </td></tr>
<tr class="memitem:a343d7d122b886a23470d2c89585fd4f3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classbitpit_1_1DataLBInterface.xhtml#a343d7d122b886a23470d2c89585fd4f3">gather</a> (Buffer &amp;buff, const uint32_t e)</td></tr>
<tr class="separator:a343d7d122b886a23470d2c89585fd4f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ffce034081772a83e38c83531f952bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1DataLBInterface.xhtml#a4ffce034081772a83e38c83531f952bd">move</a> (const uint32_t from, const uint32_t to)</td></tr>
<tr class="separator:a4ffce034081772a83e38c83531f952bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbda1c67f1c6deecd35f1709151128ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1DataLBInterface.xhtml#adbda1c67f1c6deecd35f1709151128ef">resize</a> (uint32_t newSize)</td></tr>
<tr class="separator:adbda1c67f1c6deecd35f1709151128ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad8c92d3e1ffc38fb9b19b7bc3345c12"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1DataLBInterface.xhtml#aad8c92d3e1ffc38fb9b19b7bc3345c12">resizeGhost</a> (uint32_t newSize)</td></tr>
<tr class="separator:aad8c92d3e1ffc38fb9b19b7bc3345c12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54b7348cc8da70db093d6ce163b98c95"><td class="memTemplParams" colspan="2">template&lt;class Buffer &gt; </td></tr>
<tr class="memitem:a54b7348cc8da70db093d6ce163b98c95"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classbitpit_1_1DataLBInterface.xhtml#a54b7348cc8da70db093d6ce163b98c95">scatter</a> (Buffer &amp;buff, const uint32_t e)</td></tr>
<tr class="separator:a54b7348cc8da70db093d6ce163b98c95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afec766aa8c6ef5ea8902bf437fc8c41e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1DataLBInterface.xhtml#afec766aa8c6ef5ea8902bf437fc8c41e">shrink</a> ()</td></tr>
<tr class="separator:afec766aa8c6ef5ea8902bf437fc8c41e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a503c41b20aad905b46ea7b160c31a77d"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1DataLBInterface.xhtml#a503c41b20aad905b46ea7b160c31a77d">size</a> (const uint32_t e) const </td></tr>
<tr class="separator:a503c41b20aad905b46ea7b160c31a77d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class Impl&gt;<br/>
class bitpit::DataLBInterface&lt; Impl &gt;</h3>

<p>Base class for data communications. </p>
<dl class="section date"><dt>Date</dt><dd>09/sep/2015 </dd></dl>
<dl class="section author"><dt>Authors</dt><dd>Edoardo Lombardi </dd>
<dd>
Marco Cisternino </dd></dl>
<dl class="section copyright"><dt>Copyright</dt><dd>Copyright 2014 Optimad engineering srl. All rights reserved. </dd></dl>
<dl class="section user"><dt>License</dt><dd>This version of PABLO is released under the LGPL License.</dd></dl>
<p>This class is the base class used to implement the user interface to data communications for load balance.</p>
<p>The Curiously Recurrent Template Pattern is exploited to achieve the interface. By this way the interface is based on static polymorphism with no extra cost at runtime.</p>
<p>The user has to implement his communication classes for load balance by deriving them from this class. The mechanism implies that the derived class derives from a template base class and that the template parameter is the derived class itself, as follow </p>
<div class="fragment"><div class="line"><span class="keyword">class </span>Derived : <span class="keyword">public</span> Base&lt;Derived&gt;{...}</div>
</div><!-- fragment --><p> The user has to implement all the methods of the base class in his derived class. These user's methods will really do the job.</p>
<p>An example of user derived class can be found,<a href="https://github.com/optimad/PABLO/blob/master/test/User_Data_LB.hpp">here</a>,in test folder for the case of a double datum for each grid element.</p>
<p>Easily speaking, only the user knows his data and through the interface specialization he states the size of element data, how to write/read and move them in a communication buffer. </p>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="PABLO_example_00007_8cpp-example.xhtml#_a0">PABLO_example_00007.cpp</a>.</dd>
</dl>
<p>Definition at line <a class="el" href="DataLBInterface_8hpp_source.xhtml#l00068">68</a> of file <a class="el" href="DataLBInterface_8hpp_source.xhtml">DataLBInterface.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3b6333907919e620ed5b614c4149e569"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Impl &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1DataLBInterface.xhtml">bitpit::DataLBInterface</a>&lt; Impl &gt;::assign </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>stride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Its user specification extracts contiguous element from a data container. This method is used during the very first load balance where the grid from being serial becomes parallel. From the initial serial container, which is the same on every process, this method takes the data relatives to the process sub-domain, storing them in the same resized parallel local container. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">stride</td><td>The location where the process has to start reading from </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">length</td><td>The length of the data container the process has to read </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="DataLBInterface_8tpp_source.xhtml#l00111">111</a> of file <a class="el" href="DataLBInterface_8tpp_source.xhtml">DataLBInterface.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad1e5275a5bb55ac57359d45faade401c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Impl &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classbitpit_1_1DataLBInterface.xhtml">bitpit::DataLBInterface</a>&lt; Impl &gt;::fixedSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Its user specification computes the same data size for every element in the grid. </p>
<dl class="section return"><dt>Returns</dt><dd>The size of the data for every element </dd></dl>

<p>Definition at line <a class="el" href="DataLBInterface_8tpp_source.xhtml#l00043">43</a> of file <a class="el" href="DataLBInterface_8tpp_source.xhtml">DataLBInterface.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="a343d7d122b886a23470d2c89585fd4f3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Impl &gt; </div>
<div class="memtemplate">
template&lt;class Buffer &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1DataLBInterface.xhtml">bitpit::DataLBInterface</a>&lt; Impl &gt;::gather </td>
          <td>(</td>
          <td class="paramtype">Buffer &amp;&#160;</td>
          <td class="paramname"><em>buff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>e</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Its user specification writes the e element data to be communicated during the load balance in the buffer.</p>
<p>The user has not to care about the buffer but a char buffer is available in PABLO, Class_Comm_Buffer. This class has an important method, Class_Comm_Buffer::write. This method has to be used to allocate any single element datum in the communication buffer, as follow </p>
<div class="fragment"><div class="line">* buff.write(userdatum)</div>
<div class="line">*</div>
</div><!-- fragment --><p> where userdatum can be any MPI compatible POD variable associated to the e element. In case of a vector of double, called userdata, to store data, </p>
<div class="fragment"><div class="line">* buff.write(userdata[e])</div>
<div class="line">*</div>
</div><!-- fragment --> <dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">buff</td><td>Template communication buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">e</td><td>The element local index </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="DataLBInterface_8tpp_source.xhtml#l00076">76</a> of file <a class="el" href="DataLBInterface_8tpp_source.xhtml">DataLBInterface.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4ffce034081772a83e38c83531f952bd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Impl &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1DataLBInterface.xhtml">bitpit::DataLBInterface</a>&lt; Impl &gt;::move </td>
          <td>(</td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>from</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>to</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Its user specification moves the data from the "from" element to the "to" element </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">from</td><td><a class="el" href="classbitpit_1_1Element.xhtml" title="The Element class provides an interface for defining elements. ">Element</a> local index from. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">to</td><td><a class="el" href="classbitpit_1_1Element.xhtml" title="The Element class provides an interface for defining elements. ">Element</a> local index to. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="DataLBInterface_8tpp_source.xhtml#l00052">52</a> of file <a class="el" href="DataLBInterface_8tpp_source.xhtml">DataLBInterface.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="adbda1c67f1c6deecd35f1709151128ef"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Impl &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1DataLBInterface.xhtml">bitpit::DataLBInterface</a>&lt; Impl &gt;::resize </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>newSize</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Its user specification resizes the element data container to the newSize value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">newSize</td><td>The new size of the user data container </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="DataLBInterface_8tpp_source.xhtml#l00119">119</a> of file <a class="el" href="DataLBInterface_8tpp_source.xhtml">DataLBInterface.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="aad8c92d3e1ffc38fb9b19b7bc3345c12"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Impl &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1DataLBInterface.xhtml">bitpit::DataLBInterface</a>&lt; Impl &gt;::resizeGhost </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>newSize</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Its user specification resizes the ghost element data container to the newSize value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">newSize</td><td>The new size of the user ghost data container </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="DataLBInterface_8tpp_source.xhtml#l00127">127</a> of file <a class="el" href="DataLBInterface_8tpp_source.xhtml">DataLBInterface.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="a54b7348cc8da70db093d6ce163b98c95"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Impl &gt; </div>
<div class="memtemplate">
template&lt;class Buffer &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1DataLBInterface.xhtml">bitpit::DataLBInterface</a>&lt; Impl &gt;::scatter </td>
          <td>(</td>
          <td class="paramtype">Buffer &amp;&#160;</td>
          <td class="paramname"><em>buff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>e</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Its user specification reads the e element data from the communication buffer and store them in the user data container.</p>
<p>The user has not to care about the buffer but a char buffer is available in PABLO, Class_Comm_Buffer. This class has an important method, Class_Comm_Buffer::read(). This method has to be used to read any single element datum from the communication buffer, as follow </p>
<div class="fragment"><div class="line">* buff.read(userdatum)</div>
<div class="line">*</div>
</div><!-- fragment --><p> where userdatum can be any MPI compatible POD variable associated to the e element. In case of a vector of double, called userdata, to store data, </p>
<div class="fragment"><div class="line">* buff.read(userdata[e])</div>
<div class="line">*</div>
</div><!-- fragment --> <dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">buff</td><td>Template communication buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">e</td><td>The element local index </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="DataLBInterface_8tpp_source.xhtml#l00100">100</a> of file <a class="el" href="DataLBInterface_8tpp_source.xhtml">DataLBInterface.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="afec766aa8c6ef5ea8902bf437fc8c41e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Impl &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1DataLBInterface.xhtml">bitpit::DataLBInterface</a>&lt; Impl &gt;::shrink </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Its user specification reduces the capacity of the container to its size for those containers which has different values for capacity and size. If the user container has no capacity concept, nothing has to be done. </p>

<p>Definition at line <a class="el" href="DataLBInterface_8tpp_source.xhtml#l00135">135</a> of file <a class="el" href="DataLBInterface_8tpp_source.xhtml">DataLBInterface.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="a503c41b20aad905b46ea7b160c31a77d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Impl &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classbitpit_1_1DataLBInterface.xhtml">bitpit::DataLBInterface</a>&lt; Impl &gt;::size </td>
          <td>(</td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>e</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Its user specification computes the specific size of data for an element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">e</td><td>The element local index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the size of the data for the e element </dd></dl>

<p>Definition at line <a class="el" href="DataLBInterface_8tpp_source.xhtml#l00035">35</a> of file <a class="el" href="DataLBInterface_8tpp_source.xhtml">DataLBInterface.tpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/PABLO/<a class="el" href="DataLBInterface_8hpp_source.xhtml">DataLBInterface.hpp</a></li>
<li>src/PABLO/<a class="el" href="DataLBInterface_8tpp_source.xhtml">DataLBInterface.tpp</a></li>
</ul>
</div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:25 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - bitpit::Interface Class Reference</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>bitpit</b></li><li class="navelem"><a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classbitpit_1_1Interface-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">bitpit::Interface Class Reference<div class="ingroups"><a class="el" href="group__patchkernel.xhtml">Patch kernel</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>The <a class="el" href="classbitpit_1_1Interface.xhtml" title="The Interface class defines the interfaces among cells. ">Interface</a> class defines the interfaces among cells.  
 <a href="classbitpit_1_1Interface.xhtml#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for bitpit::Interface:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classbitpit_1_1Interface__inherit__graph.svg" width="120" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for bitpit::Interface:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classbitpit_1_1Interface__coll__graph.svg" width="120" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4c26f7c2248f22c39d26b6ca70a9bc69"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4c26f7c2248f22c39d26b6ca70a9bc69"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>Interface</b> (<a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:a4c26f7c2248f22c39d26b6ca70a9bc69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae69df06c7610b8d6dc0814c4feb4cb91"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae69df06c7610b8d6dc0814c4feb4cb91"></a>
std::array&lt; std::array&lt; double, 3 &gt;, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>evalRotationFromCartesian</b> ()</td></tr>
<tr class="separator:ae69df06c7610b8d6dc0814c4feb4cb91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af52c0bbb87e82145507147b3c832726f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af52c0bbb87e82145507147b3c832726f"></a>
std::array&lt; std::array&lt; double, 3 &gt;, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>evalRotationToCartesian</b> ()</td></tr>
<tr class="separator:af52c0bbb87e82145507147b3c832726f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d7e5b41ba9eb253f062128c8d56dec7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5d7e5b41ba9eb253f062128c8d56dec7"></a>
<a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:a5d7e5b41ba9eb253f062128c8d56dec7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classbitpit_1_1Element"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classbitpit_1_1Element')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classbitpit_1_1Element.xhtml">bitpit::Element</a></td></tr>
<tr class="memitem:af181cd8915bb1c621fb2937c649cb40a inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af181cd8915bb1c621fb2937c649cb40a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>Element</b> (<a class="el" href="classbitpit_1_1Element.xhtml">Element</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:af181cd8915bb1c621fb2937c649cb40a inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f146fcb88d9eaebfaf59cd843618e81 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7f146fcb88d9eaebfaf59cd843618e81"></a>
<a class="el" href="classbitpit_1_1Element.xhtml">Element</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="classbitpit_1_1Element.xhtml">Element</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:a7f146fcb88d9eaebfaf59cd843618e81 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5ed1f969411cb1b97a81b207fb1a262 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#af5ed1f969411cb1b97a81b207fb1a262">Element</a> ()</td></tr>
<tr class="separator:af5ed1f969411cb1b97a81b207fb1a262 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bf1437712afbe7d4eacbe6fa0d00173 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a9bf1437712afbe7d4eacbe6fa0d00173">Element</a> (const long &amp;id, <a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type=<a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314af962ccefc7ceb3e5f1c38513458505b9">ElementInfo::UNDEFINED</a>)</td></tr>
<tr class="separator:a9bf1437712afbe7d4eacbe6fa0d00173 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46aa8d562a1f4c20b9ac979f307db8b3 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a46aa8d562a1f4c20b9ac979f307db8b3">Element</a> (const <a class="el" href="classbitpit_1_1Element.xhtml">Element</a> &amp;other)</td></tr>
<tr class="separator:a46aa8d562a1f4c20b9ac979f307db8b3 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0583576dae78b3bfef8b83c0e7ce9904 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1Element.xhtml">Element</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a0583576dae78b3bfef8b83c0e7ce9904">operator=</a> (const <a class="el" href="classbitpit_1_1Element.xhtml">Element</a> &amp;other)</td></tr>
<tr class="separator:a0583576dae78b3bfef8b83c0e7ce9904 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf15fb27c03597b6d1708343e92b4a28 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#acf15fb27c03597b6d1708343e92b4a28">initialize</a> (<a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type)</td></tr>
<tr class="separator:acf15fb27c03597b6d1708343e92b4a28 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd875d8ac29b6d292b99d1779041176f inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#acd875d8ac29b6d292b99d1779041176f">getInfo</a> () const </td></tr>
<tr class="separator:acd875d8ac29b6d292b99d1779041176f inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c9f47001976ae86bc79707fe15fd7ce inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a2c9f47001976ae86bc79707fe15fd7ce">setId</a> (const long &amp;id)</td></tr>
<tr class="separator:a2c9f47001976ae86bc79707fe15fd7ce inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79eb2e7b6342c00c93b2b0f36214b1f1 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a79eb2e7b6342c00c93b2b0f36214b1f1">getId</a> () const </td></tr>
<tr class="separator:a79eb2e7b6342c00c93b2b0f36214b1f1 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6a25bd397ed3a55b83ac17e0939f97e inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#ab6a25bd397ed3a55b83ac17e0939f97e">setType</a> (<a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type)</td></tr>
<tr class="separator:ab6a25bd397ed3a55b83ac17e0939f97e inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05a9d2b7f35b108a690d96242cdfe5e0 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a05a9d2b7f35b108a690d96242cdfe5e0">getType</a> () const </td></tr>
<tr class="separator:a05a9d2b7f35b108a690d96242cdfe5e0 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a964d87372e162abe437a0ef18e20eea0 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a964d87372e162abe437a0ef18e20eea0">getDimension</a> () const </td></tr>
<tr class="separator:a964d87372e162abe437a0ef18e20eea0 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd9622af6e9216ae13509e9835d110f1 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#acd9622af6e9216ae13509e9835d110f1">isThreeDimensional</a> () const </td></tr>
<tr class="separator:acd9622af6e9216ae13509e9835d110f1 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adef671037ca88ed95c297e74d911f4c4 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#adef671037ca88ed95c297e74d911f4c4">setConnect</a> (std::unique_ptr&lt; long[]&gt; &amp;&amp;connect)</td></tr>
<tr class="separator:adef671037ca88ed95c297e74d911f4c4 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad069c168d614f85444a5d08d0d4cdad8 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#ad069c168d614f85444a5d08d0d4cdad8">unsetConnect</a> ()</td></tr>
<tr class="separator:ad069c168d614f85444a5d08d0d4cdad8 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad03999c3d3b66840cb72ea6f65901722 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">const long *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#ad03999c3d3b66840cb72ea6f65901722">getConnect</a> () const </td></tr>
<tr class="separator:ad03999c3d3b66840cb72ea6f65901722 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b10dfa960eb1c4d286a34502e41304d inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">long *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a5b10dfa960eb1c4d286a34502e41304d">getConnect</a> ()</td></tr>
<tr class="separator:a5b10dfa960eb1c4d286a34502e41304d inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af79866635c18fe3384764869f6a450b4 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#af79866635c18fe3384764869f6a450b4">getFaceCount</a> () const </td></tr>
<tr class="separator:af79866635c18fe3384764869f6a450b4 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8ed2f8193fced9e84cd379e8b0934de inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#ae8ed2f8193fced9e84cd379e8b0934de">getFaceType</a> (const int &amp;face) const </td></tr>
<tr class="separator:ae8ed2f8193fced9e84cd379e8b0934de inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73d45283655d18a2a0ca10545883b2e2 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a73d45283655d18a2a0ca10545883b2e2">getFaceLocalConnect</a> (const int &amp;face) const </td></tr>
<tr class="separator:a73d45283655d18a2a0ca10545883b2e2 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d1f37fa9f5ef449e1a52c2e94ccb38e inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a6d1f37fa9f5ef449e1a52c2e94ccb38e">getEdgeCount</a> () const </td></tr>
<tr class="separator:a6d1f37fa9f5ef449e1a52c2e94ccb38e inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4780b9dbd457df6ff0ec35d26a63cd54 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a4780b9dbd457df6ff0ec35d26a63cd54">getEdgeLocalConnect</a> (const int &amp;edge) const </td></tr>
<tr class="separator:a4780b9dbd457df6ff0ec35d26a63cd54 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6fa1001174a82ebab7b0d0003af4c77 inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#af6fa1001174a82ebab7b0d0003af4c77">setVertex</a> (const int &amp;index, const long &amp;vertex)</td></tr>
<tr class="separator:af6fa1001174a82ebab7b0d0003af4c77 inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69eac8f6d4c5fe4fa4f70cb4be57ee9d inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a69eac8f6d4c5fe4fa4f70cb4be57ee9d">getVertexCount</a> () const </td></tr>
<tr class="separator:a69eac8f6d4c5fe4fa4f70cb4be57ee9d inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a611e1742519f6391eb9a80433dabb83a inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#a611e1742519f6391eb9a80433dabb83a">getVertex</a> (const int &amp;vertex) const </td></tr>
<tr class="separator:a611e1742519f6391eb9a80433dabb83a inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9bce5ecea5d8bdb693fefaee848199e inherit pub_methods_classbitpit_1_1Element"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Element.xhtml#ab9bce5ecea5d8bdb693fefaee848199e">getBinarySize</a> ()</td></tr>
<tr class="separator:ab9bce5ecea5d8bdb693fefaee848199e inherit pub_methods_classbitpit_1_1Element"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7394006a01ee87408ffd6c05a59a4cae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a7394006a01ee87408ffd6c05a59a4cae">Interface</a> ()</td></tr>
<tr class="separator:a7394006a01ee87408ffd6c05a59a4cae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a996ed4eab5b579ae1a9f1632c5117e81"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a996ed4eab5b579ae1a9f1632c5117e81">Interface</a> (const long &amp;id, <a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type=<a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314af962ccefc7ceb3e5f1c38513458505b9">ElementInfo::UNDEFINED</a>)</td></tr>
<tr class="separator:a996ed4eab5b579ae1a9f1632c5117e81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e3cabbc240d19d2521fa31225dafd91"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a2e3cabbc240d19d2521fa31225dafd91">Interface</a> (const <a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;other)</td></tr>
<tr class="separator:a2e3cabbc240d19d2521fa31225dafd91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a516da5caeb7bb085377b48bf6f9f867e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a516da5caeb7bb085377b48bf6f9f867e">operator=</a> (const <a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;other)</td></tr>
<tr class="separator:a516da5caeb7bb085377b48bf6f9f867e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0082ffaa228f420d487907193a31541"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#ac0082ffaa228f420d487907193a31541">isBorder</a> () const </td></tr>
<tr class="separator:ac0082ffaa228f420d487907193a31541"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03f84165e058cbbfbf0b0ae780699f2e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a03f84165e058cbbfbf0b0ae780699f2e">setOwner</a> (const long &amp;owner, const int &amp;onwerFace)</td></tr>
<tr class="separator:a03f84165e058cbbfbf0b0ae780699f2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30e9fb181cf924108ec20fbba9f1bd1a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a30e9fb181cf924108ec20fbba9f1bd1a">unsetOwner</a> ()</td></tr>
<tr class="separator:a30e9fb181cf924108ec20fbba9f1bd1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35043572b022d41c46f802d6485e668d"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a35043572b022d41c46f802d6485e668d">getOwner</a> () const </td></tr>
<tr class="separator:a35043572b022d41c46f802d6485e668d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab119e1a1ca2b9e8ea242fc4c1cb18f07"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#ab119e1a1ca2b9e8ea242fc4c1cb18f07">getOwnerFace</a> () const </td></tr>
<tr class="separator:ab119e1a1ca2b9e8ea242fc4c1cb18f07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63828b49c892ae7efb216d5930a07072"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a63828b49c892ae7efb216d5930a07072">setNeigh</a> (const long &amp;neigh, const int &amp;neighFace)</td></tr>
<tr class="separator:a63828b49c892ae7efb216d5930a07072"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1748622857117c4a9a66c48243906f0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#af1748622857117c4a9a66c48243906f0">unsetNeigh</a> ()</td></tr>
<tr class="separator:af1748622857117c4a9a66c48243906f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e3bd7c0d660d8602133a456225a2f3e"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a2e3bd7c0d660d8602133a456225a2f3e">getNeigh</a> () const </td></tr>
<tr class="separator:a2e3bd7c0d660d8602133a456225a2f3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2604394c34101ea13f179ee9c6e2ffb1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a2604394c34101ea13f179ee9c6e2ffb1">getNeighFace</a> () const </td></tr>
<tr class="separator:a2604394c34101ea13f179ee9c6e2ffb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3821442680dde7bde60f52626dfcd840"><td class="memItemLeft" align="right" valign="top">std::array&lt; long, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a3821442680dde7bde60f52626dfcd840">getOwnerNeigh</a> () const </td></tr>
<tr class="separator:a3821442680dde7bde60f52626dfcd840"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a619a8c5d606e436de361067fe0f57f42"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a619a8c5d606e436de361067fe0f57f42">display</a> (std::ostream &amp;out, unsigned short int indent) const </td></tr>
<tr class="separator:a619a8c5d606e436de361067fe0f57f42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc8c546708e8988ce72632b4515c62ef"><td class="memItemLeft" align="right" valign="top">static std::array&lt; std::array<br class="typebreak"/>
&lt; double, 3 &gt;, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#acc8c546708e8988ce72632b4515c62ef">evalRotationFromCartesian</a> (std::array&lt; double, 3 &gt; &amp;versor)</td></tr>
<tr class="separator:acc8c546708e8988ce72632b4515c62ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae1a5d35257ff0c401cbd4244a7480d2"><td class="memItemLeft" align="right" valign="top">static std::array&lt; std::array<br class="typebreak"/>
&lt; double, 3 &gt;, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#aae1a5d35257ff0c401cbd4244a7480d2">evalRotationToCartesian</a> (std::array&lt; double, 3 &gt; &amp;versor)</td></tr>
<tr class="separator:aae1a5d35257ff0c401cbd4244a7480d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9167222c2620af74bb77004ca876bcaa"><td class="memItemLeft" align="right" valign="top">static std::array&lt; std::array<br class="typebreak"/>
&lt; double, 3 &gt;, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1Interface.xhtml#a9167222c2620af74bb77004ca876bcaa">evalRotationTranspose</a> (const std::array&lt; std::array&lt; double, 3 &gt;, 3 &gt; &amp;R)</td></tr>
<tr class="separator:a9167222c2620af74bb77004ca876bcaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The <a class="el" href="classbitpit_1_1Interface.xhtml" title="The Interface class defines the interfaces among cells. ">Interface</a> class defines the interfaces among cells. </p>
<p><a class="el" href="classbitpit_1_1Interface.xhtml" title="The Interface class defines the interfaces among cells. ">Interface</a> is class that defines the interfaces among cells. </p>

<p>Definition at line <a class="el" href="interface_8hpp_source.xhtml#l00037">37</a> of file <a class="el" href="interface_8hpp_source.xhtml">interface.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a7394006a01ee87408ffd6c05a59a4cae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::Interface::Interface </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Default constructor. </p>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00053">53</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a996ed4eab5b579ae1a9f1632c5117e81"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::Interface::Interface </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a>&#160;</td>
          <td class="paramname"><em>type</em> = <code><a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314af962ccefc7ceb3e5f1c38513458505b9">ElementInfo::UNDEFINED</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Creates a new interface. </p>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2e3cabbc240d19d2521fa31225dafd91"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::Interface::Interface </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy-constructor </p>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a619a8c5d606e436de361067fe0f57f42"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::Interface::display </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned short int&#160;</td>
          <td class="paramname"><em>indent</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Displays interface information to an output stream</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">out</td><td>is the output stream </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">indent</td><td>is the number of trailing spaces to prepend when writing the information </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00298">298</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="acc8c546708e8988ce72632b4515c62ef"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::array&lt; std::array&lt; double, 3 &gt;, 3 &gt; bitpit::Interface::evalRotationFromCartesian </td>
          <td>(</td>
          <td class="paramtype">std::array&lt; double, 3 &gt; &amp;&#160;</td>
          <td class="paramname"><em>versor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Evaluates the rotation matrix from the Cartesian coordinate system to a coordinate system build starting from the specified versor.</p>
<p>Evaluates the rotation matrix that needs to be applied to the Cartesian coordinate system to make it coincide with the coordinates system defined starting from the specified versor. The axes of the coordinate system are defined as follows:</p>
<ul>
<li>the x axis is aligned with the versor;</li>
<li>the y axis is normal to the plane where the axis x-versor and z-Cartesian lay, or, if this two vectors are aligned, to the plane where the axis x-versor and x-Cartesian lay;</li>
<li>the z axis is obtained evaluating the cross product of the axis x-versor and y-versor.</li>
</ul>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">versor</td><td>is the versor that defines the coordinate system </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The rotation matrix from the Cartesian coordinate system to a coordinate system build starting from the specified versor. </dd></dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00117">117</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aae1a5d35257ff0c401cbd4244a7480d2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::array&lt; std::array&lt; double, 3 &gt;, 3 &gt; bitpit::Interface::evalRotationToCartesian </td>
          <td>(</td>
          <td class="paramtype">std::array&lt; double, 3 &gt; &amp;&#160;</td>
          <td class="paramname"><em>versor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Evaluates the rotation matrix from the coordinate system build starting from the specified versor to the Cartesian coordinate system.</p>
<p>Evaluates the rotation matrix that needs to be applied to the coordinates system defined starting from the specified versor to make it coincide with the Cartesian coordinates system. This matrix can be evaluated as the transpose of the rotation matrix from the Cartesian coordinate system to the versor coordinate system.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">versor</td><td>is the three-dimensional versor that defines the coordinate system </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The rotation matrix from the coordinate system build starting from the specified versor to the Cartesian coordinate system. </dd></dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00168">168</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9167222c2620af74bb77004ca876bcaa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::array&lt; std::array&lt; double, 3 &gt;, 3 &gt; bitpit::Interface::evalRotationTranspose </td>
          <td>(</td>
          <td class="paramtype">const std::array&lt; std::array&lt; double, 3 &gt;, 3 &gt; &amp;&#160;</td>
          <td class="paramname"><em>R</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Evaluates the transpose of the specified rotation matrix.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">R</td><td>the rotation matrix to transpose </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The transposed rotation matrix. </dd></dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00179">179</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2e3bd7c0d660d8602133a456225a2f3e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">long bitpit::Interface::getNeigh </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Gets the neighbour of the interface.</p>
<dl class="section return"><dt>Returns</dt><dd>The neighbour of the nterface </dd></dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00261">261</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2604394c34101ea13f179ee9c6e2ffb1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bitpit::Interface::getNeighFace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Gets the face of the neighbour associated with the interface.</p>
<dl class="section return"><dt>Returns</dt><dd>The face of the neighbour associated with the interface </dd></dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00271">271</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a35043572b022d41c46f802d6485e668d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">long bitpit::Interface::getOwner </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Gets the owner of the interface.</p>
<dl class="section return"><dt>Returns</dt><dd>The owner of the nterface </dd></dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00220">220</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab119e1a1ca2b9e8ea242fc4c1cb18f07"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bitpit::Interface::getOwnerFace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Gets the face of the owner associated with the interface.</p>
<dl class="section return"><dt>Returns</dt><dd>The face of the owner associated with the interface </dd></dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00230">230</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3821442680dde7bde60f52626dfcd840"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::array&lt; long, 2 &gt; bitpit::Interface::getOwnerNeigh </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Gets both the owner and the neighbour of the interface.</p>
<dl class="section return"><dt>Returns</dt><dd>An array containing the owner and the neighbour of the interface. </dd></dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00282">282</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac0082ffaa228f420d487907193a31541"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool bitpit::Interface::isBorder </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Checks whether the interface is a border.</p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the interface is a border, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00189">189</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a516da5caeb7bb085377b48bf6f9f867e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp; bitpit::Interface::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy assignament operator </p>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00084">84</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a63828b49c892ae7efb216d5930a07072"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::Interface::setNeigh </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>neigh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>neighFace</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets the neighbour of the interface.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">neigh</td><td>the neighbour of the interface </td></tr>
    <tr><td class="paramname">neighFace</td><td>the neighbour's face adjacent to the interface </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00241">241</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a03f84165e058cbbfbf0b0ae780699f2e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::Interface::setOwner </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>owner</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>onwerFace</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets the owner of the interface.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">owner</td><td>the owner of the interface </td></tr>
    <tr><td class="paramname">onwerFace</td><td>the owner's face adjacent to the interface </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00200">200</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af1748622857117c4a9a66c48243906f0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::Interface::unsetNeigh </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Deletes the neighbour of the interface. </p>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00250">250</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a30e9fb181cf924108ec20fbba9f1bd1a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::Interface::unsetOwner </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Deletes the owner of the interface. </p>

<p>Definition at line <a class="el" href="interface_8cpp_source.xhtml#l00209">209</a> of file <a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/patchkernel/<a class="el" href="interface_8hpp_source.xhtml">interface.hpp</a></li>
<li>src/patchkernel/<a class="el" href="interface_8cpp_source.xhtml">interface.cpp</a></li>
</ul>
</div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:25 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

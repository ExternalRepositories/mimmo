
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - bitpit::LevelSetSegmentation Class Reference</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>bitpit</b></li><li class="navelem"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml">LevelSetSegmentation</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classbitpit_1_1LevelSetSegmentation-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">bitpit::LevelSetSegmentation Class Reference<div class="ingroups"><a class="el" href="group__levelset.xhtml">LevelSet</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Implements visitor pattern fo segmentated geometries.  
 <a href="classbitpit_1_1LevelSetSegmentation.xhtml#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for bitpit::LevelSetSegmentation:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classbitpit_1_1LevelSetSegmentation__inherit__graph.svg" width="206" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for bitpit::LevelSetSegmentation:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classbitpit_1_1LevelSetSegmentation__coll__graph.svg" width="206" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0a26b98c0ce42e24c6243eed2c325574"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a0a26b98c0ce42e24c6243eed2c325574">LevelSetSegmentation</a> (int, <a class="el" href="classbitpit_1_1SurfUnstructured.xhtml">SurfUnstructured</a> *)</td></tr>
<tr class="separator:a0a26b98c0ce42e24c6243eed2c325574"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a706362bc324587dd7522e194ff538c65"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a706362bc324587dd7522e194ff538c65">LevelSetSegmentation</a> (const <a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml">LevelSetSegmentation</a> &amp;)</td></tr>
<tr class="separator:a706362bc324587dd7522e194ff538c65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acecb252ef5a3df908217900ab175938c"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#acecb252ef5a3df908217900ab175938c">~LevelSetSegmentation</a> ()</td></tr>
<tr class="separator:acecb252ef5a3df908217900ab175938c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82fae0c93d9cc4cdd7d132ad47ba252c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a82fae0c93d9cc4cdd7d132ad47ba252c">clearAfterMeshMovement</a> (const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt; &amp;)</td></tr>
<tr class="separator:a82fae0c93d9cc4cdd7d132ad47ba252c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4a3143e281b4c1f8f39f49c17aae1c9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml">LevelSetSegmentation</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#ae4a3143e281b4c1f8f39f49c17aae1c9">clone</a> () const </td></tr>
<tr class="separator:ae4a3143e281b4c1f8f39f49c17aae1c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2705708080ee9532327e5ce5ebaf0b7d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a2705708080ee9532327e5ce5ebaf0b7d">computeLSInNarrowBand</a> (<a class="el" href="classbitpit_1_1LevelSetKernel.xhtml">LevelSetKernel</a> *, const double &amp;, const bool &amp;)</td></tr>
<tr class="separator:a2705708080ee9532327e5ce5ebaf0b7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada4f28d606c67e795d79835b54b78786"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#ada4f28d606c67e795d79835b54b78786">dumpDerived</a> (std::fstream &amp;)</td></tr>
<tr class="separator:ada4f28d606c67e795d79835b54b78786"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac80e918a6d3fd5ea5d767d38f785dbc1"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#ac80e918a6d3fd5ea5d767d38f785dbc1">evaluateLS</a> (<a class="el" href="classbitpit_1_1LevelSetKernel.xhtml">LevelSetKernel</a> *, long) const </td></tr>
<tr class="separator:ac80e918a6d3fd5ea5d767d38f785dbc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab960e3283c7b5102282a03e34edb5e6c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#ab960e3283c7b5102282a03e34edb5e6c">getBoundingBox</a> (std::array&lt; double, 3 &gt; &amp;, std::array&lt; double, 3 &gt; &amp;) const </td></tr>
<tr class="separator:ab960e3283c7b5102282a03e34edb5e6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e30faab8e4f91f5c8ef0684ddf23d88"><td class="memItemLeft" align="right" valign="top">const std::unordered_set&lt; long &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a9e30faab8e4f91f5c8ef0684ddf23d88">getSimplexList</a> (const long &amp;) const </td></tr>
<tr class="separator:a9e30faab8e4f91f5c8ef0684ddf23d88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a851ff999bc25f8d4be84ae2e049933d0"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a851ff999bc25f8d4be84ae2e049933d0">getSupport</a> (const long &amp;) const </td></tr>
<tr class="separator:a851ff999bc25f8d4be84ae2e049933d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7cf1f1132b99d6df086b46d60653d6b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#aa7cf1f1132b99d6df086b46d60653d6b">isInNarrowBand</a> (const long &amp;)</td></tr>
<tr class="separator:aa7cf1f1132b99d6df086b46d60653d6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed766331f391f2a2218e8973c87869bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#aed766331f391f2a2218e8973c87869bc">readCommunicationBuffer</a> (const std::vector&lt; long &gt; &amp;, const long &amp;, <a class="el" href="classbitpit_1_1RecvBuffer.xhtml">RecvBuffer</a> &amp;)</td></tr>
<tr class="separator:aed766331f391f2a2218e8973c87869bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a168ce68cf265facc7adf5d6607718d59"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a168ce68cf265facc7adf5d6607718d59">restoreDerived</a> (std::fstream &amp;)</td></tr>
<tr class="separator:a168ce68cf265facc7adf5d6607718d59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0f2a1a1d90de202ee3f0adef6af3a82"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#ac0f2a1a1d90de202ee3f0adef6af3a82">seedNarrowBand</a> (<a class="el" href="classbitpit_1_1LevelSetCartesian.xhtml">LevelSetCartesian</a> *, std::vector&lt; std::array&lt; double, 3 &gt;&gt; &amp;, std::vector&lt; int &gt; &amp;)</td></tr>
<tr class="separator:ac0f2a1a1d90de202ee3f0adef6af3a82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25a324abc0f55bae7214f4ccff8c9cab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a25a324abc0f55bae7214f4ccff8c9cab">updateLSInNarrowBand</a> (<a class="el" href="classbitpit_1_1LevelSetKernel.xhtml">LevelSetKernel</a> *, const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt; &amp;, const double &amp;, const bool &amp;)</td></tr>
<tr class="separator:a25a324abc0f55bae7214f4ccff8c9cab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f588c1d6cc5899483e86819aca4428f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a2f588c1d6cc5899483e86819aca4428f">writeCommunicationBuffer</a> (const std::vector&lt; long &gt; &amp;, <a class="el" href="classbitpit_1_1SendBuffer.xhtml">SendBuffer</a> &amp;, <a class="el" href="classbitpit_1_1SendBuffer.xhtml">SendBuffer</a> &amp;)</td></tr>
<tr class="separator:a2f588c1d6cc5899483e86819aca4428f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classbitpit_1_1LevelSetObject"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classbitpit_1_1LevelSetObject')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a></td></tr>
<tr class="memitem:ae9e619e5103d2d5594afab3003e3c2d2 inherit pub_methods_classbitpit_1_1LevelSetObject"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetObject.xhtml#ae9e619e5103d2d5594afab3003e3c2d2">LevelSetObject</a> (int)</td></tr>
<tr class="separator:ae9e619e5103d2d5594afab3003e3c2d2 inherit pub_methods_classbitpit_1_1LevelSetObject"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79eb08ec797686a17d517bf4f4659d2c inherit pub_methods_classbitpit_1_1LevelSetObject"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetObject.xhtml#a79eb08ec797686a17d517bf4f4659d2c">~LevelSetObject</a> ()</td></tr>
<tr class="separator:a79eb08ec797686a17d517bf4f4659d2c inherit pub_methods_classbitpit_1_1LevelSetObject"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ecce213c104dc31e63bef40490ec242 inherit pub_methods_classbitpit_1_1LevelSetObject"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetObject.xhtml#a4ecce213c104dc31e63bef40490ec242">dump</a> (std::fstream &amp;)</td></tr>
<tr class="separator:a4ecce213c104dc31e63bef40490ec242 inherit pub_methods_classbitpit_1_1LevelSetObject"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a095c1b5e1bb5fd841b82f50a71a50dad inherit pub_methods_classbitpit_1_1LevelSetObject"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetObject.xhtml#a095c1b5e1bb5fd841b82f50a71a50dad">getId</a> () const </td></tr>
<tr class="separator:a095c1b5e1bb5fd841b82f50a71a50dad inherit pub_methods_classbitpit_1_1LevelSetObject"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a12e99e52418bbff321e03a45018955 inherit pub_methods_classbitpit_1_1LevelSetObject"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetObject.xhtml#a3a12e99e52418bbff321e03a45018955">restore</a> (std::fstream &amp;)</td></tr>
<tr class="separator:a3a12e99e52418bbff321e03a45018955 inherit pub_methods_classbitpit_1_1LevelSetObject"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a70bff906b394c2c23b1a0e0ab610ac83"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a70bff906b394c2c23b1a0e0ab610ac83">associateSimplexToCell</a> (<a class="el" href="classbitpit_1_1LevelSetCartesian.xhtml">LevelSetCartesian</a> *, const double &amp;)</td></tr>
<tr class="separator:a70bff906b394c2c23b1a0e0ab610ac83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b5205cea050a46117eb93fe4cafdde9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a1b5205cea050a46117eb93fe4cafdde9">associateSimplexToCell</a> (<a class="el" href="classbitpit_1_1LevelSetOctree.xhtml">LevelSetOctree</a> *, const double &amp;)</td></tr>
<tr class="separator:a1b5205cea050a46117eb93fe4cafdde9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6b6f336045d9576467c74fda94c653e"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::array<br class="typebreak"/>
&lt; double, 3 &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#ac6b6f336045d9576467c74fda94c653e">getSimplexVertices</a> (const long &amp;) const </td></tr>
<tr class="separator:ac6b6f336045d9576467c74fda94c653e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dc0159e82618b7686ef6a27391e0750"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a8dc0159e82618b7686ef6a27391e0750">infoFromSimplex</a> (const std::array&lt; double, 3 &gt; &amp;, const long &amp;, double &amp;, double &amp;, std::array&lt; double, 3 &gt; &amp;, std::array&lt; double, 3 &gt; &amp;) const </td></tr>
<tr class="separator:a8dc0159e82618b7686ef6a27391e0750"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a620cbe659447387c5cbe0701bb7b0ab3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a620cbe659447387c5cbe0701bb7b0ab3">lsFromSimplex</a> (<a class="el" href="classbitpit_1_1LevelSetKernel.xhtml">LevelSetKernel</a> *, const double &amp;, const bool &amp;, bool filter=false)</td></tr>
<tr class="separator:a620cbe659447387c5cbe0701bb7b0ab3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37502fe1c723a7d646173fdf2c61e403"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml#a37502fe1c723a7d646173fdf2c61e403">updateSimplexToCell</a> (<a class="el" href="classbitpit_1_1LevelSetOctree.xhtml">LevelSetOctree</a> *, const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt; &amp;, const double &amp;)</td></tr>
<tr class="separator:a37502fe1c723a7d646173fdf2c61e403"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Implements visitor pattern fo segmentated geometries. </p>

<p>Definition at line <a class="el" href="levelSet_8hpp_source.xhtml#l00253">253</a> of file <a class="el" href="levelSet_8hpp_source.xhtml">levelSet.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="acecb252ef5a3df908217900ab175938c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::LevelSetSegmentation::~LevelSetSegmentation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Destructor </p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a0a26b98c0ce42e24c6243eed2c325574"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::LevelSetSegmentation::LevelSetSegmentation </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml">SurfUnstructured</a> *&#160;</td>
          <td class="paramname"><em>STL</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Constructor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>identifier of object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*STL</td><td>pointer to surface mesh </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00079">79</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a706362bc324587dd7522e194ff538c65"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::LevelSetSegmentation::LevelSetSegmentation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml">LevelSetSegmentation</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy constructor. Assigns same id to new object; </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">other</td><td>object to be coppied </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a70bff906b394c2c23b1a0e0ab610ac83"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::associateSimplexToCell </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1LevelSetCartesian.xhtml">LevelSetCartesian</a> *&#160;</td>
          <td class="paramname"><em>visitee</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>RSearch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Determines the list of triangles which influence each cell (i.e. cells which are within the narrow band of the triangle) for cartesian meshes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">visitee</td><td>pointer to cartesian mesh </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">RSearch</td><td>size of narrow band </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00468">468</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1b5205cea050a46117eb93fe4cafdde9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::associateSimplexToCell </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1LevelSetOctree.xhtml">LevelSetOctree</a> *&#160;</td>
          <td class="paramname"><em>visitee</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>RSearch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Determines the list of triangles which influence each cell (i.e. cells which are within the narrow band of the triangle) for octree meshes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">visitee</td><td>pointer to octree mesh </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">RSearch</td><td>size of narrow band </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00563">563</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a82fae0c93d9cc4cdd7d132ad47ba252c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::clearAfterMeshMovement </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>mapper</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Deletes non-existing items </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">mapper</td><td>mapping info </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classbitpit_1_1LevelSetObject.xhtml#a574db86d1d478c50c71a008603f2f379">bitpit::LevelSetObject</a>.</p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00697">697</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae4a3143e281b4c1f8f39f49c17aae1c9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml">LevelSetSegmentation</a> * bitpit::LevelSetSegmentation::clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Clones the object </p>
<dl class="section return"><dt>Returns</dt><dd>pointer to cloned object </dd></dl>

<p>Implements <a class="el" href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a>.</p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00123">123</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2705708080ee9532327e5ce5ebaf0b7d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::computeLSInNarrowBand </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1LevelSetKernel.xhtml">LevelSetKernel</a> *&#160;</td>
          <td class="paramname"><em>visitee</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>RSearch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>signd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Computes the levelset function within the narrow band </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">visitee</td><td>pointer to mesh </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">RSearch</td><td>size of narrow band </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">signd</td><td>if signed- or unsigned- distance function should be calculated </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a>.</p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00426">426</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ada4f28d606c67e795d79835b54b78786"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::dumpDerived </td>
          <td>(</td>
          <td class="paramtype">std::fstream &amp;&#160;</td>
          <td class="paramname"><em>stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Writes <a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml" title="Implements visitor pattern fo segmentated geometries. ">LevelSetSegmentation</a> to stream in binary format </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">stream</td><td>output stream </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a>.</p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00723">723</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac80e918a6d3fd5ea5d767d38f785dbc1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double bitpit::LevelSetSegmentation::evaluateLS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1LevelSetKernel.xhtml">LevelSetKernel</a> *&#160;</td>
          <td class="paramname"><em>visitee</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Evaluates the levelset in the specified cell </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">visitee</td><td>pointer to mesh </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>is the cell index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The value of the levelset. </dd></dl>

<p>Implements <a class="el" href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a>.</p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00388">388</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab960e3283c7b5102282a03e34edb5e6c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::getBoundingBox </td>
          <td>(</td>
          <td class="paramtype">std::array&lt; double, 3 &gt; &amp;&#160;</td>
          <td class="paramname"><em>minP</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::array&lt; double, 3 &gt; &amp;&#160;</td>
          <td class="paramname"><em>maxP</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Computes axis aligned bounding box of object </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">minP</td><td>minimum point </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">maxP</td><td>maximum point </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a>.</p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00416">416</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9e30faab8e4f91f5c8ef0684ddf23d88"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::unordered_set&lt; long &gt; &amp; bitpit::LevelSetSegmentation::getSimplexList </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the list of simplices wich contain the cell centroid in their narrow band. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>cell index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>set with indices of simplices </dd></dl>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00132">132</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac6b6f336045d9576467c74fda94c653e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::array&lt; double, 3 &gt; &gt; bitpit::LevelSetSegmentation::getSimplexVertices </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Aggregate cell vertex coordinates in one vector </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>cell index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>coordinates of cell vertices </dd></dl>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00171">171</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a851ff999bc25f8d4be84ae2e049933d0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long bitpit::LevelSetSegmentation::getSupport </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the index of the closest simplex </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>cell index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>index of closest simplex </dd></dl>

<p>Implements <a class="el" href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a>.</p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00147">147</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8dc0159e82618b7686ef6a27391e0750"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::infoFromSimplex </td>
          <td>(</td>
          <td class="paramtype">const std::array&lt; double, 3 &gt; &amp;&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::array&lt; double, 3 &gt; &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::array&lt; double, 3 &gt; &amp;&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Computes levelset relevant information at one point with respect to a simplex </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">p</td><td>coordinates of point </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>index of simplex </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">d</td><td>distance point to simplex </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">s</td><td>sign of point wrt to simplex, i.e. according to normal </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">x</td><td>closest point on simplex </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">n</td><td>normal at closest point </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00292">292</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa7cf1f1132b99d6df086b46d60653d6b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool bitpit::LevelSetSegmentation::isInNarrowBand </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check if cell is in narrowband of any triangle; </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>cell index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>if in narow band </dd></dl>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00162">162</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a620cbe659447387c5cbe0701bb7b0ab3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::lsFromSimplex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1LevelSetKernel.xhtml">LevelSetKernel</a> *&#160;</td>
          <td class="paramname"><em>visitee</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>search</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>signd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>filter</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Update the levelset function of whole mesh by using associated simplices </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">visitee</td><td>visited mesh </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">search</td><td>size of narrow band </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">signd</td><td>if signed- or unsigned- distance function should be calculated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filter</td><td>if triangles should be ereased when outside narrow band (default false) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00197">197</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aed766331f391f2a2218e8973c87869bc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::readCommunicationBuffer </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; long &gt; &amp;&#160;</td>
          <td class="paramname"><em>recvList</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>nItems</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1RecvBuffer.xhtml">RecvBuffer</a> &amp;&#160;</td>
          <td class="paramname"><em>dataBuffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Processing of communication buffer into data structure </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">recvList</td><td>list of cells to be received </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nItems</td><td>number of items within the buffer </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">dataBuffer</td><td>buffer containing the data </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a>.</p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00827">827</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a168ce68cf265facc7adf5d6607718d59"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::restoreDerived </td>
          <td>(</td>
          <td class="paramtype">std::fstream &amp;&#160;</td>
          <td class="paramname"><em>stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Reads <a class="el" href="classbitpit_1_1LevelSetSegmentation.xhtml" title="Implements visitor pattern fo segmentated geometries. ">LevelSetSegmentation</a> from stream in binary format </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">stream</td><td>output stream </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a>.</p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00752">752</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac0f2a1a1d90de202ee3f0adef6af3a82"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool bitpit::LevelSetSegmentation::seedNarrowBand </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1LevelSetCartesian.xhtml">LevelSetCartesian</a> *&#160;</td>
          <td class="paramname"><em>visitee</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::array&lt; double, 3 &gt;&gt; &amp;&#160;</td>
          <td class="paramname"><em>VS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; int &gt; &amp;&#160;</td>
          <td class="paramname"><em>I</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Finds seed points in narrow band within a cartesian mesh for one simplex </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">visitee</td><td>cartesian mesh </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">VS</td><td>Simplex </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">I</td><td>indices of seed points </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00349">349</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a25a324abc0f55bae7214f4ccff8c9cab"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::updateLSInNarrowBand </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1LevelSetKernel.xhtml">LevelSetKernel</a> *&#160;</td>
          <td class="paramname"><em>visitee</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>mapper</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>RSearch</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname"><em>signd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Updates the levelset function within the narrow band after mesh adaptation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">visitee</td><td>pointer to mesh </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mapper</td><td>information concerning mesh adaption </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">RSearch</td><td>size of narrow band </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">signd</td><td>if signed- or unsigned- distance function should be calculated </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a>.</p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00448">448</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a37502fe1c723a7d646173fdf2c61e403"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::updateSimplexToCell </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1LevelSetOctree.xhtml">LevelSetOctree</a> *&#160;</td>
          <td class="paramname"><em>visitee</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>mapper</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>newRSearch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Updates the list of triangles which influence each cell (i.e. cells which are within the narrow band of the triangle) for octree meshes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">visitee</td><td>pointer to octree mesh </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mapper</td><td>information concerning mesh adaption </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">newRSearch</td><td>new size of narrow band </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00634">634</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2f588c1d6cc5899483e86819aca4428f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LevelSetSegmentation::writeCommunicationBuffer </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; long &gt; &amp;&#160;</td>
          <td class="paramname"><em>sendList</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1SendBuffer.xhtml">SendBuffer</a> &amp;&#160;</td>
          <td class="paramname"><em>sizeBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1SendBuffer.xhtml">SendBuffer</a> &amp;&#160;</td>
          <td class="paramname"><em>dataBuffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Flushing of data to communication buffers for partitioning </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sendList</td><td>list of cells to be sent </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">sizeBuffer</td><td>buffer for first communication used to communicate the size of data buffer </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">dataBuffer</td><td>buffer for second communication containing data </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a>.</p>

<p>Definition at line <a class="el" href="levelSetSegmentation_8cpp_source.xhtml#l00789">789</a> of file <a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/levelset/<a class="el" href="levelSet_8hpp_source.xhtml">levelSet.hpp</a></li>
<li>src/levelset/<a class="el" href="levelSetSegmentation_8cpp_source.xhtml">levelSetSegmentation.cpp</a></li>
</ul>
</div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:25 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - bitpit::LoggerManager Class Reference</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>bitpit</b></li><li class="navelem"><a class="el" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classbitpit_1_1LoggerManager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">bitpit::LoggerManager Class Reference<div class="ingroups"><a class="el" href="group__Logger.xhtml">Logger</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Manager for the loggers.  
 <a href="classbitpit_1_1LoggerManager.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="memitem:a18fdc5804daaba6f3c2db2143414dc8d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a18fdc5804daaba6f3c2db2143414dc8d"></a>
static std::string&#160;</td><td class="memItemRight" valign="bottom"><b>BITPIT_LOG_NAME</b> = &quot;bitpit&quot;</td></tr>
<tr class="separator:a18fdc5804daaba6f3c2db2143414dc8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4a230c4e801c9f21f5bd4c2de323913"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af4a230c4e801c9f21f5bd4c2de323913"></a>
static std::string&#160;</td><td class="memItemRight" valign="bottom"><b>BITPIT_LOG_DIRECTORY</b> = &quot;.&quot;</td></tr>
<tr class="separator:af4a230c4e801c9f21f5bd4c2de323913"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f6899ef7326a6a131372d1727eca86c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a9f6899ef7326a6a131372d1727eca86c">manager</a> ()</td></tr>
<tr class="separator:a9f6899ef7326a6a131372d1727eca86c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd127b04d6851eb3da78f0a18e736255"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#afd127b04d6851eb3da78f0a18e736255">~LoggerManager</a> ()</td></tr>
<tr class="separator:afd127b04d6851eb3da78f0a18e736255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a938b602ae97614227c05cf1784d7ff49"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a> ()</td></tr>
<tr class="separator:a938b602ae97614227c05cf1784d7ff49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7fb632df3503f6d690d36e2a2f93049"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#ab7fb632df3503f6d690d36e2a2f93049">cout</a> (const std::string &amp;name)</td></tr>
<tr class="separator:ab7fb632df3503f6d690d36e2a2f93049"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad97dc30dcadb9c87ca180637884b4362"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">initialize</a> (log::Mode mode, bool reset, const int &amp;nProcessors, const int &amp;rank)</td></tr>
<tr class="separator:ad97dc30dcadb9c87ca180637884b4362"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a381a5c47e3146201b24006b1d39d4edd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a381a5c47e3146201b24006b1d39d4edd">initialize</a> (log::Mode mode, bool reset=false, const std::string &amp;directory=BITPIT_LOG_DIRECTORY, const int &amp;nProcessors=1, const int &amp;rank=0)</td></tr>
<tr class="separator:a381a5c47e3146201b24006b1d39d4edd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59adcd57997f5d8caaca65ecc450a67c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a59adcd57997f5d8caaca65ecc450a67c">initialize</a> (log::Mode mode, const std::string &amp;name, bool reset=false, const std::string &amp;directory=BITPIT_LOG_DIRECTORY, const int &amp;nProcessors=1, const int &amp;rank=0)</td></tr>
<tr class="separator:a59adcd57997f5d8caaca65ecc450a67c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb70c032a23025cfaac462a7948ff6ce"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#afb70c032a23025cfaac462a7948ff6ce">create</a> (const std::string &amp;name, bool reset=false, const int &amp;nProcessors=1, const int &amp;rank=0)</td></tr>
<tr class="separator:afb70c032a23025cfaac462a7948ff6ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46e48ba8cdb7325666446acb9b4c7432"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a46e48ba8cdb7325666446acb9b4c7432">create</a> (const std::string &amp;name, bool reset, const std::string &amp;directory, const int &amp;nProcessors=1, const int &amp;rank=0)</td></tr>
<tr class="separator:a46e48ba8cdb7325666446acb9b4c7432"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dea2852803426766ee2ed7dcc0e0341"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a2dea2852803426766ee2ed7dcc0e0341">destroy</a> (const std::string &amp;name, bool force=false)</td></tr>
<tr class="separator:a2dea2852803426766ee2ed7dcc0e0341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a754f70184ccba4d6605db0a72cd98c3a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a754f70184ccba4d6605db0a72cd98c3a">exists</a> (const std::string &amp;name) const </td></tr>
<tr class="separator:a754f70184ccba4d6605db0a72cd98c3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a828b6591258444aa3ae141c7eeca6a6c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a828b6591258444aa3ae141c7eeca6a6c">isInitialized</a> () const </td></tr>
<tr class="separator:a828b6591258444aa3ae141c7eeca6a6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a078d4ba4ed203093981e6c161d5fd58e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a078d4ba4ed203093981e6c161d5fd58e">setMode</a> (log::Mode mode)</td></tr>
<tr class="separator:a078d4ba4ed203093981e6c161d5fd58e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3a4b587319bd1750813775e0106bb57"><td class="memItemLeft" align="right" valign="top">log::Mode&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#ab3a4b587319bd1750813775e0106bb57">getMode</a> () const </td></tr>
<tr class="separator:ab3a4b587319bd1750813775e0106bb57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5feeab7cdff54550041aa6bb9c366585"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a5feeab7cdff54550041aa6bb9c366585">setVerbosities</a> (<a class="el" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity)</td></tr>
<tr class="separator:a5feeab7cdff54550041aa6bb9c366585"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24f7cd2787c0914a3acf25dff3b6c35f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a24f7cd2787c0914a3acf25dff3b6c35f">setConsoleVerbosity</a> (<a class="el" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity)</td></tr>
<tr class="separator:a24f7cd2787c0914a3acf25dff3b6c35f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9531640f4b85fed8615f29a74ad34577"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a9531640f4b85fed8615f29a74ad34577">setFileVerbosity</a> (<a class="el" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity)</td></tr>
<tr class="separator:a9531640f4b85fed8615f29a74ad34577"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37a24504b0b2e674edee4bc1612b6876"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a37a24504b0b2e674edee4bc1612b6876">getDefaultName</a> () const </td></tr>
<tr class="separator:a37a24504b0b2e674edee4bc1612b6876"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6867449ff7afc7567d92d6c478d82c79"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1LoggerManager.xhtml#a6867449ff7afc7567d92d6c478d82c79">getDefaultDirectory</a> () const </td></tr>
<tr class="separator:a6867449ff7afc7567d92d6c478d82c79"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Manager for the loggers. </p>
<p>This class implements a manager for the loggers. The manager allowes the different loggers to work together. </p>

<p>Definition at line <a class="el" href="logger_8hpp_source.xhtml#l00179">179</a> of file <a class="el" href="logger_8hpp_source.xhtml">logger.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="afd127b04d6851eb3da78f0a18e736255"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::LoggerManager::~LoggerManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Destructor. </p>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l00822">822</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a938b602ae97614227c05cf1784d7ff49"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp; bitpit::LoggerManager::cout </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns an instance of defualt logger.</p>
<dl class="section return"><dt>Returns</dt><dd>An instance of the default specified logger. </dd></dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l00856">856</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab7fb632df3503f6d690d36e2a2f93049"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp; bitpit::LoggerManager::cout </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns an instance of the specified logger.</p>
<p>This function returns an instance of the specified logger. If the logger does not exists a new instance will be created.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>is the name of the logger </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An instance of the specified logger. </dd></dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l00870">870</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afb70c032a23025cfaac462a7948ff6ce"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LoggerManager::create </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>reset</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>nProcessors</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rank</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Creates a new logger.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>is the name for the logger </td></tr>
    <tr><td class="paramname">reset</td><td>if true the log files will be reset </td></tr>
    <tr><td class="paramname">nProcessors</td><td>is the total number of processors in the communicator </td></tr>
    <tr><td class="paramname">rank</td><td>is the parallel rank in the communicator </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l00956">956</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a46e48ba8cdb7325666446acb9b4c7432"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LoggerManager::create </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>reset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>directory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>nProcessors</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rank</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Creates a new logger.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>is the name for the logger </td></tr>
    <tr><td class="paramname">reset</td><td>if true the log files will be reset </td></tr>
    <tr><td class="paramname">directory</td><td>is the directory for saving the log files </td></tr>
    <tr><td class="paramname">nProcessors</td><td>is the total number of processors in the communicator </td></tr>
    <tr><td class="paramname">rank</td><td>is the parallel rank in the communicator </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l00971">971</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2dea2852803426766ee2ed7dcc0e0341"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool bitpit::LoggerManager::destroy </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>force</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Destroys the specified logger.</p>
<p>The logger can be shared among differen users, a logger is destoryed only if it has no users.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>is the name of the logger </td></tr>
    <tr><td class="paramname">force</td><td>controls if the logger will be destory also if it still has users </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the logger has been destroyed, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l01012">1012</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a754f70184ccba4d6605db0a72cd98c3a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool bitpit::LoggerManager::exists </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check if the specified logger exists.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>is the name of the logger </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the logger exists, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l01050">1050</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6867449ff7afc7567d92d6c478d82c79"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string bitpit::LoggerManager::getDefaultDirectory </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Gets the defualt logger directory.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">The</td><td>defualt logger directory. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l01223">1223</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a37a24504b0b2e674edee4bc1612b6876"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string bitpit::LoggerManager::getDefaultName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Gets the defualt logger name.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">The</td><td>defualt logger name. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l01213">1213</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab3a4b587319bd1750813775e0106bb57"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">log::Mode bitpit::LoggerManager::getMode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets the policty for the loggers.</p>
<dl class="section return"><dt>Returns</dt><dd>The mode set for the loggers. </dd></dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l01094">1094</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad97dc30dcadb9c87ca180637884b4362"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LoggerManager::initialize </td>
          <td>(</td>
          <td class="paramtype">log::Mode&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>reset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>nProcessors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rank</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initializes the log manager.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mode</td><td>is the mode that will be set </td></tr>
    <tr><td class="paramname">reset</td><td>if true the log files will be reset </td></tr>
    <tr><td class="paramname">nProcessors</td><td>is the total number of processors in the communicator </td></tr>
    <tr><td class="paramname">rank</td><td>is the parallel rank in the communicator </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l00897">897</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a381a5c47e3146201b24006b1d39d4edd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LoggerManager::initialize </td>
          <td>(</td>
          <td class="paramtype">log::Mode&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>reset</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>directory</em> = <code>BITPIT_LOG_DIRECTORY</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>nProcessors</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rank</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initializes the log manager.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mode</td><td>is the mode that will be set </td></tr>
    <tr><td class="paramname">reset</td><td>if true the log files will be reset </td></tr>
    <tr><td class="paramname">directory</td><td>is the defualt directory for saving the log files </td></tr>
    <tr><td class="paramname">nProcessors</td><td>is the total number of processors in the communicator </td></tr>
    <tr><td class="paramname">rank</td><td>is the parallel rank in the communicator </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l00912">912</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a59adcd57997f5d8caaca65ecc450a67c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LoggerManager::initialize </td>
          <td>(</td>
          <td class="paramtype">log::Mode&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>reset</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>directory</em> = <code>BITPIT_LOG_DIRECTORY</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>nProcessors</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>rank</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initializes the log manager.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mode</td><td>is the mode that will be set </td></tr>
    <tr><td class="paramname">name</td><td>is the name for the default logger </td></tr>
    <tr><td class="paramname">reset</td><td>if true the log files will be reset </td></tr>
    <tr><td class="paramname">directory</td><td>is the defualt directory for saving the log files </td></tr>
    <tr><td class="paramname">nProcessors</td><td>is the total number of processors in the communicator </td></tr>
    <tr><td class="paramname">rank</td><td>is the parallel rank in the communicator </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l00928">928</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a828b6591258444aa3ae141c7eeca6a6c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool bitpit::LoggerManager::isInitialized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Checks if the logger manager has been initialized.</p>
<p>Explicit initialization of the manager is done using the function 'initialize', implicit initialization happnes the first time a logger is created.</p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the logger manager has been initialized, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l01065">1065</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9f6899ef7326a6a131372d1727eca86c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a> &amp; bitpit::LoggerManager::manager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns an instance of the logger manager.</p>
<dl class="section return"><dt>Returns</dt><dd>An instance of the logger manager. </dd></dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l00842">842</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a24f7cd2787c0914a3acf25dff3b6c35f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LoggerManager::setConsoleVerbosity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a>&#160;</td>
          <td class="paramname"><em>verbosity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets the verbosity for the messages printed on the console.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">verbosity</td><td>is the verbosity for the messages printed on the console </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l01189">1189</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9531640f4b85fed8615f29a74ad34577"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LoggerManager::setFileVerbosity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a>&#160;</td>
          <td class="paramname"><em>verbosity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets the verbosity for the messages printed on the file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">verbosity</td><td>is the verbosity for the messages printed on the file </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l01201">1201</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a078d4ba4ed203093981e6c161d5fd58e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool bitpit::LoggerManager::setMode </td>
          <td>(</td>
          <td class="paramtype">log::Mode&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets the policty for the loggers.</p>
<p>The policy has to be set before creating the loggers.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mode</td><td>is the mode that will be set </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the mode was successfully set, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l01078">1078</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5feeab7cdff54550041aa6bb9c366585"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::LoggerManager::setVerbosities </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a>&#160;</td>
          <td class="paramname"><em>verbosity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets the verbosity for the messages printed both on the console and on the log file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">verbosity</td><td>is the verbosity for the messages </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="logger_8cpp_source.xhtml#l01177">1177</a> of file <a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/IO/<a class="el" href="logger_8hpp_source.xhtml">logger.hpp</a></li>
<li>src/IO/<a class="el" href="logger_8cpp_source.xhtml">logger.cpp</a></li>
</ul>
</div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:25 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

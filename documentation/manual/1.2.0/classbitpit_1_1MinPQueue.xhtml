
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - bitpit::MinPQueue&lt; T, T1 &gt; Class Template Reference</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>bitpit</b></li><li class="navelem"><a class="el" href="classbitpit_1_1MinPQueue.xhtml">MinPQueue</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classbitpit_1_1MinPQueue-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">bitpit::MinPQueue&lt; T, T1 &gt; Class Template Reference<div class="ingroups"><a class="el" href="group__SortAlgorithms.xhtml">Sort algorithms (SA)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>class for min priority queue.  
 <a href="classbitpit_1_1MinPQueue.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a92d00cf57f84b05881175ab38974de9e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#a92d00cf57f84b05881175ab38974de9e">heap_size</a></td></tr>
<tr class="separator:a92d00cf57f84b05881175ab38974de9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a768f62d128005bb1179f8cc45fb49854"><td class="memItemLeft" align="right" valign="top">std::vector&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#a768f62d128005bb1179f8cc45fb49854">keys</a></td></tr>
<tr class="separator:a768f62d128005bb1179f8cc45fb49854"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4545644389c4f1e0030f6a513492370"><td class="memItemLeft" align="right" valign="top">std::vector&lt; T1 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#ac4545644389c4f1e0030f6a513492370">labels</a></td></tr>
<tr class="separator:ac4545644389c4f1e0030f6a513492370"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84c4a6b0bb11c4031ad99f58c92a5c84"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::array&lt; int, 2 &gt; &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#a84c4a6b0bb11c4031ad99f58c92a5c84">map</a></td></tr>
<tr class="separator:a84c4a6b0bb11c4031ad99f58c92a5c84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37a06c99ec3dbcc0b2ed5b624d3edc9c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#a37a06c99ec3dbcc0b2ed5b624d3edc9c">MAXSTK</a></td></tr>
<tr class="separator:a37a06c99ec3dbcc0b2ed5b624d3edc9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af12cc692d6a18325063f2e4fbd881588"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#af12cc692d6a18325063f2e4fbd881588">MinPQueue</a> (bool a=false, std::vector&lt; std::array&lt; int, 2 &gt; &gt; *b=NULL)</td></tr>
<tr class="separator:af12cc692d6a18325063f2e4fbd881588"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0151fb9b1922646f9e027bd9c631d328"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#a0151fb9b1922646f9e027bd9c631d328">MinPQueue</a> (int, bool a=false, std::vector&lt; std::array&lt; int, 2 &gt; &gt; *b=NULL)</td></tr>
<tr class="separator:a0151fb9b1922646f9e027bd9c631d328"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff88f3a6f88cd13b5565828acee2fae9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#aff88f3a6f88cd13b5565828acee2fae9">~MinPQueue</a> (void)</td></tr>
<tr class="separator:aff88f3a6f88cd13b5565828acee2fae9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69b5b57e992b4b622539c71a3c1a3620"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#a69b5b57e992b4b622539c71a3c1a3620">clear</a> (void)</td></tr>
<tr class="separator:a69b5b57e992b4b622539c71a3c1a3620"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4674fac27107b5539cde6073cfcecd4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#af4674fac27107b5539cde6073cfcecd4">extract</a> (T &amp;)</td></tr>
<tr class="separator:af4674fac27107b5539cde6073cfcecd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa79800f0860086f71d1b83f140f1814f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#aa79800f0860086f71d1b83f140f1814f">extract</a> (T &amp;, T1 &amp;)</td></tr>
<tr class="separator:aa79800f0860086f71d1b83f140f1814f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c341bde1333cdc4a50dfba4004ddd9a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#a6c341bde1333cdc4a50dfba4004ddd9a">insert</a> (T &amp;)</td></tr>
<tr class="separator:a6c341bde1333cdc4a50dfba4004ddd9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43de814e0481227471f49415338dbdc6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#a43de814e0481227471f49415338dbdc6">insert</a> (T &amp;, T1 &amp;)</td></tr>
<tr class="separator:a43de814e0481227471f49415338dbdc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab449e33f5be2c4e0a1619a4abfdfe098"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#ab449e33f5be2c4e0a1619a4abfdfe098">modify</a> (int, T &amp;)</td></tr>
<tr class="separator:ab449e33f5be2c4e0a1619a4abfdfe098"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2d4d4bb27f2eb43a340a1732ff4a019"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#ad2d4d4bb27f2eb43a340a1732ff4a019">modify</a> (int, T &amp;, T1 &amp;)</td></tr>
<tr class="separator:ad2d4d4bb27f2eb43a340a1732ff4a019"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5872ca302513a914f69d5896988b3f9c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#a5872ca302513a914f69d5896988b3f9c">buildHeap</a> (void)</td></tr>
<tr class="separator:a5872ca302513a914f69d5896988b3f9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4aaff6e3588c5cdf94b250eb64c3ab23"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1MinPQueue.xhtml#a4aaff6e3588c5cdf94b250eb64c3ab23">display</a> (std::ostream &amp;)</td></tr>
<tr class="separator:a4aaff6e3588c5cdf94b250eb64c3ab23"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T, class T1 = T&gt;<br/>
class bitpit::MinPQueue&lt; T, T1 &gt;</h3>

<p>class for min priority queue. </p>
<p>Class for priority element insertion and extraction. Elements inserted in a min. priority queue are internally sorted on a binary tree to ensure the following property (heap property): given a parent node in the tree (P), and given its children nodes (L and R), P &lt; L and P &lt; R. In this way, the root element is the one with smallest value in the tree.</p>
<p>Each time a new element is inserted or removed from the heap, the tree is updated by moving the elements upwards or downwards on each branch to maintain the heap property. The new position of elements in the tree can be tracked by passing a non-null pointer to a mapping (a vector&lt; array&lt;int, 2&gt; &gt;) to the heap constructor. At any time, the mapping will store the following information:</p>
<ul>
<li>mapping[i][0] stores the index of the node currently stored in the i-th position of the tree.</li>
<li>mapping[i][1] stores the current position in the tree of the i-th node</li>
</ul>
<p>Template parameter T can be of any copy-constructible type for which operator&lt; is defined</p>
<ul>
<li>Template parameter T1 is used for labelling tree nodes, and can be any copy-constructible type. </li>
</ul>

<p>Definition at line <a class="el" href="SortAlgorithms_8hpp_source.xhtml#l00166">166</a> of file <a class="el" href="SortAlgorithms_8hpp_source.xhtml">SortAlgorithms.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af12cc692d6a18325063f2e4fbd881588"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::<a class="el" href="classbitpit_1_1MinPQueue.xhtml">MinPQueue</a> </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flag_label</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::array&lt; int, 2 &gt; &gt; *&#160;</td>
          <td class="paramname"><em>map_</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Default constructor for class <a class="el" href="classbitpit_1_1MinPQueue.xhtml" title="class for min priority queue. ">MinPQueue</a>. Initialize an empty priority queue. If a pointer to a vector&lt;array&lt;int, 2&gt;&gt; is provided, the mapping between the original and current element position in the tree is tracked.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">flag_label</td><td>flag for using node labelling (true) or not (false). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">map_</td><td>(default = NULL) pointer to map between the original-&gt;current element positions </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00088">88</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="a0151fb9b1922646f9e027bd9c631d328"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::<a class="el" href="classbitpit_1_1MinPQueue.xhtml">MinPQueue</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>maxstack</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flag_label</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::array&lt; int, 2 &gt; &gt; *&#160;</td>
          <td class="paramname"><em>map_</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Constructor #1 for class <a class="el" href="classbitpit_1_1MinPQueue.xhtml" title="class for min priority queue. ">MinPQueue</a>. Initialize an empty priority queue. The size of memory reserve is specified by maxstack. If a pointer to a vector&lt;array&lt;int, 2&gt;&gt; is provided, the mapping between the original and current element position in the tree is tracked.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">maxstack</td><td>size of memory reserve. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">flag_label</td><td>flag for using node labelling (true) or not (false). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">map_</td><td>(default = NULL) pointer to map between the original-&gt;current element positions </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00138">138</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="aff88f3a6f88cd13b5565828acee2fae9"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::~<a class="el" href="classbitpit_1_1MinPQueue.xhtml">MinPQueue</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Default destructor for class <a class="el" href="classbitpit_1_1MinPQueue.xhtml" title="class for min priority queue. ">MinPQueue</a>. Clear queue content and free memory. </p>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00184">184</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a5872ca302513a914f69d5896988b3f9c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::buildHeap </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Build a min heap, from data currently stored in the underlying container. </p>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00390">390</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="a69b5b57e992b4b622539c71a3c1a3620"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Clear current content without freeing memory. </p>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00226">226</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4aaff6e3588c5cdf94b250eb64c3ab23"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::display </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>out</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Display info about the heap to output stream (e.g. current number of element stored in the tree, memory reserved, etc.)</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">out</td><td>output stream </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00790">790</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="af4674fac27107b5539cde6073cfcecd4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::extract </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>root</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Extract the next element (i.e. the element on the root of the tree) from heap list and reduce heap size by one element. After extraction heap property is automatically restored by updating the tree.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">root</td><td>value of element at tree root. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00485">485</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa79800f0860086f71d1b83f140f1814f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::extract </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T1 &amp;&#160;</td>
          <td class="paramname"><em>root_label</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Extract the next element (i.e. the element on the root of the tree) from heap list and reduce heap size by one element. After extraction heap property is automatically restored by updating the tree.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">root</td><td>value of element at tree root. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">root_label</td><td>label associated to root element (available only if flag_label is set to 'true' at heap construction) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00425">425</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6c341bde1333cdc4a50dfba4004ddd9a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::insert </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>key_new</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a new element in the heap. After insertion the heap property is automatically restored by updating the tree.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">key_new</td><td>value of the new element. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00590">590</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="a43de814e0481227471f49415338dbdc6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::insert </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>key_new</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T1 &amp;&#160;</td>
          <td class="paramname"><em>label_new</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a new element in the heap. After insertion the heap property is automatically restored by updating the tree.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">key_new</td><td>value of the new element. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">label_new</td><td>label associated to the new element (available only if flag_label is set to 'true' at heap construction) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00541">541</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab449e33f5be2c4e0a1619a4abfdfe098"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::modify </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>key_new</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Modify the value of an existing element in the heap. The heap property is automatically restored by moving down/upwards the element in the tree.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>index of element in the tree. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">key_new</td><td>new value of the element. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00728">728</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad2d4d4bb27f2eb43a340a1732ff4a019"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class T1 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::modify </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>key_new</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T1 &amp;&#160;</td>
          <td class="paramname"><em>label_new</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Modify the value of an existing element in the heap. The heap property is automatically restored by moving down/upwards the element in the tree.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>index of element in the tree. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">key_new</td><td>new value of the element. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">label_new</td><td>new label to assign to the element (available only if flag_label is set to 'true' at heap construction) </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="PQueue_8tpp_source.xhtml#l00652">652</a> of file <a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a92d00cf57f84b05881175ab38974de9e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class T1 = T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::heap_size</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>number of elements in stack </p>

<p>Definition at line <a class="el" href="SortAlgorithms_8hpp_source.xhtml#l00171">171</a> of file <a class="el" href="SortAlgorithms_8hpp_source.xhtml">SortAlgorithms.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a768f62d128005bb1179f8cc45fb49854"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class T1 = T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; T &gt; <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::keys</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>stack </p>

<p>Definition at line <a class="el" href="SortAlgorithms_8hpp_source.xhtml#l00172">172</a> of file <a class="el" href="SortAlgorithms_8hpp_source.xhtml">SortAlgorithms.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac4545644389c4f1e0030f6a513492370"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class T1 = T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; T1 &gt; <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::labels</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>labels associated to keys </p>

<p>Definition at line <a class="el" href="SortAlgorithms_8hpp_source.xhtml#l00173">173</a> of file <a class="el" href="SortAlgorithms_8hpp_source.xhtml">SortAlgorithms.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a84c4a6b0bb11c4031ad99f58c92a5c84"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class T1 = T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::array&lt;int,2&gt; &gt;* <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::map</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>pointer to mapper </p>

<p>Definition at line <a class="el" href="SortAlgorithms_8hpp_source.xhtml#l00174">174</a> of file <a class="el" href="SortAlgorithms_8hpp_source.xhtml">SortAlgorithms.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a37a06c99ec3dbcc0b2ed5b624d3edc9c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class T1 = T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classbitpit_1_1MinPQueue.xhtml">bitpit::MinPQueue</a>&lt; T, T1 &gt;::MAXSTK</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Maximal stack size between resize </p>

<p>Definition at line <a class="el" href="SortAlgorithms_8hpp_source.xhtml#l00170">170</a> of file <a class="el" href="SortAlgorithms_8hpp_source.xhtml">SortAlgorithms.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/SA/<a class="el" href="SortAlgorithms_8hpp_source.xhtml">SortAlgorithms.hpp</a></li>
<li>src/SA/<a class="el" href="PQueue_8tpp_source.xhtml">PQueue.tpp</a></li>
</ul>
</div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:25 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - bitpit::SurfUnstructured Class Reference</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>bitpit</b></li><li class="navelem"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml">SurfUnstructured</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classbitpit_1_1SurfUnstructured-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">bitpit::SurfUnstructured Class Reference<div class="ingroups"><a class="el" href="group__surfunstructured.xhtml">Unstructured surface patch</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>The <a class="el" href="classbitpit_1_1SurfUnstructured.xhtml" title="The SurfUnstructured class defines an unstructured surface triangulation. ">SurfUnstructured</a> class defines an unstructured surface triangulation.  
 <a href="classbitpit_1_1SurfUnstructured.xhtml#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for bitpit::SurfUnstructured:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classbitpit_1_1SurfUnstructured__inherit__graph.svg" width="184" height="262"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for bitpit::SurfUnstructured:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classbitpit_1_1SurfUnstructured__coll__graph.svg" width="100%" height="564"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="memitem:ac40ca285c703d11f468f563d1522f973"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#ac40ca285c703d11f468f563d1522f973">SurfUnstructured</a> (const int &amp;id, int patch_dim=2, int space_dim=3)</td></tr>
<tr class="separator:ac40ca285c703d11f468f563d1522f973"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42afcfd1bf78be2f2d6d3edc7f4255cf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#a42afcfd1bf78be2f2d6d3edc7f4255cf">setExpert</a> (bool expert)</td></tr>
<tr class="separator:a42afcfd1bf78be2f2d6d3edc7f4255cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f5589b94978098eaba0ca8410caa9d6"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#a1f5589b94978098eaba0ca8410caa9d6">locatePoint</a> (const std::array&lt; double, 3 &gt; &amp;point)</td></tr>
<tr class="separator:a1f5589b94978098eaba0ca8410caa9d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58a0ddd25390ac640cc4debc4e5a00bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#a58a0ddd25390ac640cc4debc4e5a00bc">extractEdgeNetwork</a> (<a class="el" href="classbitpit_1_1SurfUnstructured.xhtml">SurfUnstructured</a> &amp;)</td></tr>
<tr class="separator:a58a0ddd25390ac640cc4debc4e5a00bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a117925cc94016e13ef9fff09aaf079"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#a8a117925cc94016e13ef9fff09aaf079">importSTL</a> (const std::string &amp;, const bool &amp;, int PIDOffset=0)</td></tr>
<tr class="separator:a8a117925cc94016e13ef9fff09aaf079"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4c81c64d4c54c8f060a8535fa46c2e8"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#aa4c81c64d4c54c8f060a8535fa46c2e8">exportSTL</a> (const std::string &amp;, const bool &amp;, bool flag=true)</td></tr>
<tr class="separator:aa4c81c64d4c54c8f060a8535fa46c2e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d2d096ac756965eb7b257f6218eac30"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#a8d2d096ac756965eb7b257f6218eac30">importDGF</a> (const std::string &amp;)</td></tr>
<tr class="separator:a8d2d096ac756965eb7b257f6218eac30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa876ca84696f8fb80636bd01c166f724"><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#aa876ca84696f8fb80636bd01c166f724">exportDGF</a> (const std::string &amp;)</td></tr>
<tr class="separator:aa876ca84696f8fb80636bd01c166f724"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4698fe1cfacd04fd363c7e694d046b5b"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#a4698fe1cfacd04fd363c7e694d046b5b">_updateAdaption</a> (bool trackAdaption)</td></tr>
<tr class="separator:a4698fe1cfacd04fd363c7e694d046b5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8558fe1c65cb2d7b98b8fcad48f62db0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#a8558fe1c65cb2d7b98b8fcad48f62db0">_markCellForRefinement</a> (const long &amp;id)</td></tr>
<tr class="separator:a8558fe1c65cb2d7b98b8fcad48f62db0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a711dfbbff4a37af945148b8c0e88fdbf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#a711dfbbff4a37af945148b8c0e88fdbf">_markCellForCoarsening</a> (const long &amp;id)</td></tr>
<tr class="separator:a711dfbbff4a37af945148b8c0e88fdbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe962cb76f4bee148d792449d0490480"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml#afe962cb76f4bee148d792449d0490480">_enableCellBalancing</a> (const long &amp;id, bool enabled)</td></tr>
<tr class="separator:afe962cb76f4bee148d792449d0490480"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classbitpit_1_1SurfaceKernel"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classbitpit_1_1SurfaceKernel')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classbitpit_1_1SurfaceKernel.xhtml">bitpit::SurfaceKernel</a></td></tr>
<tr class="memitem:af193fd94947a22c4b2d3ae4e28e4188f inherit pub_types_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af193fd94947a22c4b2d3ae4e28e4188f"></a>
typedef double(SurfaceKernel::*&#160;</td><td class="memItemRight" valign="bottom"><b>eval_f_</b> )(const long &amp;, int &amp;)</td></tr>
<tr class="separator:af193fd94947a22c4b2d3ae4e28e4188f inherit pub_types_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classbitpit_1_1PatchKernel"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classbitpit_1_1PatchKernel')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classbitpit_1_1PatchKernel.xhtml">bitpit::PatchKernel</a></td></tr>
<tr class="memitem:a007d4d414d4ac02d629df0d9449b77ba inherit pub_types_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a007d4d414d4ac02d629df0d9449b77ba"></a>
typedef <a class="el" href="classbitpit_1_1PiercedVector.xhtml">PiercedVector</a>&lt; <a class="el" href="classbitpit_1_1Cell.xhtml">Cell</a> &gt;<br class="typebreak"/>
::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>CellIterator</b></td></tr>
<tr class="separator:a007d4d414d4ac02d629df0d9449b77ba inherit pub_types_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af15962ceaeaa06a42c8aa5ffea323bd6 inherit pub_types_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af15962ceaeaa06a42c8aa5ffea323bd6"></a>
typedef <a class="el" href="classbitpit_1_1PiercedVector.xhtml">PiercedVector</a><br class="typebreak"/>
&lt; <a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &gt;::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>InterfaceIterator</b></td></tr>
<tr class="separator:af15962ceaeaa06a42c8aa5ffea323bd6 inherit pub_types_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32ba6b1bee2eab41970636aa7fe4e58a inherit pub_types_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a32ba6b1bee2eab41970636aa7fe4e58a"></a>
typedef <a class="el" href="classbitpit_1_1PiercedVector.xhtml">PiercedVector</a>&lt; <a class="el" href="classbitpit_1_1Vertex.xhtml">Vertex</a> &gt;<br class="typebreak"/>
::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>VertexIterator</b></td></tr>
<tr class="separator:a32ba6b1bee2eab41970636aa7fe4e58a inherit pub_types_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classbitpit_1_1SurfaceKernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classbitpit_1_1SurfaceKernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classbitpit_1_1SurfaceKernel.xhtml">bitpit::SurfaceKernel</a></td></tr>
<tr class="memitem:a948a1f5ea4a47a22f801c7b7b248c9ba inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a948a1f5ea4a47a22f801c7b7b248c9ba">SurfaceKernel</a> (const int &amp;id, const int &amp;patch_dim, const int &amp;space_dim, bool expert)</td></tr>
<tr class="separator:a948a1f5ea4a47a22f801c7b7b248c9ba inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad536127ef4ec97ad046f26b09a12f013 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#ad536127ef4ec97ad046f26b09a12f013">getSpaceDimension</a> (void) const </td></tr>
<tr class="separator:ad536127ef4ec97ad046f26b09a12f013 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a391965c537828391b823d0694c719b0e inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a391965c537828391b823d0694c719b0e">~SurfaceKernel</a> ()</td></tr>
<tr class="separator:a391965c537828391b823d0694c719b0e inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c4559ac1e82edb718d3cd59b29c64be inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a4c4559ac1e82edb718d3cd59b29c64be">evalCellArea</a> (const long &amp;)</td></tr>
<tr class="separator:a4c4559ac1e82edb718d3cd59b29c64be inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3a463aa19bb0cd0a11fd8c5242a66bb inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#ae3a463aa19bb0cd0a11fd8c5242a66bb">evalEdgeLength</a> (const long &amp;, const int &amp;)</td></tr>
<tr class="separator:ae3a463aa19bb0cd0a11fd8c5242a66bb inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e00b73b3e43b27f5997abdba92cbedd inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a5e00b73b3e43b27f5997abdba92cbedd">evalMinEdgeLength</a> (const long &amp;, int &amp;)</td></tr>
<tr class="separator:a5e00b73b3e43b27f5997abdba92cbedd inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dcac66df844778c11d56a283edca209 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a6dcac66df844778c11d56a283edca209">evalMaxEdgeLength</a> (const long &amp;, int &amp;)</td></tr>
<tr class="separator:a6dcac66df844778c11d56a283edca209 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd63f7dc8368551ded70841679b16c17 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#abd63f7dc8368551ded70841679b16c17">evalAngleAtVertex</a> (const long &amp;, const int &amp;)</td></tr>
<tr class="separator:abd63f7dc8368551ded70841679b16c17 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e10b23eb30db477b76c2e7da758aa2b inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a3e10b23eb30db477b76c2e7da758aa2b">evalMinAngleAtVertex</a> (const long &amp;, int &amp;)</td></tr>
<tr class="separator:a3e10b23eb30db477b76c2e7da758aa2b inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa41a7597b30c5b41f01c6acc1c44a630 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#aa41a7597b30c5b41f01c6acc1c44a630">evalMaxAngleAtVertex</a> (const long &amp;, int &amp;)</td></tr>
<tr class="separator:aa41a7597b30c5b41f01c6acc1c44a630 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38061afa8eb923af7a670edfc0cfdc95 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a38061afa8eb923af7a670edfc0cfdc95">evalAspectRatio</a> (const long &amp;, int &amp;)</td></tr>
<tr class="separator:a38061afa8eb923af7a670edfc0cfdc95 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a683a7221f7d402a740a53d4a96b24bb3 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">virtual std::array&lt; double, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a683a7221f7d402a740a53d4a96b24bb3">evalFacetNormal</a> (const long &amp;)</td></tr>
<tr class="separator:a683a7221f7d402a740a53d4a96b24bb3 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d27ea356f9ba1688aa0e4466460d791 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">std::array&lt; double, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a3d27ea356f9ba1688aa0e4466460d791">evalEdgeNormal</a> (const long &amp;, const int &amp;)</td></tr>
<tr class="separator:a3d27ea356f9ba1688aa0e4466460d791 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad78c2b69387b5030afe1e2a6647e44e2 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">virtual std::array&lt; double, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#ad78c2b69387b5030afe1e2a6647e44e2">evalVertexNormal</a> (const long &amp;, const int &amp;)</td></tr>
<tr class="separator:ad78c2b69387b5030afe1e2a6647e44e2 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6106ef3f29456c12da11f3554c6f9ae9 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a6106ef3f29456c12da11f3554c6f9ae9">evalCellSize</a> (const long &amp;id)</td></tr>
<tr class="separator:a6106ef3f29456c12da11f3554c6f9ae9 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3daf11ca8bcd28a74af7db2dde73876e inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a3daf11ca8bcd28a74af7db2dde73876e">displayQualityStats</a> (ostream &amp;, unsigned int padding=0)</td></tr>
<tr class="separator:a3daf11ca8bcd28a74af7db2dde73876e inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90e72375f49badec0ab43b535df1bdf5 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top">vector&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1SurfaceKernel.xhtml#a90e72375f49badec0ab43b535df1bdf5">computeHistogram</a> (eval_f_, std::vector&lt; double &gt; &amp;, long &amp;, int n_int=8, unsigned short mask=SELECT_ALL)</td></tr>
<tr class="separator:a90e72375f49badec0ab43b535df1bdf5 inherit pub_methods_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classbitpit_1_1PatchKernel"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classbitpit_1_1PatchKernel')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classbitpit_1_1PatchKernel.xhtml">bitpit::PatchKernel</a></td></tr>
<tr class="memitem:abe04a664c0338472ed6bc58b08766162 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#abe04a664c0338472ed6bc58b08766162">PatchKernel</a> (const int &amp;id, const int &amp;dimension, bool epxert)</td></tr>
<tr class="separator:abe04a664c0338472ed6bc58b08766162 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0fda03aae770bcc500dcc219ad46c34 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ab0fda03aae770bcc500dcc219ad46c34">~PatchKernel</a> ()</td></tr>
<tr class="separator:ab0fda03aae770bcc500dcc219ad46c34 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a2dc6ca101a1ca5a1cfe8c37bb2a8e9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9a2dc6ca101a1ca5a1cfe8c37bb2a8e9">reset</a> ()</td></tr>
<tr class="separator:a9a2dc6ca101a1ca5a1cfe8c37bb2a8e9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9598f5c2bbc862b32b1e0a281ab8340c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9598f5c2bbc862b32b1e0a281ab8340c">resetVertices</a> ()</td></tr>
<tr class="separator:a9598f5c2bbc862b32b1e0a281ab8340c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af94247665b7beb507a303148a514ed0b inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#af94247665b7beb507a303148a514ed0b">resetCells</a> ()</td></tr>
<tr class="separator:af94247665b7beb507a303148a514ed0b inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a972860080c1efbb92466f50580782b17 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a972860080c1efbb92466f50580782b17">resetInterfaces</a> ()</td></tr>
<tr class="separator:a972860080c1efbb92466f50580782b17 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4ee7e8fca84bace7171038c37e8194e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#af4ee7e8fca84bace7171038c37e8194e">reserveVertices</a> (size_t nVertices)</td></tr>
<tr class="separator:af4ee7e8fca84bace7171038c37e8194e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed8ade7111098a500e101d82337541b6 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aed8ade7111098a500e101d82337541b6">reserveCells</a> (size_t nCells)</td></tr>
<tr class="separator:aed8ade7111098a500e101d82337541b6 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a812c95760d351bda0045daa63955c002 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a812c95760d351bda0045daa63955c002">reserveInterfaces</a> (size_t nInterfaces)</td></tr>
<tr class="separator:a812c95760d351bda0045daa63955c002 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73ed4cfe15a0fdfb4328e0c646776de2 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a73ed4cfe15a0fdfb4328e0c646776de2">update</a> (bool trackAdaption=true)</td></tr>
<tr class="separator:a73ed4cfe15a0fdfb4328e0c646776de2 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac305e1c89cc6ac669a2b6481098af77d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ac305e1c89cc6ac669a2b6481098af77d">markCellForRefinement</a> (const long &amp;id)</td></tr>
<tr class="separator:ac305e1c89cc6ac669a2b6481098af77d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c116a309c0bb6738343f860e58fd38e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a4c116a309c0bb6738343f860e58fd38e">markCellForCoarsening</a> (const long &amp;id)</td></tr>
<tr class="separator:a4c116a309c0bb6738343f860e58fd38e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9465abd8e172d89c86820c9a32c5a6cf inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9465abd8e172d89c86820c9a32c5a6cf">enableCellBalancing</a> (const long &amp;id, bool enabled)</td></tr>
<tr class="separator:a9465abd8e172d89c86820c9a32c5a6cf inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaba31e4089958c458632ab75b912e9e0 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aaba31e4089958c458632ab75b912e9e0">isDirty</a> (bool global=false) const </td></tr>
<tr class="separator:aaba31e4089958c458632ab75b912e9e0 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9362ede30b4a8fcfe1f1996df44e2cd2 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9362ede30b4a8fcfe1f1996df44e2cd2">isExpert</a> () const </td></tr>
<tr class="separator:a9362ede30b4a8fcfe1f1996df44e2cd2 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e2f16d4863f9ca097ce5274e4257874 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a5e2f16d4863f9ca097ce5274e4257874">getId</a> () const </td></tr>
<tr class="separator:a5e2f16d4863f9ca097ce5274e4257874 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae28ec9687875e8032b8f2696fd6b8bf9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ae28ec9687875e8032b8f2696fd6b8bf9">getDimension</a> () const </td></tr>
<tr class="separator:ae28ec9687875e8032b8f2696fd6b8bf9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b4356bb02c54e12da168e7fa534be8f inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a8b4356bb02c54e12da168e7fa534be8f">isThreeDimensional</a> () const </td></tr>
<tr class="separator:a8b4356bb02c54e12da168e7fa534be8f inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f4e72f1fafb0743c9b17ce1b4cb558d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9f4e72f1fafb0743c9b17ce1b4cb558d">getVertexCount</a> () const </td></tr>
<tr class="separator:a9f4e72f1fafb0743c9b17ce1b4cb558d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a582cb4dd83458721c323aa0518157400 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedVector.xhtml">PiercedVector</a>&lt; <a class="el" href="classbitpit_1_1Vertex.xhtml">Vertex</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a582cb4dd83458721c323aa0518157400">getVertices</a> ()</td></tr>
<tr class="separator:a582cb4dd83458721c323aa0518157400 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a358ca8ea11e2b2b99844a589a1bb395c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1Vertex.xhtml">Vertex</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a358ca8ea11e2b2b99844a589a1bb395c">getVertex</a> (const long &amp;id)</td></tr>
<tr class="separator:a358ca8ea11e2b2b99844a589a1bb395c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaed245d0e5d4bd899d7d86c84723e405 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classbitpit_1_1Vertex.xhtml">Vertex</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aaed245d0e5d4bd899d7d86c84723e405">getVertex</a> (const long &amp;id) const </td></tr>
<tr class="separator:aaed245d0e5d4bd899d7d86c84723e405 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac588184ef6e5d280a963a0fde8dcbdd3 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::array&lt; double, 3 &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ac588184ef6e5d280a963a0fde8dcbdd3">getVertexCoords</a> (const long &amp;id) const </td></tr>
<tr class="separator:ac588184ef6e5d280a963a0fde8dcbdd3 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cd3eeb6d54f3a29dbc21eb92ded8dc6 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9cd3eeb6d54f3a29dbc21eb92ded8dc6">generateVertexId</a> ()</td></tr>
<tr class="separator:a9cd3eeb6d54f3a29dbc21eb92ded8dc6 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a3a1edd7b839b26f6be70985d9f0931 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">VertexIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9a3a1edd7b839b26f6be70985d9f0931">addVertex</a> (const std::array&lt; double, 3 &gt; &amp;coords, const long &amp;id=Vertex::NULL_ID)</td></tr>
<tr class="separator:a9a3a1edd7b839b26f6be70985d9f0931 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40c7ed94a8d6b764273dbcbf1a4ff97e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">VertexIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a40c7ed94a8d6b764273dbcbf1a4ff97e">addVertex</a> (const <a class="el" href="classbitpit_1_1Vertex.xhtml">Vertex</a> &amp;source, long id=Vertex::NULL_ID)</td></tr>
<tr class="separator:a40c7ed94a8d6b764273dbcbf1a4ff97e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af563b352c4e3a8d71d16724d570e061f inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">VertexIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#af563b352c4e3a8d71d16724d570e061f">addVertex</a> (<a class="el" href="classbitpit_1_1Vertex.xhtml">Vertex</a> &amp;&amp;source, long id=Vertex::NULL_ID)</td></tr>
<tr class="separator:af563b352c4e3a8d71d16724d570e061f inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f95d54d53b7566455fe364e39fe73df inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a5f95d54d53b7566455fe364e39fe73df">countFreeVertices</a> () const </td></tr>
<tr class="separator:a5f95d54d53b7566455fe364e39fe73df inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2468e31c9c405646bfe87349777c5319 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a2468e31c9c405646bfe87349777c5319">countOrphanVertices</a> () const </td></tr>
<tr class="separator:a2468e31c9c405646bfe87349777c5319 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecee21b4934e8a0d98a60c8cc1768240 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aecee21b4934e8a0d98a60c8cc1768240">findOrphanVertices</a> ()</td></tr>
<tr class="separator:aecee21b4934e8a0d98a60c8cc1768240 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abec9536084e41fefd7ff72e28981bb9c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#abec9536084e41fefd7ff72e28981bb9c">deleteOrphanVertices</a> ()</td></tr>
<tr class="separator:abec9536084e41fefd7ff72e28981bb9c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af34ade24608c03659f8abc18de88a099 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#af34ade24608c03659f8abc18de88a099">collapseCoincidentVertices</a> (int nBins=128)</td></tr>
<tr class="separator:af34ade24608c03659f8abc18de88a099 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd9a5dd5da94a8357691f6aaacc9b812 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#afd9a5dd5da94a8357691f6aaacc9b812">deleteCoincidentVertices</a> (int nBins=128)</td></tr>
<tr class="separator:afd9a5dd5da94a8357691f6aaacc9b812 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dd10739cfaa2b6b74b330a3c743a45e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">VertexIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a0dd10739cfaa2b6b74b330a3c743a45e">getVertexIterator</a> (const long &amp;id)</td></tr>
<tr class="separator:a0dd10739cfaa2b6b74b330a3c743a45e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28d3bc5f4e3995d05c219eb1b15f9915 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">VertexIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a28d3bc5f4e3995d05c219eb1b15f9915">vertexBegin</a> ()</td></tr>
<tr class="separator:a28d3bc5f4e3995d05c219eb1b15f9915 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a017835739bf197e3a61988acf0d348cc inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">VertexIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a017835739bf197e3a61988acf0d348cc">vertexEnd</a> ()</td></tr>
<tr class="separator:a017835739bf197e3a61988acf0d348cc inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f366837c2cc93ec757c533813b1ebea inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a3f366837c2cc93ec757c533813b1ebea">getCellCount</a> () const </td></tr>
<tr class="separator:a3f366837c2cc93ec757c533813b1ebea inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af50016bc86a8f5a82a656adabc2a6173 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#af50016bc86a8f5a82a656adabc2a6173">getInternalCount</a> () const </td></tr>
<tr class="separator:af50016bc86a8f5a82a656adabc2a6173 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a451518a613e97edfed788b4a35fb22 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a2a451518a613e97edfed788b4a35fb22">getGhostCount</a> () const </td></tr>
<tr class="separator:a2a451518a613e97edfed788b4a35fb22 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1799d61f7a4ea2c0f043ee860de457fe inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedVector.xhtml">PiercedVector</a>&lt; <a class="el" href="classbitpit_1_1Cell.xhtml">Cell</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a1799d61f7a4ea2c0f043ee860de457fe">getCells</a> ()</td></tr>
<tr class="separator:a1799d61f7a4ea2c0f043ee860de457fe inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3de4e780714af6d900307638b37e6f3d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1Cell.xhtml">Cell</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a3de4e780714af6d900307638b37e6f3d">getCell</a> (const long &amp;id)</td></tr>
<tr class="separator:a3de4e780714af6d900307638b37e6f3d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24c000afe3d4216f028ce82fe68010a9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classbitpit_1_1Cell.xhtml">Cell</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a24c000afe3d4216f028ce82fe68010a9">getCell</a> (const long &amp;id) const </td></tr>
<tr class="separator:a24c000afe3d4216f028ce82fe68010a9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57c9e86bcf9367baafdbd5b4e425e675 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a57c9e86bcf9367baafdbd5b4e425e675">getCellType</a> (const long &amp;id) const </td></tr>
<tr class="separator:a57c9e86bcf9367baafdbd5b4e425e675 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8af0f162377b3f7fdc6cddaf384a9295 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1Cell.xhtml">Cell</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a8af0f162377b3f7fdc6cddaf384a9295">getLastInternal</a> ()</td></tr>
<tr class="separator:a8af0f162377b3f7fdc6cddaf384a9295 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9e312fa7c7a6d3d58771b7f87da2df9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classbitpit_1_1Cell.xhtml">Cell</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aa9e312fa7c7a6d3d58771b7f87da2df9">getLastInternal</a> () const </td></tr>
<tr class="separator:aa9e312fa7c7a6d3d58771b7f87da2df9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72ac836a1918b575d55f79c5c25f507e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1Cell.xhtml">Cell</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a72ac836a1918b575d55f79c5c25f507e">getFirstGhost</a> ()</td></tr>
<tr class="separator:a72ac836a1918b575d55f79c5c25f507e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6cc444d60d56638c09a2fce33414513 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classbitpit_1_1Cell.xhtml">Cell</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ae6cc444d60d56638c09a2fce33414513">getFirstGhost</a> () const </td></tr>
<tr class="separator:ae6cc444d60d56638c09a2fce33414513 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea97ac3fbd77f09ae7ce903a630d19e7 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aea97ac3fbd77f09ae7ce903a630d19e7">generateCellId</a> ()</td></tr>
<tr class="separator:aea97ac3fbd77f09ae7ce903a630d19e7 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a618377c0340d7e68a0ab2572275a5242 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a618377c0340d7e68a0ab2572275a5242">addCell</a> (<a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type, const long &amp;id=Element::NULL_ID)</td></tr>
<tr class="separator:a618377c0340d7e68a0ab2572275a5242 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a378f23b7445c76a866c346db200f2e1a inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a378f23b7445c76a866c346db200f2e1a">addCell</a> (<a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type, bool interior, const long &amp;id=Element::NULL_ID)</td></tr>
<tr class="separator:a378f23b7445c76a866c346db200f2e1a inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29d3ac7c010d635da7702b07cf948a74 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a29d3ac7c010d635da7702b07cf948a74">addCell</a> (<a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type, bool interior, std::unique_ptr&lt; long[]&gt; &amp;&amp;connect, const long &amp;id=Element::NULL_ID)</td></tr>
<tr class="separator:a29d3ac7c010d635da7702b07cf948a74 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4cc0ce0fd8c89fdee5d68d642783d66 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ad4cc0ce0fd8c89fdee5d68d642783d66">addCell</a> (<a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type, bool interior, const std::vector&lt; long &gt; &amp;connect, const long &amp;id=Element::NULL_ID)</td></tr>
<tr class="separator:ad4cc0ce0fd8c89fdee5d68d642783d66 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a621d4750d78d97fb104d69a3e51ec987 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a621d4750d78d97fb104d69a3e51ec987">addCell</a> (const <a class="el" href="classbitpit_1_1Cell.xhtml">Cell</a> &amp;source, long id=Element::NULL_ID)</td></tr>
<tr class="separator:a621d4750d78d97fb104d69a3e51ec987 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a825d1c1cf6a679a36c317e131e53fe9c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a825d1c1cf6a679a36c317e131e53fe9c">addCell</a> (<a class="el" href="classbitpit_1_1Cell.xhtml">Cell</a> &amp;&amp;source, long id=Element::NULL_ID)</td></tr>
<tr class="separator:a825d1c1cf6a679a36c317e131e53fe9c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67d8ab97043866d9acf98923a9aebe15 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a67d8ab97043866d9acf98923a9aebe15">deleteCell</a> (const long &amp;id, bool updateNeighs=true, bool delayed=false)</td></tr>
<tr class="separator:a67d8ab97043866d9acf98923a9aebe15 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fb2344cb9c6a51a36605f067652c620 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a2fb2344cb9c6a51a36605f067652c620">deleteCells</a> (const std::vector&lt; long &gt; &amp;ids, bool updateNeighs=true, bool delayed=false)</td></tr>
<tr class="separator:a2fb2344cb9c6a51a36605f067652c620 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadb08afb43e5e05056985084551f8f61 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aadb08afb43e5e05056985084551f8f61">setCellInternal</a> (const long &amp;id, bool isInternal)</td></tr>
<tr class="separator:aadb08afb43e5e05056985084551f8f61 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ff6ae6c0524e095368df721b89fcca0 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a6ff6ae6c0524e095368df721b89fcca0">moveGhost2Internal</a> (const long &amp;id)</td></tr>
<tr class="separator:a6ff6ae6c0524e095368df721b89fcca0 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09f05bd39b2c35bb1afc2f193719144c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a09f05bd39b2c35bb1afc2f193719144c">moveInternal2Ghost</a> (const long &amp;id)</td></tr>
<tr class="separator:a09f05bd39b2c35bb1afc2f193719144c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b64649db5ab7ff05006db39933358e7 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a3b64649db5ab7ff05006db39933358e7">countFreeCells</a> () const </td></tr>
<tr class="separator:a3b64649db5ab7ff05006db39933358e7 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15fb6ad8bef51c0e50feb13bc34f9c3c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a15fb6ad8bef51c0e50feb13bc34f9c3c">countOrphanCells</a> () const </td></tr>
<tr class="separator:a15fb6ad8bef51c0e50feb13bc34f9c3c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79a3d99a413dfca13d331ea30375d9cb inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual std::array&lt; double, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a79a3d99a413dfca13d331ea30375d9cb">evalCellCentroid</a> (const long &amp;id)</td></tr>
<tr class="separator:a79a3d99a413dfca13d331ea30375d9cb inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af283d082cfa2a50064ccd44493539403 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#af283d082cfa2a50064ccd44493539403">findCellNeighs</a> (const long &amp;id) const </td></tr>
<tr class="separator:af283d082cfa2a50064ccd44493539403 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e5ba285ee3fa831da4109f5744269f7 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a3e5ba285ee3fa831da4109f5744269f7">findCellNeighs</a> (const long &amp;id, int codimension, bool complete=true) const </td></tr>
<tr class="separator:a3e5ba285ee3fa831da4109f5744269f7 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0ef8fd5ab115344cb859f66349a5e6f inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ab0ef8fd5ab115344cb859f66349a5e6f">findCellFaceNeighs</a> (const long &amp;id) const </td></tr>
<tr class="separator:ab0ef8fd5ab115344cb859f66349a5e6f inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1edafd637d2693b4d26f9497e63f78e3 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a1edafd637d2693b4d26f9497e63f78e3">findCellFaceNeighs</a> (const long &amp;id, const int &amp;face) const </td></tr>
<tr class="separator:a1edafd637d2693b4d26f9497e63f78e3 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90dea5713f8fb884c0d08c78300818c4 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a90dea5713f8fb884c0d08c78300818c4">findCellEdgeNeighs</a> (const long &amp;id, bool complete=true) const </td></tr>
<tr class="separator:a90dea5713f8fb884c0d08c78300818c4 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f9f413c00492ae4b74a758f22104e25 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a1f9f413c00492ae4b74a758f22104e25">findCellEdgeNeighs</a> (const long &amp;id, const int &amp;edge) const </td></tr>
<tr class="separator:a1f9f413c00492ae4b74a758f22104e25 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66845d3df1aa4dd928c9eee2aabc412f inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a66845d3df1aa4dd928c9eee2aabc412f">findCellVertexNeighs</a> (const long &amp;id, bool complete=true) const </td></tr>
<tr class="separator:a66845d3df1aa4dd928c9eee2aabc412f inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1592792c20f2cf7780da6a148f8bca00 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a1592792c20f2cf7780da6a148f8bca00">findCellVertexNeighs</a> (const long &amp;id, const int &amp;vertex) const </td></tr>
<tr class="separator:a1592792c20f2cf7780da6a148f8bca00 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a237a1ebd36c7c5f92b88498e4b96aa2a inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a237a1ebd36c7c5f92b88498e4b96aa2a">findCellVertexOneRing</a> (const long &amp;id, const int &amp;vertex) const </td></tr>
<tr class="separator:a237a1ebd36c7c5f92b88498e4b96aa2a inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56a95140e35ba70293d910837e63849d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a56a95140e35ba70293d910837e63849d">findFaceNeighCell</a> (const long &amp;cell_idx, const long &amp;neigh_idx, int &amp;face_loc_idx, int &amp;intf_loc_idx)</td></tr>
<tr class="separator:a56a95140e35ba70293d910837e63849d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad83a08e659d130288b1b4a94b52dfce9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ad83a08e659d130288b1b4a94b52dfce9">getCellIterator</a> (const long &amp;id)</td></tr>
<tr class="separator:ad83a08e659d130288b1b4a94b52dfce9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01c96657baf31230e0820f780c257c5c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a01c96657baf31230e0820f780c257c5c">cellBegin</a> ()</td></tr>
<tr class="separator:a01c96657baf31230e0820f780c257c5c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6eed7fad2562a3087e34b66152981dd4 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a6eed7fad2562a3087e34b66152981dd4">cellEnd</a> ()</td></tr>
<tr class="separator:a6eed7fad2562a3087e34b66152981dd4 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b4f43e8c99cbb30c128e4b1392a77c2 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a0b4f43e8c99cbb30c128e4b1392a77c2">internalBegin</a> ()</td></tr>
<tr class="separator:a0b4f43e8c99cbb30c128e4b1392a77c2 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1070753551cb033cdc13d1e727bb6da inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aa1070753551cb033cdc13d1e727bb6da">internalEnd</a> ()</td></tr>
<tr class="separator:aa1070753551cb033cdc13d1e727bb6da inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fa140da5f45334d6d61ddf6bd3179de inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a5fa140da5f45334d6d61ddf6bd3179de">ghostBegin</a> ()</td></tr>
<tr class="separator:a5fa140da5f45334d6d61ddf6bd3179de inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35a212d743e782d66e9f6372b96869f3 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">CellIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a35a212d743e782d66e9f6372b96869f3">ghostEnd</a> ()</td></tr>
<tr class="separator:a35a212d743e782d66e9f6372b96869f3 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab11021d0a2272ebc31a78484dbe97762 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ab11021d0a2272ebc31a78484dbe97762">getInterfaceCount</a> () const </td></tr>
<tr class="separator:ab11021d0a2272ebc31a78484dbe97762 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf4d225aea41f83c02f6a5860c2c48a9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedVector.xhtml">PiercedVector</a>&lt; <a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#adf4d225aea41f83c02f6a5860c2c48a9">getInterfaces</a> ()</td></tr>
<tr class="separator:adf4d225aea41f83c02f6a5860c2c48a9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac52e8a82183a83aaff80e06a636d4e43 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ac52e8a82183a83aaff80e06a636d4e43">getInterface</a> (const long &amp;id)</td></tr>
<tr class="separator:ac52e8a82183a83aaff80e06a636d4e43 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83e6d954052738fd2e4cdb27480cf280 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a83e6d954052738fd2e4cdb27480cf280">getInterface</a> (const long &amp;id) const </td></tr>
<tr class="separator:a83e6d954052738fd2e4cdb27480cf280 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f0cfabaa79f3af75b85eeba1bb4cffd inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9f0cfabaa79f3af75b85eeba1bb4cffd">getInterfaceType</a> (const long &amp;id) const </td></tr>
<tr class="separator:a9f0cfabaa79f3af75b85eeba1bb4cffd inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a8cc445dcef8ca7c9993fd16b7c703a inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9a8cc445dcef8ca7c9993fd16b7c703a">generateInterfaceId</a> ()</td></tr>
<tr class="separator:a9a8cc445dcef8ca7c9993fd16b7c703a inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d6bb9aad26b0683e7f9c811700281c0 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">InterfaceIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a5d6bb9aad26b0683e7f9c811700281c0">addInterface</a> (<a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type, const long &amp;id=Element::NULL_ID)</td></tr>
<tr class="separator:a5d6bb9aad26b0683e7f9c811700281c0 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23ec5604cd3fdd0eaa8a65c6628e01b8 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">InterfaceIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a23ec5604cd3fdd0eaa8a65c6628e01b8">addInterface</a> (const <a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;source, long id=Element::NULL_ID)</td></tr>
<tr class="separator:a23ec5604cd3fdd0eaa8a65c6628e01b8 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0cd57ef77f12e2fea8f284b8219f643 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">InterfaceIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ad0cd57ef77f12e2fea8f284b8219f643">addInterface</a> (<a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &amp;&amp;source, long id=Element::NULL_ID)</td></tr>
<tr class="separator:ad0cd57ef77f12e2fea8f284b8219f643 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d2ddea450eb53fb4c1d19695836f1f8 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a8d2ddea450eb53fb4c1d19695836f1f8">deleteInterface</a> (const long &amp;id, bool updateNeighs=true, bool delayed=false)</td></tr>
<tr class="separator:a8d2ddea450eb53fb4c1d19695836f1f8 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcc1b2472ed8b5dcfb631475b091c07e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#afcc1b2472ed8b5dcfb631475b091c07e">deleteInterfaces</a> (const std::vector&lt; long &gt; &amp;ids, bool updateNeighs=true, bool delayed=false)</td></tr>
<tr class="separator:afcc1b2472ed8b5dcfb631475b091c07e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae25823f089b13969c12bc13632e740b5 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ae25823f089b13969c12bc13632e740b5">countFreeInterfaces</a> () const </td></tr>
<tr class="separator:ae25823f089b13969c12bc13632e740b5 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a899db6a2ab62fc2102386bb52b0dc49d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a899db6a2ab62fc2102386bb52b0dc49d">countOrphanInterfaces</a> () const </td></tr>
<tr class="separator:a899db6a2ab62fc2102386bb52b0dc49d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada7af97e14dd51fdc6c71a9c6deb3b3d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual std::array&lt; double, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ada7af97e14dd51fdc6c71a9c6deb3b3d">evalInterfaceCentroid</a> (const long &amp;id)</td></tr>
<tr class="separator:ada7af97e14dd51fdc6c71a9c6deb3b3d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71be4c5d6d1ce3a44f261c8211372b0d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">InterfaceIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a71be4c5d6d1ce3a44f261c8211372b0d">getInterfaceIterator</a> (const long &amp;id)</td></tr>
<tr class="separator:a71be4c5d6d1ce3a44f261c8211372b0d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16663957ccb84a697cfee3d6c6dba132 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">InterfaceIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a16663957ccb84a697cfee3d6c6dba132">interfaceBegin</a> ()</td></tr>
<tr class="separator:a16663957ccb84a697cfee3d6c6dba132 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1af71cc964997c7523a9230072d81ad0 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1PiercedIterator.xhtml">InterfaceIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a1af71cc964997c7523a9230072d81ad0">interfaceEnd</a> ()</td></tr>
<tr class="separator:a1af71cc964997c7523a9230072d81ad0 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a727482a16bcd0a45800bc96f02be25 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a4a727482a16bcd0a45800bc96f02be25">countFaces</a> () const </td></tr>
<tr class="separator:a4a727482a16bcd0a45800bc96f02be25 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73f20bde12f1178ae67ba0b73e055583 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a73f20bde12f1178ae67ba0b73e055583">countFreeFaces</a> () const </td></tr>
<tr class="separator:a73f20bde12f1178ae67ba0b73e055583 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7c24df4698b377686cefc6b82be72e7 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#af7c24df4698b377686cefc6b82be72e7">sort</a> ()</td></tr>
<tr class="separator:af7c24df4698b377686cefc6b82be72e7 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad50f29b65ceaca72615cc41864ee9d43 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ad50f29b65ceaca72615cc41864ee9d43">sortVertices</a> ()</td></tr>
<tr class="separator:ad50f29b65ceaca72615cc41864ee9d43 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee1708585bb5ba3bb51cd9603a6d4792 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aee1708585bb5ba3bb51cd9603a6d4792">sortCells</a> ()</td></tr>
<tr class="separator:aee1708585bb5ba3bb51cd9603a6d4792 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a720b7a1720f7e8fa1b95d04b4bc9c9d9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a720b7a1720f7e8fa1b95d04b4bc9c9d9">sortInterfaces</a> ()</td></tr>
<tr class="separator:a720b7a1720f7e8fa1b95d04b4bc9c9d9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac4de5dd0284696d6d11e91a7aa02d97 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aac4de5dd0284696d6d11e91a7aa02d97">squeeze</a> ()</td></tr>
<tr class="separator:aac4de5dd0284696d6d11e91a7aa02d97 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4149b21cfa6ffac893a648202e574e9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ab4149b21cfa6ffac893a648202e574e9">squeezeVertices</a> ()</td></tr>
<tr class="separator:ab4149b21cfa6ffac893a648202e574e9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a436decff7071770170b5fd73be2608f0 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a436decff7071770170b5fd73be2608f0">squeezeCells</a> ()</td></tr>
<tr class="separator:a436decff7071770170b5fd73be2608f0 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2e364db3ad530203cf8fa322fb2c768 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ac2e364db3ad530203cf8fa322fb2c768">squeezeInterfaces</a> ()</td></tr>
<tr class="separator:ac2e364db3ad530203cf8fa322fb2c768 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af101fc33cf0e24716e772f885e98adbf inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#af101fc33cf0e24716e772f885e98adbf">locatePoint</a> (const double &amp;x, const double &amp;y, const double &amp;z)</td></tr>
<tr class="separator:af101fc33cf0e24716e772f885e98adbf inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb9bab18d7c154892b8b0c145e6b96eb inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#abb9bab18d7c154892b8b0c145e6b96eb">isSameFace</a> (const long &amp;, const int &amp;, const long &amp;, const int &amp;)</td></tr>
<tr class="separator:abb9bab18d7c154892b8b0c145e6b96eb inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0732408c076655779356e283b1913a47 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a0732408c076655779356e283b1913a47">buildAdjacencies</a> (bool resetAdjacencies=true)</td></tr>
<tr class="separator:a0732408c076655779356e283b1913a47 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1faa2bb8bf968d425d3cd30260b4d66 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ab1faa2bb8bf968d425d3cd30260b4d66">updateAdjacencies</a> (const std::vector&lt; long &gt; &amp;cellIds, bool resetAdjacencies=true)</td></tr>
<tr class="separator:ab1faa2bb8bf968d425d3cd30260b4d66 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0773bd212cf300bf82d2f666508b927 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ae0773bd212cf300bf82d2f666508b927">buildInterfaces</a> (bool <a class="el" href="classbitpit_1_1PatchKernel.xhtml#a972860080c1efbb92466f50580782b17">resetInterfaces</a>=true)</td></tr>
<tr class="separator:ae0773bd212cf300bf82d2f666508b927 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a23374e8cac5ebfe46acf6e6b3400e8 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a5a23374e8cac5ebfe46acf6e6b3400e8">updateInterfaces</a> (const std::vector&lt; long &gt; &amp;cellIds, bool <a class="el" href="classbitpit_1_1PatchKernel.xhtml#a972860080c1efbb92466f50580782b17">resetInterfaces</a>=true)</td></tr>
<tr class="separator:a5a23374e8cac5ebfe46acf6e6b3400e8 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a321157907261f65f58cc50febcf2ab9d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a321157907261f65f58cc50febcf2ab9d">getBoundingBox</a> (std::array&lt; double, 3 &gt; &amp;minPoint, std::array&lt; double, 3 &gt; &amp;maxPoint)</td></tr>
<tr class="separator:a321157907261f65f58cc50febcf2ab9d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62e9799bcf7e9d62a9a13ceebe0700b5 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a62e9799bcf7e9d62a9a13ceebe0700b5">isBoundingBoxDirty</a> (bool global=false) const </td></tr>
<tr class="separator:a62e9799bcf7e9d62a9a13ceebe0700b5 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e4424bed56b4a7483dc6a5a553c9b3a inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a8e4424bed56b4a7483dc6a5a553c9b3a">updateBoundingBox</a> (bool forcedUpdated=false)</td></tr>
<tr class="separator:a8e4424bed56b4a7483dc6a5a553c9b3a inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363f9828e1cebc66f9da634640f3d92c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a363f9828e1cebc66f9da634640f3d92c">addPointToBoundingBox</a> (const std::array&lt; double, 3 &gt; &amp;point)</td></tr>
<tr class="separator:a363f9828e1cebc66f9da634640f3d92c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae537aa5bafa444ca55d0a1ab0f446b59 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ae537aa5bafa444ca55d0a1ab0f446b59">removePointFromBoundingBox</a> (const std::array&lt; double, 3 &gt; &amp;point, bool delayedBoxUpdate=false)</td></tr>
<tr class="separator:ae537aa5bafa444ca55d0a1ab0f446b59 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a795e15153ffc0b6cbb6f837842750a18 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; long, long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a795e15153ffc0b6cbb6f837842750a18">binSortVertex</a> (<a class="el" href="classbitpit_1_1PiercedVector.xhtml">PiercedVector</a>&lt; <a class="el" href="classbitpit_1_1Vertex.xhtml">Vertex</a> &gt; vertices, int nBins=128)</td></tr>
<tr class="separator:a795e15153ffc0b6cbb6f837842750a18 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16a6cb6811671aa1af3b843e31684f62 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; long, long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a16a6cb6811671aa1af3b843e31684f62">binSortVertex</a> (int nBins=128)</td></tr>
<tr class="separator:a16a6cb6811671aa1af3b843e31684f62 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd98477469c550cfb7bb440ca3f3f8d7 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#abd98477469c550cfb7bb440ca3f3f8d7">isAdaptionDirty</a> (bool global=false) const </td></tr>
<tr class="separator:abd98477469c550cfb7bb440ca3f3f8d7 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7320e75f9351b430bee6ee6f5b91553 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#af7320e75f9351b430bee6ee6f5b91553">updateAdaption</a> (bool trackAdaption=true)</td></tr>
<tr class="separator:af7320e75f9351b430bee6ee6f5b91553 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a778768bc1cea5e66f99b9bd8414f8583 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a778768bc1cea5e66f99b9bd8414f8583">translate</a> (std::array&lt; double, 3 &gt; translation)</td></tr>
<tr class="separator:a778768bc1cea5e66f99b9bd8414f8583 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade4be962dcde5afef2fdf6c8836a02a6 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ade4be962dcde5afef2fdf6c8836a02a6">translate</a> (double sx, double sy, double sz)</td></tr>
<tr class="separator:ade4be962dcde5afef2fdf6c8836a02a6 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a140b6502bf890c117227aaab9a444804 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a140b6502bf890c117227aaab9a444804">scale</a> (std::array&lt; double, 3 &gt; scaling)</td></tr>
<tr class="separator:a140b6502bf890c117227aaab9a444804 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a972e1d64c3c06696477bb2d1d8f0ae6a inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a972e1d64c3c06696477bb2d1d8f0ae6a">scale</a> (double scaling)</td></tr>
<tr class="separator:a972e1d64c3c06696477bb2d1d8f0ae6a inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7cf5450652e29540641d59216de262d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ab7cf5450652e29540641d59216de262d">scale</a> (double sx, double sy, double sz)</td></tr>
<tr class="separator:ab7cf5450652e29540641d59216de262d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74e36ccf62ed8806d0d94d453402f593 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a74e36ccf62ed8806d0d94d453402f593">setTol</a> (double tolerance)</td></tr>
<tr class="separator:a74e36ccf62ed8806d0d94d453402f593 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1e63f17f26ffb931517a252a23047a1 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ad1e63f17f26ffb931517a252a23047a1">getTol</a> () const </td></tr>
<tr class="separator:ad1e63f17f26ffb931517a252a23047a1 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bbac26fd3071ef417afdd4998a95f59 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a1bbac26fd3071ef417afdd4998a95f59">resetTol</a> ()</td></tr>
<tr class="separator:a1bbac26fd3071ef417afdd4998a95f59 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebc446887158556566ded86f91d440a2 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aebc446887158556566ded86f91d440a2">isTolCustomized</a> () const </td></tr>
<tr class="separator:aebc446887158556566ded86f91d440a2 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3129889fa87122716437af6de7f6f2d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aa3129889fa87122716437af6de7f6f2d">extractEnvelope</a> (<a class="el" href="classbitpit_1_1PatchKernel.xhtml">PatchKernel</a> &amp;envelope) const </td></tr>
<tr class="separator:aa3129889fa87122716437af6de7f6f2d inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ca829ceca02a4615db90d8e28071695 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9ca829ceca02a4615db90d8e28071695">displayTopologyStats</a> (std::ostream &amp;out, unsigned int padding=0) const </td></tr>
<tr class="separator:a9ca829ceca02a4615db90d8e28071695 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f0731fe8d88d9ea1cbf7208c5f2a30e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a4f0731fe8d88d9ea1cbf7208c5f2a30e">displayVertices</a> (std::ostream &amp;out, unsigned int padding=0) const </td></tr>
<tr class="separator:a4f0731fe8d88d9ea1cbf7208c5f2a30e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a698827321f531730c1e6a3ce636ecc00 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a698827321f531730c1e6a3ce636ecc00">displayCells</a> (std::ostream &amp;out, unsigned int padding=0) const </td></tr>
<tr class="separator:a698827321f531730c1e6a3ce636ecc00 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6aa1d90b7c1d48092721e8cebe987638 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a6aa1d90b7c1d48092721e8cebe987638">displayInterfaces</a> (std::ostream &amp;out, unsigned int padding=0) const </td></tr>
<tr class="separator:a6aa1d90b7c1d48092721e8cebe987638 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b311f735eded357bfe2758cf9cbb88c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1VTKUnstructuredGrid.xhtml">VTKUnstructuredGrid</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a4b311f735eded357bfe2758cf9cbb88c">getVTK</a> ()</td></tr>
<tr class="separator:a4b311f735eded357bfe2758cf9cbb88c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f95af18c9325379489d6f5805dc1ef5 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a2f95af18c9325379489d6f5805dc1ef5">write</a> ()</td></tr>
<tr class="separator:a2f95af18c9325379489d6f5805dc1ef5 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0b53c58cf2cf70e38904fce3a6caac1 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ab0b53c58cf2cf70e38904fce3a6caac1">write</a> (std::string name)</td></tr>
<tr class="separator:ab0b53c58cf2cf70e38904fce3a6caac1 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4829d8691cf6a9ffdbb65f85d24d1dbc inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a4829d8691cf6a9ffdbb65f85d24d1dbc">flushData</a> (std::fstream &amp;stream, std::string name, <a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a> format)</td></tr>
<tr class="separator:a4829d8691cf6a9ffdbb65f85d24d1dbc inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afac66d9b34b3b2d4097d245aa6c06514 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#afac66d9b34b3b2d4097d245aa6c06514">setCommunicator</a> (MPI_Comm communicator)</td></tr>
<tr class="separator:afac66d9b34b3b2d4097d245aa6c06514 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a815b41b014cbdcbb235ad243a434826f inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a815b41b014cbdcbb235ad243a434826f">freeCommunicator</a> ()</td></tr>
<tr class="separator:a815b41b014cbdcbb235ad243a434826f inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c1b9c557d6e2c90eb5fb0ef6aa14dbe inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9c1b9c557d6e2c90eb5fb0ef6aa14dbe">isCommunicatorSet</a> () const </td></tr>
<tr class="separator:a9c1b9c557d6e2c90eb5fb0ef6aa14dbe inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a801bc85779cba6906e87a5a3191b5263 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const MPI_Comm &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a801bc85779cba6906e87a5a3191b5263">getCommunicator</a> () const </td></tr>
<tr class="separator:a801bc85779cba6906e87a5a3191b5263 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa83578acd9b5aada55a02fa2caf7238b inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aa83578acd9b5aada55a02fa2caf7238b">getRank</a> () const </td></tr>
<tr class="separator:aa83578acd9b5aada55a02fa2caf7238b inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5950f254a02c38c75a76581d24080a15 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a5950f254a02c38c75a76581d24080a15">getProcessorCount</a> () const </td></tr>
<tr class="separator:a5950f254a02c38c75a76581d24080a15 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3426c9d87c00b29499a0563020526be6 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a3426c9d87c00b29499a0563020526be6">isRankNeighbour</a> (int rank)</td></tr>
<tr class="separator:a3426c9d87c00b29499a0563020526be6 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af129dde7248e8dd20edc29b313c34bcd inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#af129dde7248e8dd20edc29b313c34bcd">getNeighbourRanks</a> ()</td></tr>
<tr class="separator:af129dde7248e8dd20edc29b313c34bcd inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4104c9524cbf2b7eae76855f5d445dd8 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; int, <br class="typebreak"/>
std::vector&lt; long &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a4104c9524cbf2b7eae76855f5d445dd8">getGhostExchangeTargets</a> ()</td></tr>
<tr class="separator:a4104c9524cbf2b7eae76855f5d445dd8 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68a82a805686b4c79baac0eeb555b459 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::unordered_map&lt; int, <br class="typebreak"/>
std::vector&lt; long &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a68a82a805686b4c79baac0eeb555b459">getGhostExchangeTargets</a> () const </td></tr>
<tr class="separator:a68a82a805686b4c79baac0eeb555b459 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a465017774ff6bc7629d59cf79bee7336 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a465017774ff6bc7629d59cf79bee7336">getGhostExchangeTargets</a> (int rank)</td></tr>
<tr class="separator:a465017774ff6bc7629d59cf79bee7336 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa554034be1333b9f5bf39faf93546900 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; long &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aa554034be1333b9f5bf39faf93546900">getGhostExchangeTargets</a> (int rank) const </td></tr>
<tr class="separator:aa554034be1333b9f5bf39faf93546900 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18ef58972999d5660c4dfe779853a458 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; int, <br class="typebreak"/>
std::vector&lt; long &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a18ef58972999d5660c4dfe779853a458">getGhostExchangeSources</a> ()</td></tr>
<tr class="separator:a18ef58972999d5660c4dfe779853a458 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf9fbbe2253a6bc62567e703cb6fc5b9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::unordered_map&lt; int, <br class="typebreak"/>
std::vector&lt; long &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#acf9fbbe2253a6bc62567e703cb6fc5b9">getGhostExchangeSources</a> () const </td></tr>
<tr class="separator:acf9fbbe2253a6bc62567e703cb6fc5b9 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7666e4991cf00c7e4f35585be2a41eb3 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">std::vector&lt; long &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a7666e4991cf00c7e4f35585be2a41eb3">getGhostExchangeSources</a> (int rank)</td></tr>
<tr class="separator:a7666e4991cf00c7e4f35585be2a41eb3 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac42007a4462d1f04cfec2ae3ee3b9a9e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; long &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ac42007a4462d1f04cfec2ae3ee3b9a9e">getGhostExchangeSources</a> (int rank) const </td></tr>
<tr class="separator:ac42007a4462d1f04cfec2ae3ee3b9a9e inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0db76e3cabe320e2f05ec4366660adf8 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a0db76e3cabe320e2f05ec4366660adf8">partition</a> (MPI_Comm communicator, const std::vector&lt; int &gt; &amp;cellRanks, bool trackChanges)</td></tr>
<tr class="separator:a0db76e3cabe320e2f05ec4366660adf8 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3c5928662b5d50721aae3babc54d25c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ac3c5928662b5d50721aae3babc54d25c">partition</a> (const std::vector&lt; int &gt; &amp;cellRanks, bool trackChanges)</td></tr>
<tr class="separator:ac3c5928662b5d50721aae3babc54d25c inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95d04a23efc485214c1e85fab6ab72d6 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a95d04a23efc485214c1e85fab6ab72d6">partition</a> (MPI_Comm communicator, bool trackChanges)</td></tr>
<tr class="separator:a95d04a23efc485214c1e85fab6ab72d6 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfc17dfb8e25fb1b91c018c2b97aa747 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#adfc17dfb8e25fb1b91c018c2b97aa747">partition</a> (bool trackChanges)</td></tr>
<tr class="separator:adfc17dfb8e25fb1b91c018c2b97aa747 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a207321946a876b4ae44abeb1889ddf57 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a207321946a876b4ae44abeb1889ddf57">balancePartition</a> (bool trackChanges)</td></tr>
<tr class="separator:a207321946a876b4ae44abeb1889ddf57 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6499b4ed696d8d98b3c13bca25554563 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a6499b4ed696d8d98b3c13bca25554563">sendCells</a> (const int &amp;sendRank, const int &amp;recvRank, const std::vector&lt; long &gt; &amp;cellsToSend)</td></tr>
<tr class="separator:a6499b4ed696d8d98b3c13bca25554563 inherit pub_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classbitpit_1_1VTKBaseStreamer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classbitpit_1_1VTKBaseStreamer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classbitpit_1_1VTKBaseStreamer.xhtml">bitpit::VTKBaseStreamer</a></td></tr>
<tr class="memitem:a1f6ebb94ed0ecf13bc4e0150b6626aef inherit pub_methods_classbitpit_1_1VTKBaseStreamer"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKBaseStreamer.xhtml#a1f6ebb94ed0ecf13bc4e0150b6626aef">absorbData</a> (std::fstream &amp;, std::string, <a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>, uint64_t, uint8_t)</td></tr>
<tr class="separator:a1f6ebb94ed0ecf13bc4e0150b6626aef inherit pub_methods_classbitpit_1_1VTKBaseStreamer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_classbitpit_1_1SurfaceKernel"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classbitpit_1_1SurfaceKernel')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classbitpit_1_1SurfaceKernel.xhtml">bitpit::SurfaceKernel</a></td></tr>
<tr class="memitem:a9d8ffb4e93dc8f0bcd66e6d2f6e4f930 inherit pub_static_attribs_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9d8ffb4e93dc8f0bcd66e6d2f6e4f930"></a>
static const unsigned short&#160;</td><td class="memItemRight" valign="bottom"><b>SELECT_TRIANGLE</b> = 1</td></tr>
<tr class="separator:a9d8ffb4e93dc8f0bcd66e6d2f6e4f930 inherit pub_static_attribs_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1c54ee506ca60561341341d3baa579d inherit pub_static_attribs_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa1c54ee506ca60561341341d3baa579d"></a>
static const unsigned short&#160;</td><td class="memItemRight" valign="bottom"><b>SELECT_QUAD</b> = 2</td></tr>
<tr class="separator:aa1c54ee506ca60561341341d3baa579d inherit pub_static_attribs_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04dce602c6785a499417d40562b07909 inherit pub_static_attribs_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a04dce602c6785a499417d40562b07909"></a>
static const unsigned short&#160;</td><td class="memItemRight" valign="bottom"><b>SELECT_ALL</b> = 3</td></tr>
<tr class="separator:a04dce602c6785a499417d40562b07909 inherit pub_static_attribs_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a20cd9a9b24986c136dea2937bc9c66 inherit pub_static_attribs_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4a20cd9a9b24986c136dea2937bc9c66"></a>
static const std::map<br class="typebreak"/>
&lt; <a class="el" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a>, unsigned <br class="typebreak"/>
short &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_selectionTypes</b></td></tr>
<tr class="separator:a4a20cd9a9b24986c136dea2937bc9c66 inherit pub_static_attribs_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classbitpit_1_1PatchKernel"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classbitpit_1_1PatchKernel')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classbitpit_1_1PatchKernel.xhtml">bitpit::PatchKernel</a></td></tr>
<tr class="memitem:a7bd96cdfcd6ce1cddee04252824cd512 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a7bd96cdfcd6ce1cddee04252824cd512">clearBoundingBox</a> ()</td></tr>
<tr class="separator:a7bd96cdfcd6ce1cddee04252824cd512 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80ebb508aadd1bc8405395fd06798bc8 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a80ebb508aadd1bc8405395fd06798bc8">isBoundingBoxFrozen</a> () const </td></tr>
<tr class="separator:a80ebb508aadd1bc8405395fd06798bc8 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cee1aaca004bf6f3af1f11af40ef5a4 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a4cee1aaca004bf6f3af1f11af40ef5a4">setBoundingBoxFrozen</a> (bool frozen)</td></tr>
<tr class="separator:a4cee1aaca004bf6f3af1f11af40ef5a4 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24a0fd95184e91e966c3dbd5325d1af8 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a24a0fd95184e91e966c3dbd5325d1af8">setBoundingBoxDirty</a> (bool dirty)</td></tr>
<tr class="separator:a24a0fd95184e91e966c3dbd5325d1af8 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4fe56dc2ac8e276a29b9fdd3c6c6c8a inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#af4fe56dc2ac8e276a29b9fdd3c6c6c8a">setBoundingBox</a> (const std::array&lt; double, 3 &gt; &amp;minPoint, const std::array&lt; double, 3 &gt; &amp;maxPoint)</td></tr>
<tr class="separator:af4fe56dc2ac8e276a29b9fdd3c6c6c8a inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd674220b1f6a8dd4b24ee90e742e97c inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#afd674220b1f6a8dd4b24ee90e742e97c">deleteVertex</a> (const long &amp;id, bool delayed=false)</td></tr>
<tr class="separator:afd674220b1f6a8dd4b24ee90e742e97c inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4be2b88640dbc8a2d774c2677227db7 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ab4be2b88640dbc8a2d774c2677227db7">deleteVertices</a> (const std::vector&lt; long &gt; &amp;ids, bool delayed=false)</td></tr>
<tr class="separator:ab4be2b88640dbc8a2d774c2677227db7 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b3fca22041b1081dcd5cecfc2e46b0f inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a5b3fca22041b1081dcd5cecfc2e46b0f">_setTol</a> (double tolerance)</td></tr>
<tr class="separator:a5b3fca22041b1081dcd5cecfc2e46b0f inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abda063fad64469d0f918fbd985c91955 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#abda063fad64469d0f918fbd985c91955">_resetTol</a> ()</td></tr>
<tr class="separator:abda063fad64469d0f918fbd985c91955 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ec9d99b50a6bc6326191fba0210c646 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a1ec9d99b50a6bc6326191fba0210c646">_findCellFaceNeighs</a> (const long &amp;id, const int &amp;face, const std::vector&lt; long &gt; &amp;blackList=std::vector&lt; long &gt;()) const </td></tr>
<tr class="separator:a1ec9d99b50a6bc6326191fba0210c646 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab8ba2ed4252554552276e8ebd772b05 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#aab8ba2ed4252554552276e8ebd772b05">_findCellEdgeNeighs</a> (const long &amp;id, const int &amp;edge, const std::vector&lt; long &gt; &amp;blackList=std::vector&lt; long &gt;()) const </td></tr>
<tr class="separator:aab8ba2ed4252554552276e8ebd772b05 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcacf3259c4bef9de9e0ad2495941a28 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual std::vector&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#afcacf3259c4bef9de9e0ad2495941a28">_findCellVertexNeighs</a> (const long &amp;id, const int &amp;vertex, const std::vector&lt; long &gt; &amp;blackList=std::vector&lt; long &gt;()) const </td></tr>
<tr class="separator:afcacf3259c4bef9de9e0ad2495941a28 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13cb12a334bee3c69eb1bf0e72a5c3a9 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a13cb12a334bee3c69eb1bf0e72a5c3a9">setAdaptionDirty</a> (bool dirty)</td></tr>
<tr class="separator:a13cb12a334bee3c69eb1bf0e72a5c3a9 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21f33ddf3dcd1824484348286b4cda63 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a21f33ddf3dcd1824484348286b4cda63">setExpert</a> (bool expert)</td></tr>
<tr class="separator:a21f33ddf3dcd1824484348286b4cda63 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a153e2a46b155fad1f49565d87d2a2183 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">virtual const std::vector<br class="typebreak"/>
&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a153e2a46b155fad1f49565d87d2a2183">_balancePartition</a> (bool trackChanges)</td></tr>
<tr class="separator:a153e2a46b155fad1f49565d87d2a2183 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a2a19b2838306f5854e2347e44e06b7 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a6a2a19b2838306f5854e2347e44e06b7">setGhostOwner</a> (int id, int rank, bool updateExchangeData=false)</td></tr>
<tr class="separator:a6a2a19b2838306f5854e2347e44e06b7 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a6f5eb85f2ecb7721cbfc5911a0111c inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a6a6f5eb85f2ecb7721cbfc5911a0111c">unsetGhostOwner</a> (int id, bool updateExchangeData=false)</td></tr>
<tr class="separator:a6a6f5eb85f2ecb7721cbfc5911a0111c inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb0763840b53491d1c16b99973eb8bf7 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#abb0763840b53491d1c16b99973eb8bf7">clearGhostOwners</a> (bool updateExchangeData=false)</td></tr>
<tr class="separator:abb0763840b53491d1c16b99973eb8bf7 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01b35853e0adea24dad09ca8c4c02d3c inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a01b35853e0adea24dad09ca8c4c02d3c">deleteGhostExchangeData</a> ()</td></tr>
<tr class="separator:a01b35853e0adea24dad09ca8c4c02d3c inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81295d3c3b1f2b79f0cb15713dc6fd6d inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a81295d3c3b1f2b79f0cb15713dc6fd6d">deleteGhostExchangeData</a> (int rank)</td></tr>
<tr class="separator:a81295d3c3b1f2b79f0cb15713dc6fd6d inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bf127dcd0f5233355f3dc1096c735a2 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a9bf127dcd0f5233355f3dc1096c735a2">buildGhostExchangeData</a> ()</td></tr>
<tr class="separator:a9bf127dcd0f5233355f3dc1096c735a2 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae15eae4c006d11c00f28924211572790 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#ae15eae4c006d11c00f28924211572790">buildGhostExchangeData</a> (int rank)</td></tr>
<tr class="separator:ae15eae4c006d11c00f28924211572790 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d41ce44cebfa2a0526e3f97eb5e33a5 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a0d41ce44cebfa2a0526e3f97eb5e33a5">buildGhostExchangeData</a> (const std::vector&lt; int &gt; &amp;rank)</td></tr>
<tr class="separator:a0d41ce44cebfa2a0526e3f97eb5e33a5 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87256ece9f1e74de38c5d5b90beb5f4b inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a87256ece9f1e74de38c5d5b90beb5f4b">addGhostsToExchangeTargets</a> (const std::vector&lt; long &gt; &amp;ghostIds)</td></tr>
<tr class="separator:a87256ece9f1e74de38c5d5b90beb5f4b inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a374d2d18e590b257d7be86a977fd4dd7 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a374d2d18e590b257d7be86a977fd4dd7">addGhostToExchangeTargets</a> (const long ghostId)</td></tr>
<tr class="separator:a374d2d18e590b257d7be86a977fd4dd7 inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15fdccf95c2c60cd502ab8666ac4406d inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a15fdccf95c2c60cd502ab8666ac4406d">removeGhostsFromExchangeTargets</a> (const std::vector&lt; long &gt; &amp;ghostIds)</td></tr>
<tr class="separator:a15fdccf95c2c60cd502ab8666ac4406d inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a702fe2898ac425d35ae624aa3254700b inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1PatchKernel.xhtml#a702fe2898ac425d35ae624aa3254700b">removeGhostFromExchangeTargets</a> (const long ghostId)</td></tr>
<tr class="separator:a702fe2898ac425d35ae624aa3254700b inherit pro_methods_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classbitpit_1_1SurfaceKernel"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classbitpit_1_1SurfaceKernel')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classbitpit_1_1SurfaceKernel.xhtml">bitpit::SurfaceKernel</a></td></tr>
<tr class="memitem:a729808c1de1e370438cb754a25f4ea14 inherit pro_attribs_classbitpit_1_1SurfaceKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a729808c1de1e370438cb754a25f4ea14"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>m_spaceDim</b></td></tr>
<tr class="separator:a729808c1de1e370438cb754a25f4ea14 inherit pro_attribs_classbitpit_1_1SurfaceKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classbitpit_1_1PatchKernel"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classbitpit_1_1PatchKernel')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classbitpit_1_1PatchKernel.xhtml">bitpit::PatchKernel</a></td></tr>
<tr class="memitem:aba187c3b0597009684f38ad514741086 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aba187c3b0597009684f38ad514741086"></a>
<a class="el" href="classbitpit_1_1IndexGenerator.xhtml">IndexGenerator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_cellIdGenerator</b></td></tr>
<tr class="separator:aba187c3b0597009684f38ad514741086 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a619af505808ea22f4dec67de34233afd inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a619af505808ea22f4dec67de34233afd"></a>
<a class="el" href="classbitpit_1_1PiercedVector.xhtml">PiercedVector</a>&lt; <a class="el" href="classbitpit_1_1Cell.xhtml">Cell</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_cells</b></td></tr>
<tr class="separator:a619af505808ea22f4dec67de34233afd inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25b7b79f87c96e37779e0c9925467003 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a25b7b79f87c96e37779e0c9925467003"></a>
long&#160;</td><td class="memItemRight" valign="bottom"><b>m_firstGhostId</b></td></tr>
<tr class="separator:a25b7b79f87c96e37779e0c9925467003 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af055f3f083ea1f2dd62847e9903b82cb inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af055f3f083ea1f2dd62847e9903b82cb"></a>
<a class="el" href="classbitpit_1_1IndexGenerator.xhtml">IndexGenerator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_interfaceIdGenerator</b></td></tr>
<tr class="separator:af055f3f083ea1f2dd62847e9903b82cb inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20a4a7e675db5fbc28295ec633700dc5 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a20a4a7e675db5fbc28295ec633700dc5"></a>
<a class="el" href="classbitpit_1_1PiercedVector.xhtml">PiercedVector</a>&lt; <a class="el" href="classbitpit_1_1Interface.xhtml">Interface</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_interfaces</b></td></tr>
<tr class="separator:a20a4a7e675db5fbc28295ec633700dc5 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19fc2af4252a39ad0eefdbcc6ce6bd36 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a19fc2af4252a39ad0eefdbcc6ce6bd36"></a>
long&#160;</td><td class="memItemRight" valign="bottom"><b>m_lastInternalId</b></td></tr>
<tr class="separator:a19fc2af4252a39ad0eefdbcc6ce6bd36 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2b7ea9af6af92849db4ec19c0cb41c2 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af2b7ea9af6af92849db4ec19c0cb41c2"></a>
long&#160;</td><td class="memItemRight" valign="bottom"><b>m_nGhosts</b></td></tr>
<tr class="separator:af2b7ea9af6af92849db4ec19c0cb41c2 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaee5d920ab20a7288fd9f6322632f238 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaee5d920ab20a7288fd9f6322632f238"></a>
long&#160;</td><td class="memItemRight" valign="bottom"><b>m_nInternals</b></td></tr>
<tr class="separator:aaee5d920ab20a7288fd9f6322632f238 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fb9d86f0fe0e27ef2587ab7695dcbd5 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7fb9d86f0fe0e27ef2587ab7695dcbd5"></a>
<a class="el" href="classbitpit_1_1IndexGenerator.xhtml">IndexGenerator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vertexIdGenerator</b></td></tr>
<tr class="separator:a7fb9d86f0fe0e27ef2587ab7695dcbd5 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab50d09ca6d14386457fac04fe8099143 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab50d09ca6d14386457fac04fe8099143"></a>
<a class="el" href="classbitpit_1_1PiercedVector.xhtml">PiercedVector</a>&lt; <a class="el" href="classbitpit_1_1Vertex.xhtml">Vertex</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_vertices</b></td></tr>
<tr class="separator:ab50d09ca6d14386457fac04fe8099143 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10526133c3713a716f1b13d1fa3c4395 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a10526133c3713a716f1b13d1fa3c4395"></a>
<a class="el" href="classbitpit_1_1VTKUnstructuredGrid.xhtml">VTKUnstructuredGrid</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vtk</b></td></tr>
<tr class="separator:a10526133c3713a716f1b13d1fa3c4395 inherit pro_attribs_classbitpit_1_1PatchKernel"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The <a class="el" href="classbitpit_1_1SurfUnstructured.xhtml" title="The SurfUnstructured class defines an unstructured surface triangulation. ">SurfUnstructured</a> class defines an unstructured surface triangulation. </p>
<p><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml" title="The SurfUnstructured class defines an unstructured surface triangulation. ">SurfUnstructured</a> defines an unstructured surface triangulation. </p>

<p>Definition at line <a class="el" href="surfunstructured_8hpp_source.xhtml#l00036">36</a> of file <a class="el" href="surfunstructured_8hpp_source.xhtml">surfunstructured.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ac40ca285c703d11f468f563d1522f973"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::SurfUnstructured::SurfUnstructured </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>patch_dim</em> = <code>2</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>space_dim</em> = <code>3</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Creates a new patch.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>is the id of the patch </td></tr>
    <tr><td class="paramname">patch_dim</td><td>is the dimension of the patch </td></tr>
    <tr><td class="paramname">space_dim</td><td>is the dimension of the space </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00052">52</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="afe962cb76f4bee148d792449d0490480"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool bitpit::SurfUnstructured::_enableCellBalancing </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Enables cell balancing.</p>
<p>This is a void function since mesh refinement is not implemented for SurfTri patches.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>is the id of the cell </td></tr>
    <tr><td class="paramname">enabled</td><td>defines if enable the balancing for the specified cell </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classbitpit_1_1PatchKernel.xhtml">bitpit::PatchKernel</a>.</p>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00131">131</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a711dfbbff4a37af945148b8c0e88fdbf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool bitpit::SurfUnstructured::_markCellForCoarsening </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Marks a cell for coarsening.</p>
<p>This is a void function since mesh refinement is not implemented for SurfTri patches.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>the cell to be refined </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classbitpit_1_1PatchKernel.xhtml">bitpit::PatchKernel</a>.</p>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00115">115</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8558fe1c65cb2d7b98b8fcad48f62db0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool bitpit::SurfUnstructured::_markCellForRefinement </td>
          <td>(</td>
          <td class="paramtype">const long &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Marks a cell for refinement.</p>
<p>This is a void function since mesh refinement is not implemented for SurfTri patches.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>is the id of the cell that needs to be refined </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classbitpit_1_1PatchKernel.xhtml">bitpit::PatchKernel</a>.</p>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00100">100</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4698fe1cfacd04fd363c7e694d046b5b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt; <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml">adaption::Info</a> &gt; bitpit::SurfUnstructured::_updateAdaption </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>trackAdaption</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Updates the patch.</p>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector of <a class="el" href="structbitpit_1_1adaption_1_1Info.xhtml" title="The Info struct defines the information associated to an adaption. ">adaption::Info</a> that can be used to track the changes done during the update. </dd></dl>

<p>Implements <a class="el" href="classbitpit_1_1PatchKernel.xhtml">bitpit::PatchKernel</a>.</p>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00078">78</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa876ca84696f8fb80636bd01c166f724"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short bitpit::SurfUnstructured::exportDGF </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Export surface tasselation to DGF file</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dgf_name</td><td>name of dgf file</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>on output returns an error flag for I/O error </dd></dl>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00548">548</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa4c81c64d4c54c8f060a8535fa46c2e8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short bitpit::SurfUnstructured::exportSTL </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flag</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Export surface tasselation in a STL format. No check is perfomed on element type therefore tasselation containing vertex, line or quad elements will produce ill-formed stl triangulation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">stl_name</td><td>name of the stl file </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isBinary</td><td>flag for binary (true) or ASCII (false) file </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">exportInternalsOnly</td><td>flag for exporting only internal cells (true), or internal+ghost cells (false).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>on output returns an error flag for I/O error. </dd></dl>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00374">374</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a58a0ddd25390ac640cc4debc4e5a00bc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::SurfUnstructured::extractEdgeNetwork </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1SurfUnstructured.xhtml">SurfUnstructured</a> &amp;&#160;</td>
          <td class="paramname"><em>net</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Extract the edge network from surface mesh. If adjacencies are not built edges shared by more than 1 element are counted twice. Edges are appended to the content of the input <a class="el" href="classbitpit_1_1SurfUnstructured.xhtml" title="The SurfUnstructured class defines an unstructured surface triangulation. ">SurfUnstructured</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">net</td><td>on output stores the network of edges </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00169">169</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8d2d096ac756965eb7b257f6218eac30"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short bitpit::SurfUnstructured::importDGF </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Import surface tasselation from DGF file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dgf_name</td><td>name of dgf file</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>on output returns an error flag for I/O error. </dd></dl>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00471">471</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8a117925cc94016e13ef9fff09aaf079"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short bitpit::SurfUnstructured::importSTL </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>PIDOffset</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Import surface tasselation from S.T.L. file. STL facet are added at to the present mesh, i.e. current mesh content is not discarded. Howver no checks are performed to ensure that no duplicated vertices or cells are created.</p>
<p>If the input file is a multi-solid ASCII file, all solids will be loaded and a different PID will be assigned to the PID of the different solids.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">stl_name</td><td>name of stl file </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">isBinary</td><td>flag for binary (true), of ASCII (false) stl file </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">PIDOffset</td><td>is the offset for the PID numbering</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>on output returns an error flag for I/O error </dd></dl>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00248">248</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1f5589b94978098eaba0ca8410caa9d6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long bitpit::SurfUnstructured::locatePoint </td>
          <td>(</td>
          <td class="paramtype">const std::array&lt; double, 3 &gt; &amp;&#160;</td>
          <td class="paramname"><em>point</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Locates the cell the contains the point.</p>
<p>If the point is not inside the patch, the function returns the id of the null element.</p>
<p>NOTE: this function is not implemented yet.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">point</td><td>is the point to be checked </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the linear id of the cell the contains the point. If the point is not inside the patch, the function returns the id of the null element. </dd></dl>

<p>Implements <a class="el" href="classbitpit_1_1PatchKernel.xhtml">bitpit::PatchKernel</a>.</p>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00152">152</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a42afcfd1bf78be2f2d6d3edc7f4255cf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::SurfUnstructured::setExpert </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>expert</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Enables or disables expert mode.</p>
<p>When expert mode is enabled, it will be possible to change the patch using low level functions (e.g., it will be possible to add individual cells, add vertices, delete cells, ...).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">expert</td><td>if true, the expert mode will be enabled </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="surfunstructured_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/surfunstructured/<a class="el" href="surfunstructured_8hpp_source.xhtml">surfunstructured.hpp</a></li>
<li>src/surfunstructured/<a class="el" href="surfunstructured_8cpp_source.xhtml">surfunstructured.cpp</a></li>
</ul>
</div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:25 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

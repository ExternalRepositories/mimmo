
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - bitpit::VTKRectilinearGrid Class Reference</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>bitpit</b></li><li class="navelem"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml">VTKRectilinearGrid</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classbitpit_1_1VTKRectilinearGrid-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">bitpit::VTKRectilinearGrid Class Reference<div class="ingroups"><a class="el" href="group__VisualizationToolKit.xhtml">VisualizationToolKit (VTK)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> input output for Rectilinear Meshes.  
 <a href="classbitpit_1_1VTKRectilinearGrid.xhtml#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for bitpit::VTKRectilinearGrid:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classbitpit_1_1VTKRectilinearGrid__inherit__graph.svg" width="187" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for bitpit::VTKRectilinearGrid:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classbitpit_1_1VTKRectilinearGrid__coll__graph.svg" width="343" height="283"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3139d6bbb142caed453ad5e60e08905c"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:a3139d6bbb142caed453ad5e60e08905c"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a3139d6bbb142caed453ad5e60e08905c">setGeomData</a> (<a class="el" href="group__VTKEnums.xhtml#gaca97f806e766a9f496c791a5ba312a10">VTKRectilinearField</a>, std::vector&lt; T &gt; &amp;)</td></tr>
<tr class="separator:a3139d6bbb142caed453ad5e60e08905c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classbitpit_1_1VTK"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classbitpit_1_1VTK')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classbitpit_1_1VTK.xhtml">bitpit::VTK</a></td></tr>
<tr class="memitem:a7920cdcabd3efba7e6ccff82f66b027c inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a7920cdcabd3efba7e6ccff82f66b027c">VTK</a> ()</td></tr>
<tr class="separator:a7920cdcabd3efba7e6ccff82f66b027c inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ae1fbf4c10fcf84428909f42727c8f3 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a4ae1fbf4c10fcf84428909f42727c8f3">VTK</a> (std::string, std::string)</td></tr>
<tr class="separator:a4ae1fbf4c10fcf84428909f42727c8f3 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71f7726d520bf1a31e2c963d2066ae87 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a71f7726d520bf1a31e2c963d2066ae87">~VTK</a> ()</td></tr>
<tr class="separator:a71f7726d520bf1a31e2c963d2066ae87 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a81a8c03fb2fc6be546fb1ad3a7cab9 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a2a81a8c03fb2fc6be546fb1ad3a7cab9">addData</a> (std::string, <a class="el" href="classbitpit_1_1VTKBaseStreamer.xhtml">VTKBaseStreamer</a> *=NULL)</td></tr>
<tr class="separator:a2a81a8c03fb2fc6be546fb1ad3a7cab9 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78607a8df44628edffb16290ffcaa283 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a78607a8df44628edffb16290ffcaa283">addData</a> (std::string, <a class="el" href="group__VTKEnums.xhtml#ga1f8c30c6536d5ed697b58acbb45bc4c4">VTKFieldType</a>, <a class="el" href="group__VTKEnums.xhtml#ga7e8de9746792a1a21608002941e870c9">VTKLocation</a>, <a class="el" href="group__VTKEnums.xhtml#ga442bde5dd01b348dd5667ca73f5ffa73">VTKDataType</a>, <a class="el" href="classbitpit_1_1VTKBaseStreamer.xhtml">VTKBaseStreamer</a> *=NULL)</td></tr>
<tr class="separator:a78607a8df44628edffb16290ffcaa283 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9627f33b95d774b47ef7dff64ed61816 inherit pub_methods_classbitpit_1_1VTK"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:a9627f33b95d774b47ef7dff64ed61816 inherit pub_methods_classbitpit_1_1VTK"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a9627f33b95d774b47ef7dff64ed61816">addData</a> (std::string, std::vector&lt; T &gt; &amp;)</td></tr>
<tr class="separator:a9627f33b95d774b47ef7dff64ed61816 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf416e0d472e9c8d58b61f165b1484dd inherit pub_methods_classbitpit_1_1VTK"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:aaf416e0d472e9c8d58b61f165b1484dd inherit pub_methods_classbitpit_1_1VTK"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#aaf416e0d472e9c8d58b61f165b1484dd">addData</a> (std::string, <a class="el" href="group__VTKEnums.xhtml#ga1f8c30c6536d5ed697b58acbb45bc4c4">VTKFieldType</a>, <a class="el" href="group__VTKEnums.xhtml#ga7e8de9746792a1a21608002941e870c9">VTKLocation</a>, std::vector&lt; T &gt; &amp;)</td></tr>
<tr class="separator:aaf416e0d472e9c8d58b61f165b1484dd inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fc2a869002cd151ff404193431a05ff inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a3fc2a869002cd151ff404193431a05ff">disableData</a> (std::string)</td></tr>
<tr class="separator:a3fc2a869002cd151ff404193431a05ff inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae628a1d754badbeb7de7f0fc041421ae inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#ae628a1d754badbeb7de7f0fc041421ae">enableData</a> (std::string)</td></tr>
<tr class="separator:ae628a1d754badbeb7de7f0fc041421ae inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a036931701f861bbb4d0303a1d07659e2 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a036931701f861bbb4d0303a1d07659e2">getCounter</a> () const </td></tr>
<tr class="separator:a036931701f861bbb4d0303a1d07659e2 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af42d21be05887f120b9628fe3a73dd0f inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#af42d21be05887f120b9628fe3a73dd0f">getDirectory</a> () const </td></tr>
<tr class="separator:af42d21be05887f120b9628fe3a73dd0f inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a322dd27ded129fed761f23266ff5f102 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a322dd27ded129fed761f23266ff5f102">getHeaderType</a> () const </td></tr>
<tr class="separator:a322dd27ded129fed761f23266ff5f102 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdc7e63ee8bd40711e169cf9e5578cae inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#acdc7e63ee8bd40711e169cf9e5578cae">getName</a> () const </td></tr>
<tr class="separator:acdc7e63ee8bd40711e169cf9e5578cae inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d0f2fe4a8094da8bd37b6a8d775091f inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a4d0f2fe4a8094da8bd37b6a8d775091f">read</a> ()</td></tr>
<tr class="separator:a4d0f2fe4a8094da8bd37b6a8d775091f inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ec2fd45db06a9feba25058bfef4ca47 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a5ec2fd45db06a9feba25058bfef4ca47">readData</a> ()</td></tr>
<tr class="separator:a5ec2fd45db06a9feba25058bfef4ca47 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9da56bc02b811bfbb925df65c5ff5102 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a9da56bc02b811bfbb925df65c5ff5102">removeData</a> (std::string)</td></tr>
<tr class="separator:a9da56bc02b811bfbb925df65c5ff5102 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8954c7c8e3f3737c2d932a3c57866414 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a8954c7c8e3f3737c2d932a3c57866414">setCodex</a> (<a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>)</td></tr>
<tr class="separator:a8954c7c8e3f3737c2d932a3c57866414 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a817f36701896ad0f7669c4a1e2dec3e9 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a817f36701896ad0f7669c4a1e2dec3e9">setCounter</a> (int c_=0)</td></tr>
<tr class="separator:a817f36701896ad0f7669c4a1e2dec3e9 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fa19a8e02d452cef40d48f8139b35ce inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a8fa19a8e02d452cef40d48f8139b35ce">setDataCodex</a> (<a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>)</td></tr>
<tr class="separator:a8fa19a8e02d452cef40d48f8139b35ce inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1326be47a103f0ec073e00a98022ea7c inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a1326be47a103f0ec073e00a98022ea7c">setDirectory</a> (std::string)</td></tr>
<tr class="separator:a1326be47a103f0ec073e00a98022ea7c inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a934fd689889f07f39e3807a75bc64606 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a934fd689889f07f39e3807a75bc64606">setGeomCodex</a> (<a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>)</td></tr>
<tr class="separator:a934fd689889f07f39e3807a75bc64606 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18f4f9cc22895195ad51b53b94eff720 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a18f4f9cc22895195ad51b53b94eff720">setHeaderType</a> (std::string)</td></tr>
<tr class="separator:a18f4f9cc22895195ad51b53b94eff720 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf7ef2f36ba699143a50f003dd359f82 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#adf7ef2f36ba699143a50f003dd359f82">setName</a> (std::string)</td></tr>
<tr class="separator:adf7ef2f36ba699143a50f003dd359f82 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1338f5a221bb0832fa83239b0d2c6a31 inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a1338f5a221bb0832fa83239b0d2c6a31">setNames</a> (std::string, std::string)</td></tr>
<tr class="separator:a1338f5a221bb0832fa83239b0d2c6a31 inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e90342f7eaa5a9ee0b38e1c2079caef inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a1e90342f7eaa5a9ee0b38e1c2079caef">setParallel</a> (uint16_t, uint16_t)</td></tr>
<tr class="separator:a1e90342f7eaa5a9ee0b38e1c2079caef inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab87548f61ac14af29c1307b8057415fe inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#ab87548f61ac14af29c1307b8057415fe">unsetCounter</a> ()</td></tr>
<tr class="separator:ab87548f61ac14af29c1307b8057415fe inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c125da69aaf4c7fa07aa410b587b50b inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a4c125da69aaf4c7fa07aa410b587b50b">write</a> (<a class="el" href="group__VTKEnums.xhtml#ga3d86d3c08ac47e7e6d29cb1788961987">VTKWriteMode</a> writeMode=VTKWriteMode::DEFAULT)</td></tr>
<tr class="separator:a4c125da69aaf4c7fa07aa410b587b50b inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace49dd250241608142989ca33a2c033d inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#ace49dd250241608142989ca33a2c033d">write</a> (std::string, <a class="el" href="group__VTKEnums.xhtml#ga3d86d3c08ac47e7e6d29cb1788961987">VTKWriteMode</a> writeMode=VTKWriteMode::NO_INCREMENT)</td></tr>
<tr class="separator:ace49dd250241608142989ca33a2c033d inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a98a346e8647454bc2c7a2f7a20a77a inherit pub_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a5a98a346e8647454bc2c7a2f7a20a77a">writeData</a> ()</td></tr>
<tr class="separator:a5a98a346e8647454bc2c7a2f7a20a77a inherit pub_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a829cfa3b1cc40f60469cda501208c92a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a829cfa3b1cc40f60469cda501208c92a">m_dimensions</a></td></tr>
<tr class="separator:a829cfa3b1cc40f60469cda501208c92a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27e905fd45f572dbc7d660e0b393f99b"><td class="memItemLeft" align="right" valign="top">extension3D_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a27e905fd45f572dbc7d660e0b393f99b">m_globalIndex</a></td></tr>
<tr class="separator:a27e905fd45f572dbc7d660e0b393f99b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b4a4de9c67f008746d23362a4131c55"><td class="memItemLeft" align="right" valign="top">extension3D_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a7b4a4de9c67f008746d23362a4131c55">m_localIndex</a></td></tr>
<tr class="separator:a7b4a4de9c67f008746d23362a4131c55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0470a1d97dd5c793a5770b0397242439"><td class="memItemLeft" align="right" valign="top">std::vector&lt; extension3D_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a0470a1d97dd5c793a5770b0397242439">m_procIndex</a></td></tr>
<tr class="separator:a0470a1d97dd5c793a5770b0397242439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classbitpit_1_1VTK"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classbitpit_1_1VTK')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classbitpit_1_1VTK.xhtml">bitpit::VTK</a></td></tr>
<tr class="memitem:a1780be97f10097c96d35f4fd8c5c0d4b inherit pro_attribs_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a1780be97f10097c96d35f4fd8c5c0d4b">m_cells</a></td></tr>
<tr class="separator:a1780be97f10097c96d35f4fd8c5c0d4b inherit pro_attribs_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6b61b3fa6c5f67e8b23a2e72398bb80 inherit pro_attribs_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#ae6b61b3fa6c5f67e8b23a2e72398bb80">m_data</a></td></tr>
<tr class="separator:ae6b61b3fa6c5f67e8b23a2e72398bb80 inherit pro_attribs_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff14da5311db991794fbe93dcdb04e9 inherit pro_attribs_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a9ff14da5311db991794fbe93dcdb04e9">m_dataCodex</a></td></tr>
<tr class="separator:a9ff14da5311db991794fbe93dcdb04e9 inherit pro_attribs_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3839dcf42c8eccf0c6a3e506f212ec1d inherit pro_attribs_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1FileHandler.xhtml">FileHandler</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a3839dcf42c8eccf0c6a3e506f212ec1d">m_fh</a></td></tr>
<tr class="separator:a3839dcf42c8eccf0c6a3e506f212ec1d inherit pro_attribs_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afad6c4fc39c4358fb528e84527c50549 inherit pro_attribs_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#afad6c4fc39c4358fb528e84527c50549">m_geomCodex</a></td></tr>
<tr class="separator:afad6c4fc39c4358fb528e84527c50549 inherit pro_attribs_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25bf0ec5cfab4740e3d9528f5865d085 inherit pro_attribs_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a25bf0ec5cfab4740e3d9528f5865d085">m_geometry</a></td></tr>
<tr class="separator:a25bf0ec5cfab4740e3d9528f5865d085 inherit pro_attribs_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7195e9fc0b45fd1bcb7b39cc719fd66a inherit pro_attribs_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a7195e9fc0b45fd1bcb7b39cc719fd66a">m_headerType</a></td></tr>
<tr class="separator:a7195e9fc0b45fd1bcb7b39cc719fd66a inherit pro_attribs_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2cbb5edbb52cba64ec296441dc845f4 inherit pro_attribs_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classbitpit_1_1VTKNativeStreamer.xhtml">VTKNativeStreamer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#ae2cbb5edbb52cba64ec296441dc845f4">m_nativeStreamer</a></td></tr>
<tr class="separator:ae2cbb5edbb52cba64ec296441dc845f4 inherit pro_attribs_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af13fc1101ac82a835dbf142633ea906a inherit pro_attribs_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#af13fc1101ac82a835dbf142633ea906a">m_points</a></td></tr>
<tr class="separator:af13fc1101ac82a835dbf142633ea906a inherit pro_attribs_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac730bb8315e692d691f5c5bd5f8ddeaa inherit pro_attribs_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#ac730bb8315e692d691f5c5bd5f8ddeaa">m_procs</a></td></tr>
<tr class="separator:ac730bb8315e692d691f5c5bd5f8ddeaa inherit pro_attribs_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a093da4cdb4a4a58d272cd5c318850db0 inherit pro_attribs_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a093da4cdb4a4a58d272cd5c318850db0">m_rank</a></td></tr>
<tr class="separator:a093da4cdb4a4a58d272cd5c318850db0 inherit pro_attribs_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43e2e97d9841f9c299317bfd88716087"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a43e2e97d9841f9c299317bfd88716087">VTKRectilinearGrid</a> ()</td></tr>
<tr class="separator:a43e2e97d9841f9c299317bfd88716087"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abea06a06c2dd53c27797c857942ca116"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#abea06a06c2dd53c27797c857942ca116">VTKRectilinearGrid</a> (std::string, std::string)</td></tr>
<tr class="separator:abea06a06c2dd53c27797c857942ca116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec52f69761d74e87ba138a7c3ac931bd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#aec52f69761d74e87ba138a7c3ac931bd">VTKRectilinearGrid</a> (std::string, std::string, <a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>, int, int, int, int, int, int)</td></tr>
<tr class="separator:aec52f69761d74e87ba138a7c3ac931bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc0dab442fc88bff6c4f0105be0b0266"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#abc0dab442fc88bff6c4f0105be0b0266">VTKRectilinearGrid</a> (std::string, std::string, <a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>, int, int, int)</td></tr>
<tr class="separator:abc0dab442fc88bff6c4f0105be0b0266"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39bf97ef83afde8c9a627775668b1f07"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a39bf97ef83afde8c9a627775668b1f07">VTKRectilinearGrid</a> (std::string, std::string, <a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>, int, int, int, int)</td></tr>
<tr class="separator:a39bf97ef83afde8c9a627775668b1f07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab403a5f1aa1ef638833e1ee83e4a3ea3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#ab403a5f1aa1ef638833e1ee83e4a3ea3">VTKRectilinearGrid</a> (std::string, std::string, <a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>, int, int)</td></tr>
<tr class="separator:ab403a5f1aa1ef638833e1ee83e4a3ea3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a023eebcfa85a6ef421e0edd4d72069a7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a023eebcfa85a6ef421e0edd4d72069a7">~VTKRectilinearGrid</a> ()</td></tr>
<tr class="separator:a023eebcfa85a6ef421e0edd4d72069a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a560c4d3661066dc58614f67962208711"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a560c4d3661066dc58614f67962208711">writeCollection</a> ()</td></tr>
<tr class="separator:a560c4d3661066dc58614f67962208711"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3551187b2ba46b32878df4fac70b10e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#ac3551187b2ba46b32878df4fac70b10e">readMetaInformation</a> ()</td></tr>
<tr class="separator:ac3551187b2ba46b32878df4fac70b10e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66f6657501ce766568ec0b16de27fcae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a66f6657501ce766568ec0b16de27fcae">writeMetaInformation</a> ()</td></tr>
<tr class="separator:a66f6657501ce766568ec0b16de27fcae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c0b2c244a680e0c3a453b7998b55da5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a0c0b2c244a680e0c3a453b7998b55da5">setDimensions</a> (int, int, int, int, int, int)</td></tr>
<tr class="separator:a0c0b2c244a680e0c3a453b7998b55da5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58bb888d532187862fa73b10acad0513"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a58bb888d532187862fa73b10acad0513">setDimensions</a> (int, int, int)</td></tr>
<tr class="separator:a58bb888d532187862fa73b10acad0513"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a395249603eb93adbd22d1a7349ce3309"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a395249603eb93adbd22d1a7349ce3309">setDimensions</a> (int, int, int, int)</td></tr>
<tr class="separator:a395249603eb93adbd22d1a7349ce3309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1dc2b6520d565f3e45665ffe244238f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#ac1dc2b6520d565f3e45665ffe244238f">setDimensions</a> (int, int)</td></tr>
<tr class="separator:ac1dc2b6520d565f3e45665ffe244238f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04ba49c2254b5b424ffbaea661b4d8eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a04ba49c2254b5b424ffbaea661b4d8eb">setGlobalDimensions</a> (int, int, int)</td></tr>
<tr class="separator:a04ba49c2254b5b424ffbaea661b4d8eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a664b8149e36e9a0c1121ee314317830c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a664b8149e36e9a0c1121ee314317830c">setGlobalDimensions</a> (int, int)</td></tr>
<tr class="separator:a664b8149e36e9a0c1121ee314317830c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a953716eb62b137d6e36fd5d89e4514ff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a953716eb62b137d6e36fd5d89e4514ff">setGeomData</a> (<a class="el" href="group__VTKEnums.xhtml#gaca97f806e766a9f496c791a5ba312a10">VTKRectilinearField</a>, <a class="el" href="classbitpit_1_1VTKBaseStreamer.xhtml">VTKBaseStreamer</a> *=NULL)</td></tr>
<tr class="separator:a953716eb62b137d6e36fd5d89e4514ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c2296c462e776c4155ccde6fef040a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a7c2296c462e776c4155ccde6fef040a7">setGeomData</a> (<a class="el" href="group__VTKEnums.xhtml#gaca97f806e766a9f496c791a5ba312a10">VTKRectilinearField</a>, <a class="el" href="group__VTKEnums.xhtml#ga442bde5dd01b348dd5667ca73f5ffa73">VTKDataType</a>, <a class="el" href="classbitpit_1_1VTKBaseStreamer.xhtml">VTKBaseStreamer</a> *=NULL)</td></tr>
<tr class="separator:a7c2296c462e776c4155ccde6fef040a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d95b3e8bf91fad962f4b31b4158861c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a6d95b3e8bf91fad962f4b31b4158861c">setGlobalIndex</a> (std::vector&lt; extension3D_t &gt;)</td></tr>
<tr class="separator:a6d95b3e8bf91fad962f4b31b4158861c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb955be4e4244f3d9315e95e12d60efa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#abb955be4e4244f3d9315e95e12d60efa">setGlobalIndex</a> (std::vector&lt; extension2D_t &gt;)</td></tr>
<tr class="separator:abb955be4e4244f3d9315e95e12d60efa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a36312c9738ef4bb8cdf78c32fd1d57"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a3a36312c9738ef4bb8cdf78c32fd1d57">calcFieldSize</a> (const <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;)</td></tr>
<tr class="separator:a3a36312c9738ef4bb8cdf78c32fd1d57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac943fbecc4664e27e9428a094507f357"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#ac943fbecc4664e27e9428a094507f357">calcFieldEntries</a> (const <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;)</td></tr>
<tr class="separator:ac943fbecc4664e27e9428a094507f357"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24602b03d6cdf5a62fb53b0dc3749a26"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml#a24602b03d6cdf5a62fb53b0dc3749a26">calcFieldComponents</a> (const <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;)</td></tr>
<tr class="separator:a24602b03d6cdf5a62fb53b0dc3749a26"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classbitpit_1_1VTK"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classbitpit_1_1VTK')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classbitpit_1_1VTK.xhtml">bitpit::VTK</a></td></tr>
<tr class="memitem:acb9fc2790f9920d4cec143c2c3fe1590 inherit pro_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#acb9fc2790f9920d4cec143c2c3fe1590">calcAppendedOffsets</a> ()</td></tr>
<tr class="separator:acb9fc2790f9920d4cec143c2c3fe1590 inherit pro_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add47199cce03801d5b60d7e6916789d6 inherit pro_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#add47199cce03801d5b60d7e6916789d6">checkAllFields</a> ()</td></tr>
<tr class="separator:add47199cce03801d5b60d7e6916789d6 inherit pro_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e7aecf3aaa348f3142e06dad31d7515 inherit pro_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a8e7aecf3aaa348f3142e06dad31d7515">getDataByName</a> (const std::string &amp;, <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> *&amp;)</td></tr>
<tr class="separator:a8e7aecf3aaa348f3142e06dad31d7515 inherit pro_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59cd0f5f91165bb7467b8d19c260b190 inherit pro_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a59cd0f5f91165bb7467b8d19c260b190">getGeomByName</a> (const std::string &amp;, <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> *&amp;)</td></tr>
<tr class="separator:a59cd0f5f91165bb7467b8d19c260b190 inherit pro_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a058d86ec7fdd1ce0a70124cd0a9963 inherit pro_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a0a058d86ec7fdd1ce0a70124cd0a9963">readDataArray</a> (std::fstream &amp;, <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;)</td></tr>
<tr class="separator:a0a058d86ec7fdd1ce0a70124cd0a9963 inherit pro_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29ef3aecfc31ecf84dd8d8088e9d57ae inherit pro_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a29ef3aecfc31ecf84dd8d8088e9d57ae">readDataHeader</a> (std::fstream &amp;)</td></tr>
<tr class="separator:a29ef3aecfc31ecf84dd8d8088e9d57ae inherit pro_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c8c785b086271b223ca3c3459be2126 inherit pro_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a3c8c785b086271b223ca3c3459be2126">writeDataArray</a> (std::fstream &amp;, <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;)</td></tr>
<tr class="separator:a3c8c785b086271b223ca3c3459be2126 inherit pro_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bf14c721914ba35de5f23f7a0f0eace inherit pro_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a9bf14c721914ba35de5f23f7a0f0eace">writeDataHeader</a> (std::fstream &amp;, bool parallel=false)</td></tr>
<tr class="separator:a9bf14c721914ba35de5f23f7a0f0eace inherit pro_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6369b2164ef861bc03f1e6f104e2a00d inherit pro_methods_classbitpit_1_1VTK"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classbitpit_1_1VTK.xhtml#a6369b2164ef861bc03f1e6f104e2a00d">writePDataArray</a> (std::fstream &amp;, <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;)</td></tr>
<tr class="separator:a6369b2164ef861bc03f1e6f104e2a00d inherit pro_methods_classbitpit_1_1VTK"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> input output for Rectilinear Meshes. </p>
<p><a class="el" href="classbitpit_1_1VTKRectilinearGrid.xhtml" title="VTK input output for Rectilinear Meshes. ">VTKRectilinearGrid</a> provides methods to read and write parallel and serial rectlinear meshes and data. The class is agnostic with respect to the container used for the data and provides an interface through the CRTP mechanism. The numbering of nodes start with 0. Different numbering scheme is not supported. </p>

<p>Definition at line <a class="el" href="VTK_8hpp_source.xhtml#l00406">406</a> of file <a class="el" href="VTK_8hpp_source.xhtml">VTK.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a43e2e97d9841f9c299317bfd88716087"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::VTKRectilinearGrid::VTKRectilinearGrid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Default constructor. Allocates three geometry fields called "x_Coord", "y_Coord" and "z_Coord". </p>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abea06a06c2dd53c27797c857942ca116"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::VTKRectilinearGrid::VTKRectilinearGrid </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Constructor for parallel 3D grid. Calls default constructor and sets provided input information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dir</td><td>directory of <a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> file with final "/" </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>name of <a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> without suffix </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aec52f69761d74e87ba138a7c3ac931bd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::VTKRectilinearGrid::VTKRectilinearGrid </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>&#160;</td>
          <td class="paramname"><em>codex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>l1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>l2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Constructor for parallel 3D grid. Calls default constructor and sets provided input information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dir</td><td>directory of <a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> file with final "/" </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>name of <a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> without suffix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">codex</td><td>codex of data [VTKFormat::ASCII/VTKFormatAPPENDED] </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n1</td><td>min node index in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n2</td><td>max node index in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m1</td><td>min node index in second direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m2</td><td>max node index in second direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l1</td><td>min node index in third direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l2</td><td>max node index in third direction </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abc0dab442fc88bff6c4f0105be0b0266"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::VTKRectilinearGrid::VTKRectilinearGrid </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>&#160;</td>
          <td class="paramname"><em>codex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>l</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Constructor for serial 3D grids. Min index is set automatically to zero. Calls default constructor and sets provided input information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dir</td><td>directory of <a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> file with final "/" </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>name of <a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> without suffix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">codex</td><td>codex of data [VTKFormat::ASCII/VTKFormatAPPENDED] </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number of nodes in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m</td><td>number of nodes in second direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l</td><td>number of nodes in third direction </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a39bf97ef83afde8c9a627775668b1f07"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::VTKRectilinearGrid::VTKRectilinearGrid </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>&#160;</td>
          <td class="paramname"><em>codex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Constructor for parallel 2D grid. Calls default constructor and sets provided input information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dir</td><td>directory of <a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> file with final "/" </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>name of <a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> without suffix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">codex</td><td>codex of data [VTKFormat::ASCII/VTKFormatAPPENDED] </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n1</td><td>min node index in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n2</td><td>max node index in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m1</td><td>min node index in second direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m2</td><td>max node index in second direction </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00130">130</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab403a5f1aa1ef638833e1ee83e4a3ea3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::VTKRectilinearGrid::VTKRectilinearGrid </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__VTKEnums.xhtml#ga2197e628becd3f4d3093e1f681b5deb8">VTKFormat</a>&#160;</td>
          <td class="paramname"><em>codex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Constructor for serial 2D grid. Calls default constructor and sets provided input information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dir</td><td>directory of <a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> file with final "/" </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>name of <a class="el" href="classbitpit_1_1VTK.xhtml" title="A base class for VTK input output. ">VTK</a> without suffix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">codex</td><td>codex of data [VTKFormat::ASCII/VTKFormatAPPENDED] </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number of nodes in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m</td><td>number of nodes in second direction </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00149">149</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a023eebcfa85a6ef421e0edd4d72069a7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bitpit::VTKRectilinearGrid::~VTKRectilinearGrid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Destructor </p>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00162">162</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a24602b03d6cdf5a62fb53b0dc3749a26"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t bitpit::VTKRectilinearGrid::calcFieldComponents </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;&#160;</td>
          <td class="paramname"><em>field</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Calculates the compnents of a field </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">field</td><td>field </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>size of the field </dd></dl>

<p>Implements <a class="el" href="classbitpit_1_1VTK.xhtml">bitpit::VTK</a>.</p>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00580">580</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac943fbecc4664e27e9428a094507f357"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t bitpit::VTKRectilinearGrid::calcFieldEntries </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;&#160;</td>
          <td class="paramname"><em>field</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Calculates the number of entries of a field </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">field</td><td>field </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>size of the field </dd></dl>

<p>Implements <a class="el" href="classbitpit_1_1VTK.xhtml">bitpit::VTK</a>.</p>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00537">537</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3a36312c9738ef4bb8cdf78c32fd1d57"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t bitpit::VTKRectilinearGrid::calcFieldSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classbitpit_1_1VTKField.xhtml">VTKField</a> &amp;&#160;</td>
          <td class="paramname"><em>field</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Calculates the size (in bytes) of a field </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">field</td><td>field </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>size of the field </dd></dl>

<p>Implements <a class="el" href="classbitpit_1_1VTK.xhtml">bitpit::VTK</a>.</p>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00523">523</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac3551187b2ba46b32878df4fac70b10e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::readMetaInformation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Reads meta data of VTR file (grid size, data fields, codex, position of data within file). Calls setDimension. </p>

<p>Implements <a class="el" href="classbitpit_1_1VTK.xhtml">bitpit::VTK</a>.</p>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00169">169</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a0c0b2c244a680e0c3a453b7998b55da5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::setDimensions </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>l1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>l2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sets the dimension for 3D parallel grids. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n1</td><td>min node index in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n2</td><td>max node index in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m1</td><td>min node index in second direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m2</td><td>max node index in second direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l1</td><td>min node index in third direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l2</td><td>max node index in third direction </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00350">350</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a58bb888d532187862fa73b10acad0513"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::setDimensions </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>l</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sets the dimension for 3D serial grids. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number of nodes in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m</td><td>number of nodes in second direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l</td><td>number of nodes in third direction </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00381">381</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a395249603eb93adbd22d1a7349ce3309"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::setDimensions </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sets the dimension for 2D parallel grids. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n1</td><td>min node index in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">n2</td><td>max node index in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m1</td><td>min node index in second direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m2</td><td>max node index in second direction </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00394">394</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac1dc2b6520d565f3e45665ffe244238f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::setDimensions </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>m</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sets the dimension for 2D serial grids. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>number of nodes in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">m</td><td>number of nodes in second direction </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00405">405</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3139d6bbb142caed453ad5e60e08905c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::setGeomData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__VTKEnums.xhtml#gaca97f806e766a9f496c791a5ba312a10">VTKRectilinearField</a>&#160;</td>
          <td class="paramname"><em>fieldEnum</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Associates the NativeStreamer to a geometrical field </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>type of std::vector&lt;&gt; </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fieldEnum</td><td>which geometrical field </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>std::vector containing the data </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTK_8tpp_source.xhtml#l00094">94</a> of file <a class="el" href="VTK_8tpp_source.xhtml">VTK.tpp</a>.</p>

</div>
</div>
<a class="anchor" id="a953716eb62b137d6e36fd5d89e4514ff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::setGeomData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__VTKEnums.xhtml#gaca97f806e766a9f496c791a5ba312a10">VTKRectilinearField</a>&#160;</td>
          <td class="paramname"><em>fieldEnum</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1VTKBaseStreamer.xhtml">VTKBaseStreamer</a> *&#160;</td>
          <td class="paramname"><em>streamer</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Associates streamer to a geometrical field </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fieldEnum</td><td>which geometrical field </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">streamer</td><td><a class="el" href="classbitpit_1_1VTKBaseStreamer.xhtml" title="The base class to be used to derive VTK streamers form. ">VTKBaseStreamer</a> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00436">436</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7c2296c462e776c4155ccde6fef040a7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::setGeomData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__VTKEnums.xhtml#gaca97f806e766a9f496c791a5ba312a10">VTKRectilinearField</a>&#160;</td>
          <td class="paramname"><em>fieldEnum</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__VTKEnums.xhtml#ga442bde5dd01b348dd5667ca73f5ffa73">VTKDataType</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classbitpit_1_1VTKBaseStreamer.xhtml">VTKBaseStreamer</a> *&#160;</td>
          <td class="paramname"><em>streamer</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Associates streamer to a geometrical field </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fieldEnum</td><td>which geometrical field </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>type of data [ VTKDataType::[[U]Int[8/16/32/64] / Float[32/64] ] ] </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">streamer</td><td><a class="el" href="classbitpit_1_1VTKBaseStreamer.xhtml" title="The base class to be used to derive VTK streamers form. ">VTKBaseStreamer</a> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00453">453</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a04ba49c2254b5b424ffbaea661b4d8eb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::setGlobalDimensions </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>I</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>J</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>K</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sets the global 3D grid information for parallel output. Needs to be called by all processes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">I</td><td>numer of nodes in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">J</td><td>numer of nodes in second direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">K</td><td>numer of nodes in third direction </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00419">419</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a664b8149e36e9a0c1121ee314317830c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::setGlobalDimensions </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>I</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>J</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sets the global 2D grid information for parallel output. Needs to be called by all processes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">I</td><td>numer of nodes in first direction </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">J</td><td>numer of nodes in second direction </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00471">471</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6d95b3e8bf91fad962f4b31b4158861c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::setGlobalIndex </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; extension3D_t &gt;&#160;</td>
          <td class="paramname"><em>loc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sets the global 3D grid information for parallel output. Needs to be called only by rank 0. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">loc</td><td>min I-index, max I-index, min J-index, max J-index, min K-index, max K-index for each process </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00488">488</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abb955be4e4244f3d9315e95e12d60efa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::setGlobalIndex </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; extension2D_t &gt;&#160;</td>
          <td class="paramname"><em>loc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>sets the global 2D grid information for parallel output. Needs to be called only by rank 0. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">loc</td><td>min I-index, max I-index, min J-index, max J-index for each process </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00503">503</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a560c4d3661066dc58614f67962208711"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::writeCollection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Writes collection file for parallel output. Is called by rank 0 in VTK::Write() </p>

<p>Implements <a class="el" href="classbitpit_1_1VTK.xhtml">bitpit::VTK</a>.</p>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00281">281</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a66f6657501ce766568ec0b16de27fcae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void bitpit::VTKRectilinearGrid::writeMetaInformation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Writes entire VTR but the data. </p>

<p>Implements <a class="el" href="classbitpit_1_1VTK.xhtml">bitpit::VTK</a>.</p>

<p>Definition at line <a class="el" href="VTKRectilinear_8cpp_source.xhtml#l00225">225</a> of file <a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a829cfa3b1cc40f60469cda501208c92a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int bitpit::VTKRectilinearGrid::m_dimensions</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>dimensions of the grid [2/3] </p>

<p>Definition at line <a class="el" href="VTK_8hpp_source.xhtml#l00412">412</a> of file <a class="el" href="VTK_8hpp_source.xhtml">VTK.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a27e905fd45f572dbc7d660e0b393f99b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">extension3D_t bitpit::VTKRectilinearGrid::m_globalIndex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>min and max indices of global grid </p>

<p>Definition at line <a class="el" href="VTK_8hpp_source.xhtml#l00414">414</a> of file <a class="el" href="VTK_8hpp_source.xhtml">VTK.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7b4a4de9c67f008746d23362a4131c55"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">extension3D_t bitpit::VTKRectilinearGrid::m_localIndex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>min and max indices of local grid </p>

<p>Definition at line <a class="el" href="VTK_8hpp_source.xhtml#l00413">413</a> of file <a class="el" href="VTK_8hpp_source.xhtml">VTK.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a0470a1d97dd5c793a5770b0397242439"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;extension3D_t&gt; bitpit::VTKRectilinearGrid::m_procIndex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>global indices of each processors </p>

<p>Definition at line <a class="el" href="VTK_8hpp_source.xhtml#l00415">415</a> of file <a class="el" href="VTK_8hpp_source.xhtml">VTK.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/IO/<a class="el" href="VTK_8hpp_source.xhtml">VTK.hpp</a></li>
<li>src/IO/<a class="el" href="VTK_8tpp_source.xhtml">VTK.tpp</a></li>
<li>src/IO/<a class="el" href="VTKRectilinear_8cpp_source.xhtml">VTKRectilinear.cpp</a></li>
</ul>
</div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:25 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

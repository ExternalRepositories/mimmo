
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - src/communications/communications_buffers.hpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a481372c9e8d9b6cd5802f6200f853d5.xhtml">communications</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">communications_buffers.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef __BITPIT_COMMUNICATIONS_BUFFERS_HPP__</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __BITPIT_COMMUNICATIONS_BUFFERS_HPP__</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;bitpit_containers.hpp&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">// Declarations of the stream operators</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>bitpit{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keyword">class </span>SendBuffer;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keyword">class </span>RecvBuffer;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;};</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<a class="code" href="classbitpit_1_1SendBuffer.xhtml">bitpit::SendBuffer</a> &amp; <a class="code" href="group__Operators.xhtml#gae6ad1dc96cc1000aded39aecb5d66493">operator&lt;&lt;</a>(<a class="code" href="classbitpit_1_1SendBuffer.xhtml">bitpit::SendBuffer</a> &amp;buffer, <span class="keyword">const</span> T &amp;value);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<a class="code" href="classbitpit_1_1RecvBuffer.xhtml">bitpit::RecvBuffer</a> &amp; <a class="code" href="group__Operators.xhtml#ga91ecc3462d869a3132ba96d017ae549b">operator&gt;&gt;</a>(<a class="code" href="classbitpit_1_1RecvBuffer.xhtml">bitpit::RecvBuffer</a> &amp;buffer, T &amp;value);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">// Declaration of the communications buffers</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span>bitpit {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">class </span>DataCommunicator;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">typedef</span> OBinaryStream RawSendBuffer;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">typedef</span> IBinaryStream RawRecvBuffer;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> RawBufferType&gt;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classbitpit_1_1CommunicationBuffer.xhtml">   60</a></span>&#160;<span class="keyword">class </span><a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml">CommunicationBuffer</a></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#adcd78c064674f483554848f266226839">CommunicationBuffer</a>(<span class="keywordtype">size_t</span> <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#a7dfff6c6c60d80fb55358df63560f9c3">capacity</a> = 0, <span class="keywordtype">bool</span> doubleBuffer = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#aff029dd34935dc72a202c4e103f4e078">setCapacity</a>(<span class="keywordtype">size_t</span> <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#a7dfff6c6c60d80fb55358df63560f9c3">capacity</a>);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#a7dfff6c6c60d80fb55358df63560f9c3">capacity</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#a3e217a2ff38884471d69dd1f58ea4c61">seekg</a> (<span class="keywordtype">size_t</span> pos);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    std::ifstream::pos_type <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#ae8f953f0708b6c61ac82e0e39e129232">tellg</a>(<span class="keywordtype">void</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#affc715571f3daad0b7509534e43c64a7">isDouble</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    RawBufferType &amp; <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#a479f8e3ec1a9320c2defccd233a89fe8">getFront</a>();</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    RawBufferType &amp; <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#ab7cbf3119331d14beaecfd4e4c0f557b">getBack</a>();</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#acb13ddae38f524073b52d90c7a0c8b0b">swap</a>();</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    std::vector&lt;RawBufferType&gt; &amp; <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#ad51cc80eb42473cd40e89527e2cad226">getBuffers</a>();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">const</span> std::vector&lt;RawBufferType&gt; &amp; <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#ad51cc80eb42473cd40e89527e2cad226">getBuffers</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    std::vector&lt;RawBufferType&gt; m_buffers;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    RawBufferType *m_front;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    RawBufferType *m_back;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;};</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classbitpit_1_1SendBuffer.xhtml">   90</a></span>&#160;<span class="keyword">class </span><a class="code" href="classbitpit_1_1SendBuffer.xhtml">SendBuffer</a> : <span class="keyword">public</span> <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml">CommunicationBuffer</a>&lt;RawSendBuffer&gt;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">friend</span> <a class="code" href="classbitpit_1_1DataCommunicator.xhtml">DataCommunicator</a>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">friend</span> <a class="code" href="classbitpit_1_1SendBuffer.xhtml">SendBuffer</a> &amp; (::operator&lt;&lt;) (<a class="code" href="classbitpit_1_1SendBuffer.xhtml">SendBuffer</a> &amp;buffer, <span class="keyword">const</span> T &amp;value);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="classbitpit_1_1SendBuffer.xhtml#af082a89227abaaeb8034646b628d81d8">SendBuffer</a>(<span class="keywordtype">size_t</span> <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#a7dfff6c6c60d80fb55358df63560f9c3">capacity</a> = 0, <span class="keywordtype">bool</span> doubleBuffer = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1SendBuffer.xhtml#a779507f62b4c37c40ce1a3b6e19a458b">squeeze</a>();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;};</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classbitpit_1_1RecvBuffer.xhtml">  104</a></span>&#160;<span class="keyword">class </span><a class="code" href="classbitpit_1_1RecvBuffer.xhtml">RecvBuffer</a> : <span class="keyword">public</span> <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml">CommunicationBuffer</a>&lt;RawRecvBuffer&gt;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">friend</span> <a class="code" href="classbitpit_1_1DataCommunicator.xhtml">DataCommunicator</a>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keyword">friend</span> <a class="code" href="classbitpit_1_1RecvBuffer.xhtml">RecvBuffer</a> &amp; (::operator&gt;&gt;) (<a class="code" href="classbitpit_1_1RecvBuffer.xhtml">RecvBuffer</a> &amp;buffer, T &amp;value);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="classbitpit_1_1RecvBuffer.xhtml#a4c5ab65a1990ab75fcf8eb655388676f">RecvBuffer</a>(<span class="keywordtype">size_t</span> <a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#a7dfff6c6c60d80fb55358df63560f9c3">capacity</a> = 0, <span class="keywordtype">bool</span> doubleBuffer = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;};</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">#include &quot;communications_buffers.tpp&quot;</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="preprocessor"># endif</span></div>
<div class="ttc" id="classbitpit_1_1RecvBuffer_xhtml"><div class="ttname"><a href="classbitpit_1_1RecvBuffer.xhtml">bitpit::RecvBuffer</a></div><div class="ttdoc">Buffer to be used for receive communications. </div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8hpp_source.xhtml#l00104">communications_buffers.hpp:104</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml_ab7cbf3119331d14beaecfd4e4c0f557b"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml#ab7cbf3119331d14beaecfd4e4c0f557b">bitpit::CommunicationBuffer::getBack</a></div><div class="ttdeci">RawBufferType &amp; getBack()</div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8tpp_source.xhtml#l00122">communications_buffers.tpp:122</a></div></div>
<div class="ttc" id="classbitpit_1_1SendBuffer_xhtml_a779507f62b4c37c40ce1a3b6e19a458b"><div class="ttname"><a href="classbitpit_1_1SendBuffer.xhtml#a779507f62b4c37c40ce1a3b6e19a458b">bitpit::SendBuffer::squeeze</a></div><div class="ttdeci">void squeeze()</div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8cpp_source.xhtml#l00048">communications_buffers.cpp:48</a></div></div>
<div class="ttc" id="group__Operators_xhtml_gae6ad1dc96cc1000aded39aecb5d66493"><div class="ttname"><a href="group__Operators.xhtml#gae6ad1dc96cc1000aded39aecb5d66493">operator&lt;&lt;</a></div><div class="ttdeci">std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const std::array&lt; T, d &gt; &amp;x)</div><div class="ttdef"><b>Definition:</b> <a href="Operators__array_8tpp_source.xhtml#l01320">Operators_array.tpp:1320</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml_aff029dd34935dc72a202c4e103f4e078"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml#aff029dd34935dc72a202c4e103f4e078">bitpit::CommunicationBuffer::setCapacity</a></div><div class="ttdeci">void setCapacity(size_t capacity)</div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8tpp_source.xhtml#l00053">communications_buffers.tpp:53</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml_a479f8e3ec1a9320c2defccd233a89fe8"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml#a479f8e3ec1a9320c2defccd233a89fe8">bitpit::CommunicationBuffer::getFront</a></div><div class="ttdeci">RawBufferType &amp; getFront()</div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8tpp_source.xhtml#l00111">communications_buffers.tpp:111</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml_adcd78c064674f483554848f266226839"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml#adcd78c064674f483554848f266226839">bitpit::CommunicationBuffer::CommunicationBuffer</a></div><div class="ttdeci">CommunicationBuffer(size_t capacity=0, bool doubleBuffer=false)</div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8tpp_source.xhtml#l00034">communications_buffers.tpp:34</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml_a7dfff6c6c60d80fb55358df63560f9c3"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml#a7dfff6c6c60d80fb55358df63560f9c3">bitpit::CommunicationBuffer::capacity</a></div><div class="ttdeci">size_t capacity() const </div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8tpp_source.xhtml#l00066">communications_buffers.tpp:66</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml_ad51cc80eb42473cd40e89527e2cad226"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml#ad51cc80eb42473cd40e89527e2cad226">bitpit::CommunicationBuffer::getBuffers</a></div><div class="ttdeci">std::vector&lt; RawBufferType &gt; &amp; getBuffers()</div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8tpp_source.xhtml#l00140">communications_buffers.tpp:140</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml_affc715571f3daad0b7509534e43c64a7"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml#affc715571f3daad0b7509534e43c64a7">bitpit::CommunicationBuffer::isDouble</a></div><div class="ttdeci">bool isDouble() const </div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8tpp_source.xhtml#l00100">communications_buffers.tpp:100</a></div></div>
<div class="ttc" id="classbitpit_1_1SendBuffer_xhtml_af082a89227abaaeb8034646b628d81d8"><div class="ttname"><a href="classbitpit_1_1SendBuffer.xhtml#af082a89227abaaeb8034646b628d81d8">bitpit::SendBuffer::SendBuffer</a></div><div class="ttdeci">SendBuffer(size_t capacity=0, bool doubleBuffer=false)</div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8cpp_source.xhtml#l00039">communications_buffers.cpp:39</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml_a3e217a2ff38884471d69dd1f58ea4c61"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml#a3e217a2ff38884471d69dd1f58ea4c61">bitpit::CommunicationBuffer::seekg</a></div><div class="ttdeci">bool seekg(size_t pos)</div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8tpp_source.xhtml#l00078">communications_buffers.tpp:78</a></div></div>
<div class="ttc" id="classbitpit_1_1RecvBuffer_xhtml_a4c5ab65a1990ab75fcf8eb655388676f"><div class="ttname"><a href="classbitpit_1_1RecvBuffer.xhtml#a4c5ab65a1990ab75fcf8eb655388676f">bitpit::RecvBuffer::RecvBuffer</a></div><div class="ttdeci">RecvBuffer(size_t capacity=0, bool doubleBuffer=false)</div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8cpp_source.xhtml#l00065">communications_buffers.cpp:65</a></div></div>
<div class="ttc" id="classbitpit_1_1SendBuffer_xhtml"><div class="ttname"><a href="classbitpit_1_1SendBuffer.xhtml">bitpit::SendBuffer</a></div><div class="ttdoc">Buffer to be used for send communications. </div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8hpp_source.xhtml#l00090">communications_buffers.hpp:90</a></div></div>
<div class="ttc" id="group__Operators_xhtml_ga91ecc3462d869a3132ba96d017ae549b"><div class="ttname"><a href="group__Operators.xhtml#ga91ecc3462d869a3132ba96d017ae549b">operator&gt;&gt;</a></div><div class="ttdeci">std::istream &amp; operator&gt;&gt;(std::istream &amp;in, std::array&lt; T, d &gt; &amp;x)</div><div class="ttdef"><b>Definition:</b> <a href="Operators__array_8tpp_source.xhtml#l01398">Operators_array.tpp:1398</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml_acb13ddae38f524073b52d90c7a0c8b0b"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml#acb13ddae38f524073b52d90c7a0c8b0b">bitpit::CommunicationBuffer::swap</a></div><div class="ttdeci">void swap()</div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8tpp_source.xhtml#l00131">communications_buffers.tpp:131</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml_ae8f953f0708b6c61ac82e0e39e129232"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml#ae8f953f0708b6c61ac82e0e39e129232">bitpit::CommunicationBuffer::tellg</a></div><div class="ttdeci">std::ifstream::pos_type tellg(void) const </div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8tpp_source.xhtml#l00089">communications_buffers.tpp:89</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml">bitpit::CommunicationBuffer</a></div><div class="ttdoc">Buffer to be used for data communications. </div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8hpp_source.xhtml#l00060">communications_buffers.hpp:60</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml">bitpit::DataCommunicator</a></div><div class="ttdoc">The DataCommunicator class provides the infrastructure needed to exchange data among processors...</div><div class="ttdef"><b>Definition:</b> <a href="communications_8hpp_source.xhtml#l00040">communications.hpp:40</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:23 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

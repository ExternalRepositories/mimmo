
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - src/patchkernel/element.hpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_9dc7aa6b5c138a40bfa86c6dff2965ac.xhtml">patchkernel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">element.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef __BITPIT_ELEMENT_HPP__</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __BITPIT_ELEMENT_HPP__</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;bitpit_containers.hpp&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>bitpit {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keyword">class </span>Element;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<a class="code" href="classbitpit_1_1IBinaryStream.xhtml">bitpit::IBinaryStream</a>&amp; <a class="code" href="group__Operators.xhtml#ga91ecc3462d869a3132ba96d017ae549b">operator&gt;&gt;</a>(<a class="code" href="classbitpit_1_1IBinaryStream.xhtml">bitpit::IBinaryStream</a> &amp;buf, <a class="code" href="classbitpit_1_1Element.xhtml">bitpit::Element</a>&amp; element);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<a class="code" href="classbitpit_1_1OBinaryStream.xhtml">bitpit::OBinaryStream</a>&amp; <a class="code" href="group__Operators.xhtml#gae6ad1dc96cc1000aded39aecb5d66493">operator&lt;&lt;</a>(<a class="code" href="classbitpit_1_1OBinaryStream.xhtml">bitpit::OBinaryStream</a> &amp;buf, <span class="keyword">const</span> <a class="code" href="classbitpit_1_1Element.xhtml">bitpit::Element</a>&amp; element);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">namespace </span>bitpit {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml">   43</a></span>&#160;<span class="keyword">class </span><a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">   46</a></span>&#160;    <span class="keyword">enum</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">Type</a> {</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314af962ccefc7ceb3e5f1c38513458505b9">   47</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314af962ccefc7ceb3e5f1c38513458505b9">UNDEFINED</a>  = -1,</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a9f82429068add059795aa004101a1760">   48</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a9f82429068add059795aa004101a1760">VERTEX</a>     = 1,</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314afee97e8a97cb04d2f1bf413f5a04bace">   49</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314afee97e8a97cb04d2f1bf413f5a04bace">LINE</a>       = 3,</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a82bc8db39ccc3df1508e13df4bc477f9">   50</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a82bc8db39ccc3df1508e13df4bc477f9">TRIANGLE</a>   = 5,</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314ab09d850251c39b832ccb113edf80071c">   51</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314ab09d850251c39b832ccb113edf80071c">POLYGON</a>    = 7,</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314aa47bb638838f02d8df2c540aeb4a29b7">   52</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314aa47bb638838f02d8df2c540aeb4a29b7">PIXEL</a>      = 8,</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314aa51f57fff2126e9cb7f783a756ea3593">   53</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314aa51f57fff2126e9cb7f783a756ea3593">QUAD</a>       = 9,</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314aa296aea314e438e5d63523e73bcb6632">   54</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314aa296aea314e438e5d63523e73bcb6632">TETRA</a>      = 10,</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314ae8015dc104c5762a7f1ce41eb18ffc26">   55</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314ae8015dc104c5762a7f1ce41eb18ffc26">VOXEL</a>      = 11,</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a46e10f2d03aee9fc457163f9a0dd76f1">   56</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a46e10f2d03aee9fc457163f9a0dd76f1">HEXAHEDRON</a> = 12,</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314adaee0c207571074d3d5cbd50206f4d1f">   57</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314adaee0c207571074d3d5cbd50206f4d1f">WEDGE</a>      = 13,</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a21d46412ce79246fd7f58ee6cb857e1f">   58</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a21d46412ce79246fd7f58ee6cb857e1f">PYRAMID</a>    = 14,</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a0aa793ef20be57bac3c6529580a3c2fb">   59</a></span>&#160;        <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a0aa793ef20be57bac3c6529580a3c2fb">POLYHEDRON</a> = 42</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    };</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">Type</a> type;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">int</span> dimension;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">int</span> nVertices;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">int</span> nEdges;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">int</span> nFaces;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> undefinedInfo;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> vertexInfo;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> lineInfo;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> triangleInfo;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> pixelInfo;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> quadInfo;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> tetraInfo;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> voxelInfo;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> hexahedronInfo;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> pyramidInfo;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> wedgeInfo;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::vector&lt;Type&gt; face_type;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    std::vector&lt;std::vector&lt;int&gt;&gt; faceConnect;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    std::vector&lt;Type&gt; edge_type;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    std::vector&lt;std::vector&lt;int&gt;&gt; edgeConnect;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a065204d86cc83e5d9f56791287c1ef2b">ElementInfo</a>();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a065204d86cc83e5d9f56791287c1ef2b">ElementInfo</a>(<a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> &amp; <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a317d53c60ef19408d789d7b2c08b3760">getElementInfo</a>(<a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordtype">void</span> initializeUndefinedInfo();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordtype">void</span> initializeVertexInfo();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">void</span> initializeLineInfo();</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">void</span> initializeTriangleInfo();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">void</span> initializePixelInfo();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">void</span> initializeQuadInfo();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordtype">void</span> initializeTetraInfo();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">void</span> initializeVoxelInfo();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordtype">void</span> initializeHexahedronInfo();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">void</span> initializePyramidInfo();</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">void</span> initializeWedgeInfo();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;};</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classbitpit_1_1Element.xhtml">  107</a></span>&#160;<span class="keyword">class </span><a class="code" href="classbitpit_1_1Element.xhtml">Element</a> {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">friend</span> <a class="code" href="classbitpit_1_1OBinaryStream.xhtml">bitpit::OBinaryStream</a>&amp; (::operator&lt;&lt;) (<a class="code" href="classbitpit_1_1OBinaryStream.xhtml">bitpit::OBinaryStream</a>&amp; buf, <span class="keyword">const</span> <a class="code" href="classbitpit_1_1Element.xhtml">Element</a>&amp; element);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword">friend</span> <a class="code" href="classbitpit_1_1IBinaryStream.xhtml">bitpit::IBinaryStream</a>&amp; (::operator&gt;&gt;) (<a class="code" href="classbitpit_1_1IBinaryStream.xhtml">bitpit::IBinaryStream</a>&amp; buf, <a class="code" href="classbitpit_1_1Element.xhtml">Element</a>&amp; element);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="structbitpit_1_1Element_1_1IdHasher.xhtml">  129</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structbitpit_1_1Element_1_1IdHasher.xhtml">IdHasher</a> {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="structbitpit_1_1Element_1_1IdHasher.xhtml#adfa8671303090c3c2534ec952aae746d">  139</a></span>&#160;        constexpr std::size_t <a class="code" href="structbitpit_1_1Element_1_1IdHasher.xhtml#adfa8671303090c3c2534ec952aae746d">operator()</a>(U&amp;&amp; value) const noexcept</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>std::size_t<span class="keyword">&gt;</span>(std::forward&lt;U&gt;(value));</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    };</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="classbitpit_1_1Element.xhtml#af5ed1f969411cb1b97a81b207fb1a262">Element</a>();</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="classbitpit_1_1Element.xhtml#af5ed1f969411cb1b97a81b207fb1a262">Element</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> &amp;<span class="keywordtype">id</span>, <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type = <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314af962ccefc7ceb3e5f1c38513458505b9">ElementInfo::UNDEFINED</a>);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="classbitpit_1_1Element.xhtml#af5ed1f969411cb1b97a81b207fb1a262">Element</a>(<span class="keyword">const</span> <a class="code" href="classbitpit_1_1Element.xhtml">Element</a> &amp;other);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="classbitpit_1_1Element.xhtml#af5ed1f969411cb1b97a81b207fb1a262">Element</a>(<a class="code" href="classbitpit_1_1Element.xhtml">Element</a>&amp;&amp; other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="classbitpit_1_1Element.xhtml">Element</a>&amp; <a class="code" href="classbitpit_1_1Element.xhtml#a0583576dae78b3bfef8b83c0e7ce9904">operator = </a>(<span class="keyword">const</span> <a class="code" href="classbitpit_1_1Element.xhtml">Element</a> &amp;other);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="classbitpit_1_1Element.xhtml">Element</a>&amp; <a class="code" href="classbitpit_1_1Element.xhtml#a0583576dae78b3bfef8b83c0e7ce9904">operator=</a>(<a class="code" href="classbitpit_1_1Element.xhtml">Element</a>&amp;&amp; other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Element.xhtml#acf15fb27c03597b6d1708343e92b4a28">initialize</a>(<a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keyword">const</span> <a class="code" href="classbitpit_1_1ElementInfo.xhtml">ElementInfo</a> &amp; <a class="code" href="classbitpit_1_1Element.xhtml#acd875d8ac29b6d292b99d1779041176f">getInfo</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Element.xhtml#a2c9f47001976ae86bc79707fe15fd7ce">setId</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> &amp;<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">long</span> <a class="code" href="classbitpit_1_1Element.xhtml#a79eb2e7b6342c00c93b2b0f36214b1f1">getId</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Element.xhtml#ab6a25bd397ed3a55b83ac17e0939f97e">setType</a>(<a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> <a class="code" href="classbitpit_1_1Element.xhtml#a05a9d2b7f35b108a690d96242cdfe5e0">getType</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Element.xhtml#a964d87372e162abe437a0ef18e20eea0">getDimension</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1Element.xhtml#acd9622af6e9216ae13509e9835d110f1">isThreeDimensional</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Element.xhtml#adef671037ca88ed95c297e74d911f4c4">setConnect</a>(std::unique_ptr&lt;<span class="keywordtype">long</span>[]&gt; &amp;&amp;connect);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Element.xhtml#ad069c168d614f85444a5d08d0d4cdad8">unsetConnect</a>();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">long</span> * <a class="code" href="classbitpit_1_1Element.xhtml#ad03999c3d3b66840cb72ea6f65901722">getConnect</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordtype">long</span> * <a class="code" href="classbitpit_1_1Element.xhtml#ad03999c3d3b66840cb72ea6f65901722">getConnect</a>();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Element.xhtml#af79866635c18fe3384764869f6a450b4">getFaceCount</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> <a class="code" href="classbitpit_1_1Element.xhtml#ae8ed2f8193fced9e84cd379e8b0934de">getFaceType</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    std::vector&lt;int&gt; <a class="code" href="classbitpit_1_1Element.xhtml#a73d45283655d18a2a0ca10545883b2e2">getFaceLocalConnect</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;face) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Element.xhtml#a6d1f37fa9f5ef449e1a52c2e94ccb38e">getEdgeCount</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    std::vector&lt;int&gt; <a class="code" href="classbitpit_1_1Element.xhtml#a4780b9dbd457df6ff0ec35d26a63cd54">getEdgeLocalConnect</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;edge) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Element.xhtml#af6fa1001174a82ebab7b0d0003af4c77">setVertex</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;index, <span class="keyword">const</span> <span class="keywordtype">long</span> &amp;vertex);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Element.xhtml#a69eac8f6d4c5fe4fa4f70cb4be57ee9d">getVertexCount</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordtype">long</span> <a class="code" href="classbitpit_1_1Element.xhtml#a611e1742519f6391eb9a80433dabb83a">getVertex</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;vertex) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">long</span> NULL_ID;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Element.xhtml#ab9bce5ecea5d8bdb693fefaee848199e">getBinarySize</a>();</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordtype">long</span> m_id;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> m_type;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    std::unique_ptr&lt;long[]&gt; m_connect;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordtype">void</span> _initialize(<a class="code" href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">ElementInfo::Type</a> type);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;};</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">extern</span> <span class="keyword">template</span> <span class="keyword">class </span>PiercedVector&lt;Element&gt;;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_acd9622af6e9216ae13509e9835d110f1"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#acd9622af6e9216ae13509e9835d110f1">bitpit::Element::isThreeDimensional</a></div><div class="ttdeci">bool isThreeDimensional() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01229">element.cpp:1229</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml"><div class="ttname"><a href="classbitpit_1_1Element.xhtml">bitpit::Element</a></div><div class="ttdoc">The Element class provides an interface for defining elements. </div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00107">element.hpp:107</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_a2c9f47001976ae86bc79707fe15fd7ce"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#a2c9f47001976ae86bc79707fe15fd7ce">bitpit::Element::setId</a></div><div class="ttdeci">void setId(const long &amp;id)</div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01008">element.cpp:1008</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_ab6a25bd397ed3a55b83ac17e0939f97e"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#ab6a25bd397ed3a55b83ac17e0939f97e">bitpit::Element::setType</a></div><div class="ttdeci">void setType(ElementInfo::Type type)</div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01038">element.cpp:1038</a></div></div>
<div class="ttc" id="group__Operators_xhtml_gae6ad1dc96cc1000aded39aecb5d66493"><div class="ttname"><a href="group__Operators.xhtml#gae6ad1dc96cc1000aded39aecb5d66493">operator&lt;&lt;</a></div><div class="ttdeci">std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const std::array&lt; T, d &gt; &amp;x)</div><div class="ttdef"><b>Definition:</b> <a href="Operators__array_8tpp_source.xhtml#l01320">Operators_array.tpp:1320</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_a4780b9dbd457df6ff0ec35d26a63cd54"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#a4780b9dbd457df6ff0ec35d26a63cd54">bitpit::Element::getEdgeLocalConnect</a></div><div class="ttdeci">std::vector&lt; int &gt; getEdgeLocalConnect(const int &amp;edge) const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01182">element.cpp:1182</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314af962ccefc7ceb3e5f1c38513458505b9"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314af962ccefc7ceb3e5f1c38513458505b9">bitpit::ElementInfo::UNDEFINED</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00047">element.hpp:47</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_a73d45283655d18a2a0ca10545883b2e2"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#a73d45283655d18a2a0ca10545883b2e2">bitpit::Element::getFaceLocalConnect</a></div><div class="ttdeci">std::vector&lt; int &gt; getFaceLocalConnect(const int &amp;face) const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01139">element.cpp:1139</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_af6fa1001174a82ebab7b0d0003af4c77"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#af6fa1001174a82ebab7b0d0003af4c77">bitpit::Element::setVertex</a></div><div class="ttdeci">void setVertex(const int &amp;index, const long &amp;vertex)</div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01261">element.cpp:1261</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_af5ed1f969411cb1b97a81b207fb1a262"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#af5ed1f969411cb1b97a81b207fb1a262">bitpit::Element::Element</a></div><div class="ttdeci">Element()</div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l00935">element.cpp:935</a></div></div>
<div class="ttc" id="classbitpit_1_1OBinaryStream_xhtml"><div class="ttname"><a href="classbitpit_1_1OBinaryStream.xhtml">bitpit::OBinaryStream</a></div><div class="ttdoc">creates output binary stream </div><div class="ttdef"><b>Definition:</b> <a href="binary__stream_8hpp_source.xhtml#l00169">binary_stream.hpp:169</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314afee97e8a97cb04d2f1bf413f5a04bace"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314afee97e8a97cb04d2f1bf413f5a04bace">bitpit::ElementInfo::LINE</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00049">element.hpp:49</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314aa296aea314e438e5d63523e73bcb6632"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314aa296aea314e438e5d63523e73bcb6632">bitpit::ElementInfo::TETRA</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00054">element.hpp:54</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314a0aa793ef20be57bac3c6529580a3c2fb"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a0aa793ef20be57bac3c6529580a3c2fb">bitpit::ElementInfo::POLYHEDRON</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00059">element.hpp:59</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_ad069c168d614f85444a5d08d0d4cdad8"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#ad069c168d614f85444a5d08d0d4cdad8">bitpit::Element::unsetConnect</a></div><div class="ttdeci">void unsetConnect()</div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01066">element.cpp:1066</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314a82bc8db39ccc3df1508e13df4bc477f9"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a82bc8db39ccc3df1508e13df4bc477f9">bitpit::ElementInfo::TRIANGLE</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00050">element.hpp:50</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314aa51f57fff2126e9cb7f783a756ea3593"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314aa51f57fff2126e9cb7f783a756ea3593">bitpit::ElementInfo::QUAD</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00053">element.hpp:53</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_a0583576dae78b3bfef8b83c0e7ce9904"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#a0583576dae78b3bfef8b83c0e7ce9904">bitpit::Element::operator=</a></div><div class="ttdeci">Element &amp; operator=(const Element &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l00962">element.cpp:962</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_ab9bce5ecea5d8bdb693fefaee848199e"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#ab9bce5ecea5d8bdb693fefaee848199e">bitpit::Element::getBinarySize</a></div><div class="ttdeci">unsigned int getBinarySize()</div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01282">element.cpp:1282</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a317d53c60ef19408d789d7b2c08b3760"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a317d53c60ef19408d789d7b2c08b3760">bitpit::ElementInfo::getElementInfo</a></div><div class="ttdeci">static const ElementInfo &amp; getElementInfo(ElementInfo::Type type)</div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l00218">element.cpp:218</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314a9f82429068add059795aa004101a1760"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a9f82429068add059795aa004101a1760">bitpit::ElementInfo::VERTEX</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00048">element.hpp:48</a></div></div>
<div class="ttc" id="classbitpit_1_1IBinaryStream_xhtml"><div class="ttname"><a href="classbitpit_1_1IBinaryStream.xhtml">bitpit::IBinaryStream</a></div><div class="ttdoc">creates input binary stream </div><div class="ttdef"><b>Definition:</b> <a href="binary__stream_8hpp_source.xhtml#l00087">binary_stream.hpp:87</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml">bitpit::ElementInfo</a></div><div class="ttdoc">The ElementInfo class allow to define elements information. </div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00043">element.hpp:43</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_ad03999c3d3b66840cb72ea6f65901722"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#ad03999c3d3b66840cb72ea6f65901722">bitpit::Element::getConnect</a></div><div class="ttdeci">const long * getConnect() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01076">element.cpp:1076</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314a21d46412ce79246fd7f58ee6cb857e1f"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a21d46412ce79246fd7f58ee6cb857e1f">bitpit::ElementInfo::PYRAMID</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00058">element.hpp:58</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_a05a9d2b7f35b108a690d96242cdfe5e0"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#a05a9d2b7f35b108a690d96242cdfe5e0">bitpit::Element::getType</a></div><div class="ttdeci">ElementInfo::Type getType() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01048">element.cpp:1048</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_adef671037ca88ed95c297e74d911f4c4"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#adef671037ca88ed95c297e74d911f4c4">bitpit::Element::setConnect</a></div><div class="ttdeci">void setConnect(std::unique_ptr&lt; long[]&gt; &amp;&amp;connect)</div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01058">element.cpp:1058</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_acf15fb27c03597b6d1708343e92b4a28"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#acf15fb27c03597b6d1708343e92b4a28">bitpit::Element::initialize</a></div><div class="ttdeci">void initialize(ElementInfo::Type type)</div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l00981">element.cpp:981</a></div></div>
<div class="ttc" id="group__Operators_xhtml_ga91ecc3462d869a3132ba96d017ae549b"><div class="ttname"><a href="group__Operators.xhtml#ga91ecc3462d869a3132ba96d017ae549b">operator&gt;&gt;</a></div><div class="ttdeci">std::istream &amp; operator&gt;&gt;(std::istream &amp;in, std::array&lt; T, d &gt; &amp;x)</div><div class="ttdef"><b>Definition:</b> <a href="Operators__array_8tpp_source.xhtml#l01398">Operators_array.tpp:1398</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314a46e10f2d03aee9fc457163f9a0dd76f1"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314a46e10f2d03aee9fc457163f9a0dd76f1">bitpit::ElementInfo::HEXAHEDRON</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00056">element.hpp:56</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_a79eb2e7b6342c00c93b2b0f36214b1f1"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#a79eb2e7b6342c00c93b2b0f36214b1f1">bitpit::Element::getId</a></div><div class="ttdeci">long getId() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01018">element.cpp:1018</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314aa47bb638838f02d8df2c540aeb4a29b7"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314aa47bb638838f02d8df2c540aeb4a29b7">bitpit::ElementInfo::PIXEL</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00052">element.hpp:52</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_a69eac8f6d4c5fe4fa4f70cb4be57ee9d"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#a69eac8f6d4c5fe4fa4f70cb4be57ee9d">bitpit::Element::getVertexCount</a></div><div class="ttdeci">int getVertexCount() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01239">element.cpp:1239</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_a964d87372e162abe437a0ef18e20eea0"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#a964d87372e162abe437a0ef18e20eea0">bitpit::Element::getDimension</a></div><div class="ttdeci">int getDimension() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01203">element.cpp:1203</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314">bitpit::ElementInfo::Type</a></div><div class="ttdeci">Type</div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00046">element.hpp:46</a></div></div>
<div class="ttc" id="structbitpit_1_1Element_1_1IdHasher_xhtml_adfa8671303090c3c2534ec952aae746d"><div class="ttname"><a href="structbitpit_1_1Element_1_1IdHasher.xhtml#adfa8671303090c3c2534ec952aae746d">bitpit::Element::IdHasher::operator()</a></div><div class="ttdeci">constexpr std::size_t operator()(U &amp;&amp;value) const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00139">element.hpp:139</a></div></div>
<div class="ttc" id="structbitpit_1_1Element_1_1IdHasher_xhtml"><div class="ttname"><a href="structbitpit_1_1Element_1_1IdHasher.xhtml">bitpit::Element::IdHasher</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00129">element.hpp:129</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_a6d1f37fa9f5ef449e1a52c2e94ccb38e"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#a6d1f37fa9f5ef449e1a52c2e94ccb38e">bitpit::Element::getEdgeCount</a></div><div class="ttdeci">int getEdgeCount() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01160">element.cpp:1160</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_af79866635c18fe3384764869f6a450b4"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#af79866635c18fe3384764869f6a450b4">bitpit::Element::getFaceCount</a></div><div class="ttdeci">int getFaceCount() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01096">element.cpp:1096</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314adaee0c207571074d3d5cbd50206f4d1f"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314adaee0c207571074d3d5cbd50206f4d1f">bitpit::ElementInfo::WEDGE</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00057">element.hpp:57</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314ae8015dc104c5762a7f1ce41eb18ffc26"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314ae8015dc104c5762a7f1ce41eb18ffc26">bitpit::ElementInfo::VOXEL</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00055">element.hpp:55</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a065204d86cc83e5d9f56791287c1ef2b"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a065204d86cc83e5d9f56791287c1ef2b">bitpit::ElementInfo::ElementInfo</a></div><div class="ttdeci">ElementInfo()</div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l00151">element.cpp:151</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_ae8ed2f8193fced9e84cd379e8b0934de"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#ae8ed2f8193fced9e84cd379e8b0934de">bitpit::Element::getFaceType</a></div><div class="ttdeci">ElementInfo::Type getFaceType(const int &amp;face) const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01117">element.cpp:1117</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_acd875d8ac29b6d292b99d1779041176f"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#acd875d8ac29b6d292b99d1779041176f">bitpit::Element::getInfo</a></div><div class="ttdeci">const ElementInfo &amp; getInfo() const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01028">element.cpp:1028</a></div></div>
<div class="ttc" id="classbitpit_1_1Element_xhtml_a611e1742519f6391eb9a80433dabb83a"><div class="ttname"><a href="classbitpit_1_1Element.xhtml#a611e1742519f6391eb9a80433dabb83a">bitpit::Element::getVertex</a></div><div class="ttdeci">long getVertex(const int &amp;vertex) const </div><div class="ttdef"><b>Definition:</b> <a href="element_8cpp_source.xhtml#l01272">element.cpp:1272</a></div></div>
<div class="ttc" id="classbitpit_1_1ElementInfo_xhtml_a36e5066a1792c06c621c565a9b5fa314ab09d850251c39b832ccb113edf80071c"><div class="ttname"><a href="classbitpit_1_1ElementInfo.xhtml#a36e5066a1792c06c621c565a9b5fa314ab09d850251c39b832ccb113edf80071c">bitpit::ElementInfo::POLYGON</a></div><div class="ttdef"><b>Definition:</b> <a href="element_8hpp_source.xhtml#l00051">element.hpp:51</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:24 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

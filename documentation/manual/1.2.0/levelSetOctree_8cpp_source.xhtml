
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - src/levelset/levelSetOctree.cpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_9d03ec41247481073d82a41947e2c425.xhtml">levelset</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">levelSetOctree.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor"># include &quot;levelSet.hpp&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"># include &quot;bitpit_SA.hpp&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor"># include &quot;bitpit_CG.hpp&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">namespace </span>bitpit {</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSetOctree.xhtml#ad01bff31af5060f22a1cadf3327fd5e1">   41</a></span>&#160;<a class="code" href="classbitpit_1_1LevelSetOctree.xhtml#ad01bff31af5060f22a1cadf3327fd5e1">LevelSetOctree::~LevelSetOctree</a>( ){</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    m_octree = NULL ;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;};</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSetOctree.xhtml#af7d1e4f62e702e2ce2ff94326fa9c689">   48</a></span>&#160;<a class="code" href="classbitpit_1_1LevelSetOctree.xhtml#af7d1e4f62e702e2ce2ff94326fa9c689">LevelSetOctree::LevelSetOctree</a>(<a class="code" href="classbitpit_1_1VolOctree.xhtml">VolOctree</a> &amp; patch ): <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml">LevelSetKernel</a>( (static_cast&lt;<a class="code" href="classbitpit_1_1VolumeKernel.xhtml">VolumeKernel</a>*&gt;(&amp;patch)) ){</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    m_octree = &amp;patch ;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;};</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSetOctree.xhtml#a634a84d74fa3207702bbb20ac853e70c">   56</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classbitpit_1_1LevelSetOctree.xhtml#a634a84d74fa3207702bbb20ac853e70c">LevelSetOctree::computeSizeNarrowBand</a>( <a class="code" href="classbitpit_1_1LevelSetObject.xhtml">LevelSetObject</a> *visitor ){</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordtype">double</span>                      RSearch(0.) ;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">double</span>                      size;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">bool</span>                        flagged ;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    std::vector&lt;bool&gt;           nearPoint ; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">int</span>                         i, level(100) ;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    uint8_t                     j0(0), j1( <a class="code" href="group__MathFunctions.xhtml#ga6da0697577be6fda9b574b2344c58014">pow</a>(2,<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ac8b6c0dc68a43a97efa0bf90b9182a25">m_mesh</a>-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#ae28ec9687875e8032b8f2696fd6b8bf9">getDimension</a>())-1) ;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    std::array&lt;double,3&gt;        octrBB0, octrBB1, triBB0, triBB1, C0, C1 ;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">// finest cell in octree</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    size = (m_octree-&gt;<a class="code" href="classbitpit_1_1VolOctree.xhtml#abd350ce466388cc48e2a3879d472065b">getTree</a>()).getLocalMinSize();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ac8b6c0dc68a43a97efa0bf90b9182a25">m_mesh</a>-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#a321157907261f65f58cc50febcf2ab9d">getBoundingBox</a>(octrBB0, octrBB1) ;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    visitor-&gt;getBoundingBox(triBB0, triBB1) ;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">if</span>( <a class="code" href="group__CG.xhtml#ga28d8df159d89502ca11a1621114bef2d">CGElem::intersectBoxBox</a>(octrBB0,octrBB1,triBB0,triBB1,C0,C1) ) { <span class="comment">//intersect two Bounding Boxes around geometry and local grid</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="comment">// snap bounding box to grid and create cartesian grid</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        std::array&lt;int,3&gt;    nc ;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        C0 -= size ;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        C1 += size ;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">for</span>( i=0; i&lt;m_octree-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#ae28ec9687875e8032b8f2696fd6b8bf9">getDimension</a>(); ++i){</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            C0[i] =  octrBB0[i] + size *   (int) ( ( C0[i] - octrBB0[i] ) / size ) ;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            C1[i] =  octrBB0[i] + size * ( (int) ( ( C1[i] - octrBB0[i] ) / size ) +1 ) ;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            nc[i] = round( ( C1[i] - C0[i] ) /size ) ;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        };</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="comment">// calculate LS on cartesian mesh and calculate RSearch by finding largest cell throughout flagged cartesian cells</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="classbitpit_1_1VolCartesian.xhtml">VolCartesian</a>            cmesh( 0, m_octree-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#ae28ec9687875e8032b8f2696fd6b8bf9">getDimension</a>(), C0, C1-C0, nc ) ;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="classbitpit_1_1LevelSet.xhtml">LevelSet</a>                auxLS ;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <a class="code" href="classbitpit_1_1LevelSetObject.xhtml">LevelSetObject</a>*         auxSe = visitor-&gt;clone() ;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        auxLS.setMesh( &amp;cmesh ) ;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        auxLS.addObject( auxSe ) ;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        auxLS.setSign(<span class="keyword">false</span>) ;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        auxLS.compute( ) ;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keyword">delete</span> auxSe ;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        std::array&lt;int,3&gt;   i0;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        std::array&lt;int,3&gt;   i1;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordtype">int</span>                 _i, _j, _k, index, twoDAdjust; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        twoDAdjust = 3-m_octree-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#ae28ec9687875e8032b8f2696fd6b8bf9">getDimension</a>() ;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">for</span>( <span class="keyword">const</span> <span class="keyword">auto</span> &amp;cell : <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ac8b6c0dc68a43a97efa0bf90b9182a25">m_mesh</a>-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#a1799d61f7a4ea2c0f043ee860de457fe">getCells</a>() ){</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">int</span>* conn = cell.getConnect() ;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            C0 = <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ac8b6c0dc68a43a97efa0bf90b9182a25">m_mesh</a>-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#ac588184ef6e5d280a963a0fde8dcbdd3">getVertexCoords</a>(conn[j0]) ;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            C1 = <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ac8b6c0dc68a43a97efa0bf90b9182a25">m_mesh</a>-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#ac588184ef6e5d280a963a0fde8dcbdd3">getVertexCoords</a>(conn[j1]) ;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            i0 = cmesh.locateClosestVertexCartesian(C0);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            i1 = cmesh.locateClosestVertexCartesian(C1);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            i1[2] +=  twoDAdjust ;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            flagged = false ;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">for</span>( _k=i0[2]; _k&lt;i1[2]; ++_k){</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                <span class="keywordflow">for</span>( _j=i0[1]; _j&lt;i1[1]; ++_j){</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                    <span class="keywordflow">for</span>( _i=i0[0]; _i&lt;i1[0]; ++_i){</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                        index = cmesh.getCellLinearId( _i, _j, _k) ;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                        flagged = flagged || auxLS.isInNarrowBand(index) ;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    };</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                };</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            };</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">if</span>(flagged) </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                level = <a class="code" href="group__MathFunctions.xhtml#ga88740c05f6c499a2784fcc1a221c1c9f">std::min</a>( level, m_octree-&gt;<a class="code" href="classbitpit_1_1VolOctree.xhtml#a80fce164ad5e6920f538298d9117e3b2">getCellLevel</a>( cell.getId() ) ) ;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        };</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        RSearch = <a class="code" href="classbitpit_1_1LevelSetOctree.xhtml#aefcef9d100d32537fbd2d0649d0997c0">computeRSearchFromLevel</a>( level ) ;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }; <span class="comment">//endif intersect</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="preprocessor"># if BITPIT_ENABLE_MPI</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span>( <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a24575637dacead8fb2c1ad27ad7a6be7">assureMPI</a>() ){</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordtype">double</span> reducedRSearch ;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        MPI_Allreduce( &amp;RSearch, &amp;reducedRSearch, 1, MPI_DOUBLE, MPI_MAX, <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ae24049b7ad3aeea7c22b4ad981dda028">m_commMPI</a> );</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        RSearch = reducedRSearch ;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">return</span> RSearch;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;};</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSetOctree.xhtml#a650ce3f6b7852c47823a29020119c048">  161</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classbitpit_1_1LevelSetOctree.xhtml#a650ce3f6b7852c47823a29020119c048">LevelSetOctree::updateSizeNarrowBand</a>( <span class="keyword">const</span> std::vector&lt;adaption::Info&gt; &amp;mapper ){</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordtype">double</span>  newRSearch ;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordtype">long</span>    id ;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">int</span>     level(100) ;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    std::vector&lt;bool&gt;    map(mapper.size()) ;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    std::vector&lt;bool&gt;::iterator    mapIt=map.begin()  ;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="classbitpit_1_1PiercedIterator.xhtml">PiercedIterator&lt;LSInfo&gt;</a> it=<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#aa723a897f934aedb771699ddcdb0224a">m_ls</a>.begin(), itEnd = <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#aa723a897f934aedb771699ddcdb0224a">m_ls</a>.end() ;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    std::unordered_set&lt;long&gt; nb;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="comment">// assumes that LS information is relevant to OLD!!! grid</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">// scrrens old narrow band for coarsest elements</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    nb.reserve( <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#aa723a897f934aedb771699ddcdb0224a">m_ls</a>.size() ) ;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">while</span>( it!=itEnd ){</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordtype">id</span> = it.<a class="code" href="classbitpit_1_1PiercedIterator.xhtml#a18841f81fbb288de48b90666f40d9942">getId</a>() ;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">if</span>( <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a66f34d2c1fd4bdea07d153aa2b19b203">isInNarrowBand</a>(<span class="keywordtype">id</span>) )</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            nb.insert(<span class="keywordtype">id</span>) ;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        ++it ;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    };</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> &amp; info : mapper ){</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        *mapIt = false ;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">if</span>( info.entity == adaption::Entity::ENTITY_CELL){</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">for</span> ( <span class="keyword">auto</span> &amp; parent : info.previous){</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                <span class="keywordflow">if</span>( <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a66f34d2c1fd4bdea07d153aa2b19b203">isInNarrowBand</a>(parent) ){</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                    *mapIt = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                    nb.erase(parent) ;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                };</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            };</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        }</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        ++mapIt ;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    mapIt= map.begin() ;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> &amp; info : mapper ){</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">if</span>( info.entity == adaption::Entity::ENTITY_CELL){</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordflow">if</span>(*mapIt){ <span class="comment">//parent was in narrow band</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                <span class="keywordflow">for</span>( <span class="keyword">auto</span> &amp;child : info.current){</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    nb.insert(child) ;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                };</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            }; <span class="comment">//endif parent in narrow band</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        }<span class="comment">//if on cell</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        ++mapIt ;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    };<span class="comment">//foreach mesh modification</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordflow">for</span>( <span class="keyword">auto</span> &amp;<span class="keywordtype">id</span> : nb){</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        level = <a class="code" href="group__MathFunctions.xhtml#ga88740c05f6c499a2784fcc1a221c1c9f">min</a>( level, m_octree-&gt;<a class="code" href="classbitpit_1_1VolOctree.xhtml#a80fce164ad5e6920f538298d9117e3b2">getCellLevel</a>(<span class="keywordtype">id</span>) ) ;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    };</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    newRSearch = <a class="code" href="classbitpit_1_1LevelSetOctree.xhtml#aefcef9d100d32537fbd2d0649d0997c0">computeRSearchFromLevel</a>(level) ;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="preprocessor"># if BITPIT_ENABLE_MPI</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span>( <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a24575637dacead8fb2c1ad27ad7a6be7">assureMPI</a>() ) {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordtype">double</span> reducedRSearch ;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        MPI_Allreduce( &amp;newRSearch, &amp;reducedRSearch, 1, MPI_DOUBLE, MPI_MAX, <a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ae24049b7ad3aeea7c22b4ad981dda028">m_commMPI</a> );</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        newRSearch = reducedRSearch ;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    }</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">return</span> newRSearch;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;};</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSetOctree.xhtml#aefcef9d100d32537fbd2d0649d0997c0">  240</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classbitpit_1_1LevelSetOctree.xhtml#aefcef9d100d32537fbd2d0649d0997c0">LevelSetOctree::computeRSearchFromLevel</a>( uint8_t level){</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordflow">return</span>  (m_octree-&gt;<a class="code" href="classbitpit_1_1VolOctree.xhtml#abd350ce466388cc48e2a3879d472065b">getTree</a>()).levelToSize(level) *sqrt(11.) /2. ;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;};</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSetOctree.xhtml#a9eae2ac31f7becc1b75e4213f2e1c67d">  250</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classbitpit_1_1LevelSetOctree.xhtml#a9eae2ac31f7becc1b75e4213f2e1c67d">LevelSetOctree::computeSizeFromRSearch</a>( <span class="keywordtype">double</span> r){</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="classbitpit_1_1PabloUniform.xhtml">PabloUniform</a> &amp;tree = m_octree-&gt;<a class="code" href="classbitpit_1_1VolOctree.xhtml#abd350ce466388cc48e2a3879d472065b">getTree</a>() ;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    uint8_t     level ( tree.<a class="code" href="classbitpit_1_1ParaTree.xhtml#a44cd34e4b164719dc7058006ea4baa39">getLocalMaxDepth</a>() ) ;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordtype">double</span>      size ;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    size = tree.<a class="code" href="classbitpit_1_1PabloUniform.xhtml#a41a1c0a29cb4f8f682a29a05ef24dd20">levelToSize</a>(level) ;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">while</span>( size &lt;= r ) {</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        level-- ;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        size = tree.<a class="code" href="classbitpit_1_1PabloUniform.xhtml#a41a1c0a29cb4f8f682a29a05ef24dd20">levelToSize</a>(level) ;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    };</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">return</span> size ;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;};</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;}</div>
<div class="ttc" id="classbitpit_1_1LevelSetOctree_xhtml_a650ce3f6b7852c47823a29020119c048"><div class="ttname"><a href="classbitpit_1_1LevelSetOctree.xhtml#a650ce3f6b7852c47823a29020119c048">bitpit::LevelSetOctree::updateSizeNarrowBand</a></div><div class="ttdeci">double updateSizeNarrowBand(const std::vector&lt; adaption::Info &gt; &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetOctree_8cpp_source.xhtml#l00161">levelSetOctree.cpp:161</a></div></div>
<div class="ttc" id="classbitpit_1_1PiercedIterator_xhtml"><div class="ttname"><a href="classbitpit_1_1PiercedIterator.xhtml">bitpit::PiercedIterator</a></div><div class="ttdoc">Iterator for the class PiercedVector. </div><div class="ttdef"><b>Definition:</b> <a href="piercedVector_8hpp_source.xhtml#l00057">piercedVector.hpp:57</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetOctree_xhtml_a634a84d74fa3207702bbb20ac853e70c"><div class="ttname"><a href="classbitpit_1_1LevelSetOctree.xhtml#a634a84d74fa3207702bbb20ac853e70c">bitpit::LevelSetOctree::computeSizeNarrowBand</a></div><div class="ttdeci">double computeSizeNarrowBand(LevelSetObject *)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetOctree_8cpp_source.xhtml#l00056">levelSetOctree.cpp:56</a></div></div>
<div class="ttc" id="classbitpit_1_1PatchKernel_xhtml_ae28ec9687875e8032b8f2696fd6b8bf9"><div class="ttname"><a href="classbitpit_1_1PatchKernel.xhtml#ae28ec9687875e8032b8f2696fd6b8bf9">bitpit::PatchKernel::getDimension</a></div><div class="ttdeci">int getDimension() const </div><div class="ttdef"><b>Definition:</b> <a href="patch__kernel_8cpp_source.xhtml#l00551">patch_kernel.cpp:551</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetOctree_xhtml_aefcef9d100d32537fbd2d0649d0997c0"><div class="ttname"><a href="classbitpit_1_1LevelSetOctree.xhtml#aefcef9d100d32537fbd2d0649d0997c0">bitpit::LevelSetOctree::computeRSearchFromLevel</a></div><div class="ttdeci">double computeRSearchFromLevel(uint8_t)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetOctree_8cpp_source.xhtml#l00240">levelSetOctree.cpp:240</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml">bitpit::LevelSetKernel</a></div><div class="ttdoc">Mesh specific implementation to calculate the levelset function. </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8hpp_source.xhtml#l00116">levelSet.hpp:116</a></div></div>
<div class="ttc" id="classbitpit_1_1PatchKernel_xhtml_ac588184ef6e5d280a963a0fde8dcbdd3"><div class="ttname"><a href="classbitpit_1_1PatchKernel.xhtml#ac588184ef6e5d280a963a0fde8dcbdd3">bitpit::PatchKernel::getVertexCoords</a></div><div class="ttdeci">const std::array&lt; double, 3 &gt; &amp; getVertexCoords(const long &amp;id) const </div><div class="ttdef"><b>Definition:</b> <a href="patch__kernel_8cpp_source.xhtml#l01007">patch_kernel.cpp:1007</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetOctree_xhtml_af7d1e4f62e702e2ce2ff94326fa9c689"><div class="ttname"><a href="classbitpit_1_1LevelSetOctree.xhtml#af7d1e4f62e702e2ce2ff94326fa9c689">bitpit::LevelSetOctree::LevelSetOctree</a></div><div class="ttdeci">LevelSetOctree(VolOctree &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetOctree_8cpp_source.xhtml#l00048">levelSetOctree.cpp:48</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_ae24049b7ad3aeea7c22b4ad981dda028"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#ae24049b7ad3aeea7c22b4ad981dda028">bitpit::LevelSetKernel::m_commMPI</a></div><div class="ttdeci">MPI_Comm m_commMPI</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8hpp_source.xhtml#l00132">levelSet.hpp:132</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetObject_xhtml"><div class="ttname"><a href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a></div><div class="ttdoc">Interface class for all objects with respect to whom the levelset function may be computed...</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8hpp_source.xhtml#l00219">levelSet.hpp:219</a></div></div>
<div class="ttc" id="classbitpit_1_1VolOctree_xhtml_a80fce164ad5e6920f538298d9117e3b2"><div class="ttname"><a href="classbitpit_1_1VolOctree.xhtml#a80fce164ad5e6920f538298d9117e3b2">bitpit::VolOctree::getCellLevel</a></div><div class="ttdeci">int getCellLevel(const long &amp;id)</div><div class="ttdef"><b>Definition:</b> <a href="voloctree_8cpp_source.xhtml#l00351">voloctree.cpp:351</a></div></div>
<div class="ttc" id="classbitpit_1_1VolCartesian_xhtml"><div class="ttname"><a href="classbitpit_1_1VolCartesian.xhtml">bitpit::VolCartesian</a></div><div class="ttdoc">The VolCartesian defines a Cartesian patch. </div><div class="ttdef"><b>Definition:</b> <a href="volcartesian_8hpp_source.xhtml#l00037">volcartesian.hpp:37</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_aa723a897f934aedb771699ddcdb0224a"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#aa723a897f934aedb771699ddcdb0224a">bitpit::LevelSetKernel::m_ls</a></div><div class="ttdeci">PiercedVector&lt; LSInfo &gt; m_ls</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8hpp_source.xhtml#l00126">levelSet.hpp:126</a></div></div>
<div class="ttc" id="group__MathFunctions_xhtml_ga6da0697577be6fda9b574b2344c58014"><div class="ttname"><a href="group__MathFunctions.xhtml#ga6da0697577be6fda9b574b2344c58014">pow</a></div><div class="ttdeci">std::array&lt; T, d &gt; pow(std::array&lt; T, d &gt; &amp;x, double p)</div><div class="ttdef"><b>Definition:</b> <a href="MathOperators__array_8tpp_source.xhtml#l00637">MathOperators_array.tpp:637</a></div></div>
<div class="ttc" id="classbitpit_1_1VolOctree_xhtml_abd350ce466388cc48e2a3879d472065b"><div class="ttname"><a href="classbitpit_1_1VolOctree.xhtml#abd350ce466388cc48e2a3879d472065b">bitpit::VolOctree::getTree</a></div><div class="ttdeci">PabloUniform &amp; getTree()</div><div class="ttdoc">Gets a reference to the octree associated with the patch. </div><div class="ttdef"><b>Definition:</b> <a href="voloctree_8cpp_source.xhtml#l00282">voloctree.cpp:282</a></div></div>
<div class="ttc" id="classbitpit_1_1VolOctree_xhtml"><div class="ttname"><a href="classbitpit_1_1VolOctree.xhtml">bitpit::VolOctree</a></div><div class="ttdoc">The VolOctree defines a Octree patch. </div><div class="ttdef"><b>Definition:</b> <a href="voloctree_8hpp_source.xhtml#l00044">voloctree.hpp:44</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml">bitpit::LevelSet</a></div><div class="ttdoc">Level Set driver class. </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8hpp_source.xhtml#l00057">levelSet.hpp:57</a></div></div>
<div class="ttc" id="group__CG_xhtml_ga28d8df159d89502ca11a1621114bef2d"><div class="ttname"><a href="group__CG.xhtml#ga28d8df159d89502ca11a1621114bef2d">bitpit::CGElem::intersectBoxBox</a></div><div class="ttdeci">bool intersectBoxBox(array3D const &amp;, array3D const &amp;, array3D const &amp;, array3D const &amp;, int dim=3)</div><div class="ttdef"><b>Definition:</b> <a href="CG__elem_8cpp_source.xhtml#l01035">CG_elem.cpp:1035</a></div></div>
<div class="ttc" id="classbitpit_1_1PabloUniform_xhtml"><div class="ttname"><a href="classbitpit_1_1PabloUniform.xhtml">bitpit::PabloUniform</a></div><div class="ttdoc">PABLO Uniform is an example of user class derived from ParaTree to map ParaTree in a uniform (square/...</div><div class="ttdef"><b>Definition:</b> <a href="PabloUniform_8hpp_source.xhtml#l00062">PabloUniform.hpp:62</a></div></div>
<div class="ttc" id="classbitpit_1_1PatchKernel_xhtml_a321157907261f65f58cc50febcf2ab9d"><div class="ttname"><a href="classbitpit_1_1PatchKernel.xhtml#a321157907261f65f58cc50febcf2ab9d">bitpit::PatchKernel::getBoundingBox</a></div><div class="ttdeci">void getBoundingBox(std::array&lt; double, 3 &gt; &amp;minPoint, std::array&lt; double, 3 &gt; &amp;maxPoint)</div><div class="ttdef"><b>Definition:</b> <a href="patch__kernel_8cpp_source.xhtml#l03065">patch_kernel.cpp:3065</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_ac8b6c0dc68a43a97efa0bf90b9182a25"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#ac8b6c0dc68a43a97efa0bf90b9182a25">bitpit::LevelSetKernel::m_mesh</a></div><div class="ttdeci">VolumeKernel * m_mesh</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8hpp_source.xhtml#l00127">levelSet.hpp:127</a></div></div>
<div class="ttc" id="classbitpit_1_1PiercedIterator_xhtml_a18841f81fbb288de48b90666f40d9942"><div class="ttname"><a href="classbitpit_1_1PiercedIterator.xhtml#a18841f81fbb288de48b90666f40d9942">bitpit::PiercedIterator::getId</a></div><div class="ttdeci">id_t getId(const id_t &amp;fallback=-1) const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="piercedVector_8tpp_source.xhtml#l00060">piercedVector.tpp:60</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a66f34d2c1fd4bdea07d153aa2b19b203"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a66f34d2c1fd4bdea07d153aa2b19b203">bitpit::LevelSetKernel::isInNarrowBand</a></div><div class="ttdeci">bool isInNarrowBand(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00163">levelSetKernel.cpp:163</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetOctree_xhtml_ad01bff31af5060f22a1cadf3327fd5e1"><div class="ttname"><a href="classbitpit_1_1LevelSetOctree.xhtml#ad01bff31af5060f22a1cadf3327fd5e1">bitpit::LevelSetOctree::~LevelSetOctree</a></div><div class="ttdeci">virtual ~LevelSetOctree()</div><div class="ttdef"><b>Definition:</b> <a href="levelSetOctree_8cpp_source.xhtml#l00041">levelSetOctree.cpp:41</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a24575637dacead8fb2c1ad27ad7a6be7"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a24575637dacead8fb2c1ad27ad7a6be7">bitpit::LevelSetKernel::assureMPI</a></div><div class="ttdeci">bool assureMPI()</div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00733">levelSetKernel.cpp:733</a></div></div>
<div class="ttc" id="classbitpit_1_1ParaTree_xhtml_a44cd34e4b164719dc7058006ea4baa39"><div class="ttname"><a href="classbitpit_1_1ParaTree.xhtml#a44cd34e4b164719dc7058006ea4baa39">bitpit::ParaTree::getLocalMaxDepth</a></div><div class="ttdeci">uint8_t getLocalMaxDepth() const </div><div class="ttdef"><b>Definition:</b> <a href="ParaTree_8cpp_source.xhtml#l01414">ParaTree.cpp:1414</a></div></div>
<div class="ttc" id="classbitpit_1_1PabloUniform_xhtml_a41a1c0a29cb4f8f682a29a05ef24dd20"><div class="ttname"><a href="classbitpit_1_1PabloUniform.xhtml#a41a1c0a29cb4f8f682a29a05ef24dd20">bitpit::PabloUniform::levelToSize</a></div><div class="ttdeci">double levelToSize(uint8_t &amp;level)</div><div class="ttdef"><b>Definition:</b> <a href="PabloUniform_8cpp_source.xhtml#l00168">PabloUniform.cpp:168</a></div></div>
<div class="ttc" id="classbitpit_1_1PatchKernel_xhtml_a1799d61f7a4ea2c0f043ee860de457fe"><div class="ttname"><a href="classbitpit_1_1PatchKernel.xhtml#a1799d61f7a4ea2c0f043ee860de457fe">bitpit::PatchKernel::getCells</a></div><div class="ttdeci">PiercedVector&lt; Cell &gt; &amp; getCells()</div><div class="ttdef"><b>Definition:</b> <a href="patch__kernel_8cpp_source.xhtml#l01047">patch_kernel.cpp:1047</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetOctree_xhtml_a9eae2ac31f7becc1b75e4213f2e1c67d"><div class="ttname"><a href="classbitpit_1_1LevelSetOctree.xhtml#a9eae2ac31f7becc1b75e4213f2e1c67d">bitpit::LevelSetOctree::computeSizeFromRSearch</a></div><div class="ttdeci">double computeSizeFromRSearch(double)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetOctree_8cpp_source.xhtml#l00250">levelSetOctree.cpp:250</a></div></div>
<div class="ttc" id="classbitpit_1_1VolumeKernel_xhtml"><div class="ttname"><a href="classbitpit_1_1VolumeKernel.xhtml">bitpit::VolumeKernel</a></div><div class="ttdoc">The VolumeKernel class provides an interface for defining volume patches. </div><div class="ttdef"><b>Definition:</b> <a href="volume__kernel_8hpp_source.xhtml#l00032">volume_kernel.hpp:32</a></div></div>
<div class="ttc" id="group__MathFunctions_xhtml_ga88740c05f6c499a2784fcc1a221c1c9f"><div class="ttname"><a href="group__MathFunctions.xhtml#ga88740c05f6c499a2784fcc1a221c1c9f">min</a></div><div class="ttdeci">std::array&lt; T, d &gt; min(const std::array&lt; T, d &gt; &amp;x, const std::array&lt; T, d &gt; &amp;y)</div><div class="ttdef"><b>Definition:</b> <a href="MathOperators__array_8tpp_source.xhtml#l00067">MathOperators_array.tpp:67</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:24 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

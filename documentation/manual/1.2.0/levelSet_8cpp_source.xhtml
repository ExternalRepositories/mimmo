
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - src/levelset/levelSet.cpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_9d03ec41247481073d82a41947e2c425.xhtml">levelset</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">levelSet.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor"># if BITPIT_ENABLE_MPI</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span><span class="preprocessor"># include &lt;mpi.h&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"># endif</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor"># include &lt;unordered_set&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor"># include &quot;bitpit_SA.hpp&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor"># include &quot;bitpit_operators.hpp&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor"># include &quot;levelSet.hpp&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>bitpit {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a708cfa6c216e2634f7396e34c4bc8bbb">   61</a></span>&#160;<a class="code" href="classbitpit_1_1LevelSet.xhtml#a708cfa6c216e2634f7396e34c4bc8bbb">LevelSet::LevelSet</a>() {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    m_kernel = NULL ;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    m_object.clear() ;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    m_userRSearch = false ;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    m_signedDF    = true ;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    m_propagateS  = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    m_propagateV  = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;};</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a5d7dd747488384775a2aabd2282516b0">   77</a></span>&#160;<a class="code" href="classbitpit_1_1LevelSet.xhtml#a5d7dd747488384775a2aabd2282516b0">LevelSet::~LevelSet</a>(){</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span>( m_kernel != NULL){</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">delete</span> m_kernel ;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">for</span>( <span class="keyword">auto</span> &amp;<span class="keywordtype">object</span> : m_object){</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keyword">delete</span> <span class="keywordtype">object</span>.second  ;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    m_object.<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a5b0ba2aed1c754043bf5a7aec4c88794">clear</a>() ;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;};</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a3c86e83691f459b4c470cbde32a87b85">   95</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a3c86e83691f459b4c470cbde32a87b85">LevelSet::setMesh</a>( <a class="code" href="classbitpit_1_1VolumeKernel.xhtml">VolumeKernel</a>* mesh ) {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">if</span>( <a class="code" href="classbitpit_1_1VolCartesian.xhtml">VolCartesian</a>* cartesian = dynamic_cast&lt;VolCartesian*&gt; (mesh) ){</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        m_kernel = <span class="keyword">new</span> <a class="code" href="classbitpit_1_1LevelSetCartesian.xhtml">LevelSetCartesian</a>( *cartesian) ;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>( <a class="code" href="classbitpit_1_1VolOctree.xhtml">VolOctree</a>* octree = dynamic_cast&lt;VolOctree*&gt; (mesh) ){</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        m_kernel = <span class="keyword">new</span> <a class="code" href="classbitpit_1_1LevelSetOctree.xhtml">LevelSetOctree</a>(*octree) ;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    } <span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="namespacebitpit_1_1log.xhtml#ac9c385c32dc5a0331c601b1b07ab9952">log::cout</a>() &lt;&lt; <span class="stringliteral">&quot;Mesh non supported in LevelSet::setMesh()&quot;</span> &lt;&lt; std::endl ;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;};</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a9603d4b0d1d609ed5c1e317d0005c052">  114</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a3c86e83691f459b4c470cbde32a87b85">LevelSet::setMesh</a>( <a class="code" href="classbitpit_1_1VolCartesian.xhtml">VolCartesian</a>* cartesian ) {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    m_kernel = <span class="keyword">new</span> <a class="code" href="classbitpit_1_1LevelSetCartesian.xhtml">LevelSetCartesian</a>( *cartesian) ;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;};</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a7ec73a145b52e4fcf282ffd2913d24b1">  125</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a3c86e83691f459b4c470cbde32a87b85">LevelSet::setMesh</a>( <a class="code" href="classbitpit_1_1VolOctree.xhtml">VolOctree</a>* octree ) {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    m_kernel = <span class="keyword">new</span> <a class="code" href="classbitpit_1_1LevelSetOctree.xhtml">LevelSetOctree</a>( *octree) ;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;};</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#af1ad65ae27b26b497fbb5d8beec19afc">  137</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#aa5ae74dcf2b8adeec0881b2185caac32">LevelSet::addObject</a>( <a class="code" href="classbitpit_1_1SurfUnstructured.xhtml">SurfUnstructured</a>* segmentation, <span class="keywordtype">int</span> <span class="keywordtype">id</span> ) {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">if</span>( <span class="keywordtype">id</span> == levelSetDefaults::OBJECT ){</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordtype">id</span> = m_object.size() ;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    m_object.insert( {{id, <span class="keyword">new</span> <a class="code" href="classbitpit_1_1LevelSetSegmentation.xhtml">LevelSetSegmentation</a>(<span class="keywordtype">id</span>,segmentation)}} ) ;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">return</span> id;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;};</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#aa5ae74dcf2b8adeec0881b2185caac32">  153</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#aa5ae74dcf2b8adeec0881b2185caac32">LevelSet::addObject</a>( <a class="code" href="classbitpit_1_1SurfaceKernel.xhtml">SurfaceKernel</a>* segmentation, <span class="keywordtype">int</span> <span class="keywordtype">id</span> ) {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">if</span>( <a class="code" href="classbitpit_1_1SurfUnstructured.xhtml">SurfUnstructured</a>* unstruct = dynamic_cast&lt;SurfUnstructured*&gt;(segmentation) ){</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">return</span> (<a class="code" href="classbitpit_1_1LevelSet.xhtml#aa5ae74dcf2b8adeec0881b2185caac32">addObject</a>(unstruct, <span class="keywordtype">id</span>) ) ;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">return</span> levelSetDefaults::OBJECT;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    };</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;};</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a33ea4d6c4efd868df48067d52bed77d1">  167</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a33ea4d6c4efd868df48067d52bed77d1">LevelSet::clear</a>(){</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">if</span>( m_kernel != NULL){</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keyword">delete</span> m_kernel ;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    m_object.clear() ;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    return ;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;};</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a330e22098a1bdd14e476c25cfcbb00fe">  180</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a330e22098a1bdd14e476c25cfcbb00fe">LevelSet::clearObject</a>(){</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    m_object.clear() ;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    return ;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;};</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a77379c47e89da0e45e0bcdac2b2abfc0">  189</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a330e22098a1bdd14e476c25cfcbb00fe">LevelSet::clearObject</a>(<span class="keywordtype">int</span> <span class="keywordtype">id</span>){</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    m_object.erase(<span class="keywordtype">id</span>) ;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    return ;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;};</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a56b32a6c9fc3a66ad18d5223978565b7">  200</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#aa5ae74dcf2b8adeec0881b2185caac32">LevelSet::addObject</a>( <a class="code" href="classbitpit_1_1LevelSetObject.xhtml">LevelSetObject</a>* <span class="keywordtype">object</span> ) {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">if</span>( <a class="code" href="classbitpit_1_1LevelSetSegmentation.xhtml">LevelSetSegmentation</a>* segmentation = dynamic_cast&lt;LevelSetSegmentation*&gt;(<span class="keywordtype">object</span>) ){</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        m_object.insert( {{ <span class="keywordtype">object</span>-&gt;getId(), <span class="keyword">new</span> <a class="code" href="classbitpit_1_1LevelSetSegmentation.xhtml">LevelSetSegmentation</a>( *segmentation) }} ) ;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">return</span> <span class="keywordtype">object</span>-&gt;getId();</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">return</span> levelSetDefaults::OBJECT;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    };</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;};</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#aba8ccd57fdfbdb090e18767357ee5230">  220</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#aba8ccd57fdfbdb090e18767357ee5230">LevelSet::getLS</a>( <span class="keyword">const</span> <span class="keywordtype">long</span> &amp;i)<span class="keyword">const </span>{</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordflow">return</span>( m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a00c3c7c18a6075a9713b2289656e41a3">getLS</a>(i) ) ;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;};</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#aeba34de2f04469a7fc91466d4ff7998a">  229</a></span>&#160;std::array&lt;double,3&gt; <a class="code" href="classbitpit_1_1LevelSet.xhtml#aeba34de2f04469a7fc91466d4ff7998a">LevelSet::getGradient</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> &amp;i)<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">return</span>( m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a27ab641eb7b79b49331c6dc8844bfb13">getGradient</a>(i) ) ;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;};</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a42e8badfa3d23dbdf83594b4f6d07fc1">  238</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a42e8badfa3d23dbdf83594b4f6d07fc1">LevelSet::getObject</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> &amp;i)<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keywordflow">return</span>( m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ad1f432dee6bd5b55654b3a2bb5c0bb3b">getObject</a>(i) ) ;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;};</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#ae55daacabe2f83c5e90611d41b0bad35">  247</a></span>&#160;<span class="keywordtype">long</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#ae55daacabe2f83c5e90611d41b0bad35">LevelSet::getSupport</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> &amp;i)<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordtype">int</span> object ;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordtype">long</span> support ;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="classbitpit_1_1LevelSet.xhtml#a9967d2d63cf0c4695248ce71cb5edf39">getObjectAndSupport</a>( i, <span class="keywordtype">object</span>, support) ;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordflow">return</span> support ;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;};</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a9967d2d63cf0c4695248ce71cb5edf39">  264</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a9967d2d63cf0c4695248ce71cb5edf39">LevelSet::getObjectAndSupport</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> &amp;i, <span class="keywordtype">int</span> &amp;<span class="keywordtype">object</span>, <span class="keywordtype">long</span> &amp;support)<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordtype">object</span> = <a class="code" href="classbitpit_1_1LevelSet.xhtml#a42e8badfa3d23dbdf83594b4f6d07fc1">getObject</a>(i);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">if</span>( <span class="keywordtype">object</span> != levelSetDefaults::OBJECT){</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keyword">auto</span> objItr = m_object.find(<span class="keywordtype">object</span>) ;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        assert( objItr!=m_object.end() ) ;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        support = objItr-&gt;second-&gt;getSupport(i);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    } <span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        support = levelSetDefaults::ELEMENT ;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    };</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;};</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a75a142c0c3da7f30657dd282712fa710">  286</a></span>&#160;<span class="keywordtype">short</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a75a142c0c3da7f30657dd282712fa710">LevelSet::getSign</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> &amp;i)<span class="keyword">const</span>{</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordflow">return</span>( m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ae0ed0283133a41ba38178940c7779cfa">getSign</a>(i) ) ;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;};</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a25a4169fb20d7270d6bf1b41b6466147">  295</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a25a4169fb20d7270d6bf1b41b6466147">LevelSet::isInNarrowBand</a>(<span class="keyword">const</span> <span class="keywordtype">long</span> &amp;i)<span class="keyword">const</span>{</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keywordflow">return</span>( m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a66f34d2c1fd4bdea07d153aa2b19b203">isInNarrowBand</a>(i) ) ;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;};</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#af9b8c16a7ace5f03c1c11a7426dd177f">  303</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#af9b8c16a7ace5f03c1c11a7426dd177f">LevelSet::getSizeNarrowBand</a>()<span class="keyword">const</span>{</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">return</span>( m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a17ac9a87e45c5f160316adfa4f5113de">getSizeNarrowBand</a>() ) ;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;};</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a7b3adc3a239c487c0a022719a75847e8">  311</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a7b3adc3a239c487c0a022719a75847e8">LevelSet::setSign</a>(<span class="keywordtype">bool</span> flag){</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    m_signedDF = flag;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;};</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00320"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a5c8ebd5426a40696815c7c789382281d">  320</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a5c8ebd5426a40696815c7c789382281d">LevelSet::setPropagateSign</a>(<span class="keywordtype">bool</span> flag){</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    m_propagateS = flag;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;};</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#ab021610d3ddf3fab7eee983fe5de8e6a">  328</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#ab021610d3ddf3fab7eee983fe5de8e6a">LevelSet::setPropagateValue</a>(<span class="keywordtype">bool</span> flag){</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    m_propagateV = flag;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;};</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#ab7c5954b25fa16ebb3a6c2e80def916f">  336</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#ab7c5954b25fa16ebb3a6c2e80def916f">LevelSet::setSizeNarrowBand</a>(<span class="keywordtype">double</span> r){</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    m_userRSearch = true ;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a8af81b96c7c37141cb780fe6d242daba">setSizeNarrowBand</a>(r) ;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;};</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a4168291bad279c958b90fddc8b202ecc">  345</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a4168291bad279c958b90fddc8b202ecc">LevelSet::compute</a>(){</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keywordtype">double</span> RSearch ;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keywordflow">if</span>( !m_userRSearch){</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        RSearch = 0. ;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">for</span>( <span class="keyword">const</span> <span class="keyword">auto</span> &amp;visitor : m_object ){</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            RSearch = <a class="code" href="group__MathFunctions.xhtml#ga119be619426d7a672ab67296a32f04e9">std::max</a>( RSearch, m_kernel-&gt;computeSizeNarrowBand( visitor.second ) ) ;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        }</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a8af81b96c7c37141cb780fe6d242daba">setSizeNarrowBand</a>(RSearch) ;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordflow">for</span>( <span class="keyword">const</span> <span class="keyword">auto</span> &amp;visitor : m_object ){</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        visitor.second-&gt;computeLSInNarrowBand( m_kernel, RSearch, m_signedDF) ; </div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    }</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keywordflow">if</span>( m_propagateS ) m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a946d4dd8d2d13a9c4094e2c92d191a8e">propagateSign</a>( m_object ) ;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">//    if( propagateV ) propagateValue( ) ;</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    return ;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;}</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div>
<div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a1a5477ad34a671de362c3b81d64f8655">  374</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a1a5477ad34a671de362c3b81d64f8655">LevelSet::update</a>( <span class="keyword">const</span> std::vector&lt;adaption::Info&gt; &amp;mapper ){</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="comment">// Check the mapper to detect the operations to perform</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="keywordtype">bool</span> updateNarrowBand = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    std::unordered_map&lt;int,std::vector&lt;long&gt;&gt; sendList, recvList ;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordflow">for</span>( <span class="keyword">const</span> <span class="keyword">auto</span> &amp;event : mapper){</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keywordflow">if</span>( event.entity != adaption::Entity::ENTITY_CELL){</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="keywordflow">if</span>( event.type == adaption::Type::TYPE_PARTITION_SEND){</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            sendList.insert({{<span class="keyword">event</span>.rank,<span class="keyword">event</span>.previous}}) ;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span>( event.type == adaption::Type::TYPE_PARTITION_RECV){</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            recvList.insert({{<span class="keyword">event</span>.rank,<span class="keyword">event</span>.current}}) ;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span>( event.type != adaption::Type::TYPE_PARTITION_NOTICE){</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            updateNarrowBand = true ;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        }</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    }</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="comment">// Evaluate new narrow band size</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keywordtype">double</span> newRSearch ;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keywordflow">if</span> (updateNarrowBand) {</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="keywordflow">if</span>(m_userRSearch){</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            newRSearch = m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a17ac9a87e45c5f160316adfa4f5113de">getSizeNarrowBand</a>() ;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            newRSearch = m_kernel-&gt;updateSizeNarrowBand( mapper )  ;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        };</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="comment">// Clear levelset</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#abe9bfef4718dcfce759381b3cc080a08">clearAfterMeshMovement</a>(mapper) ;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="comment">// Update narrow band</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keywordflow">if</span> (updateNarrowBand) {</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a0479c0ae3f673e2ef5c93602ed754d22">filterOutsideNarrowBand</a>(newRSearch) ;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="keywordflow">for</span>( <span class="keyword">const</span> <span class="keyword">auto</span> &amp;visitor : m_object ){</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            visitor.second-&gt;updateLSInNarrowBand( m_kernel, mapper, newRSearch, m_signedDF ) ;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="preprocessor">#if BITPIT_ENABLE_MPI</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="preprocessor"></span>    <span class="comment">// Parallel communications</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="keywordflow">if</span> (sendList.size() &gt; 0 || recvList.size() &gt; 0) {</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <a class="code" href="classbitpit_1_1LevelSet.xhtml#a701ae67ac3235132c867ed57ab96d890">communicate</a>(sendList, recvList, &amp;mapper ) ;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    }</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    <a class="code" href="classbitpit_1_1LevelSet.xhtml#ac88aaa9d09663ecd1938667c7dcae5a6">exchangeGhosts</a>() ;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <span class="comment">// Finish narrow band update</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keywordflow">if</span> (updateNarrowBand) {</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keywordflow">if</span>( m_propagateS ) m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a946d4dd8d2d13a9c4094e2c92d191a8e">propagateSign</a>( m_object ) ;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment">//TODO      if( propagateV ) updatePropagatedValue() ;</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a8af81b96c7c37141cb780fe6d242daba">setSizeNarrowBand</a>(newRSearch) ;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    }</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;};</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div>
<div class="line"><a name="l00441"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a7a883d1b59925413e2134843decd2ece">  441</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a7a883d1b59925413e2134843decd2ece">LevelSet::dump</a>( std::fstream &amp;stream ){</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <a class="code" href="group__GenericIO.xhtml#gafd5fdc9c55c9dd00f4d957ac693eea98">bitpit::genericIO::flushBINARY</a>(stream, m_userRSearch);</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <a class="code" href="group__GenericIO.xhtml#gafd5fdc9c55c9dd00f4d957ac693eea98">bitpit::genericIO::flushBINARY</a>(stream, m_signedDF);</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <a class="code" href="group__GenericIO.xhtml#gafd5fdc9c55c9dd00f4d957ac693eea98">bitpit::genericIO::flushBINARY</a>(stream, m_propagateS);</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <a class="code" href="group__GenericIO.xhtml#gafd5fdc9c55c9dd00f4d957ac693eea98">bitpit::genericIO::flushBINARY</a>(stream, m_propagateV);</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ac9a8b7b521cac1909f5b8179f0b4eddb">dump</a>( stream ) ;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <span class="keywordflow">for</span>( <span class="keyword">const</span> <span class="keyword">auto</span> &amp;visitor : m_object ){</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        visitor.second-&gt;dump( stream ) ;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    }</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    return ;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;};</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div>
<div class="line"><a name="l00462"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a66094ad89698e5f32c495d240376dfc1">  462</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a66094ad89698e5f32c495d240376dfc1">LevelSet::restore</a>( std::fstream &amp;stream ){</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <a class="code" href="group__GenericIO.xhtml#gaa07df0f5bb3a3b7101a30b94bfee1460">bitpit::genericIO::absorbBINARY</a>(stream, m_userRSearch);</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <a class="code" href="group__GenericIO.xhtml#gaa07df0f5bb3a3b7101a30b94bfee1460">bitpit::genericIO::absorbBINARY</a>(stream, m_signedDF);</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <a class="code" href="group__GenericIO.xhtml#gaa07df0f5bb3a3b7101a30b94bfee1460">bitpit::genericIO::absorbBINARY</a>(stream, m_propagateS);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <a class="code" href="group__GenericIO.xhtml#gaa07df0f5bb3a3b7101a30b94bfee1460">bitpit::genericIO::absorbBINARY</a>(stream, m_propagateV);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ad3729f94bbbf75abbfe29b6cf32b697f">restore</a>( stream ) ;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="keywordflow">for</span>( <span class="keyword">const</span> <span class="keyword">auto</span> &amp;visitor : m_object ){</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        visitor.second-&gt;restore( stream ) ;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    }</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    return ;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;}</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="preprocessor">#if BITPIT_ENABLE_MPI</span></div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="keywordtype">bool</span> LevelSet::assureMPI( ){</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <span class="keywordflow">return</span>(m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a24575637dacead8fb2c1ad27ad7a6be7">assureMPI</a>() ) ;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;}</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div>
<div class="line"><a name="l00494"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#ac88aaa9d09663ecd1938667c7dcae5a6">  494</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#ac88aaa9d09663ecd1938667c7dcae5a6">LevelSet::exchangeGhosts</a>(  ){</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    std::unordered_map&lt;int,std::vector&lt;long&gt;&gt; &amp;sendList =  m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ab3d9782b45510606ec32bd74aeb7786f">getMesh</a>()-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#a18ef58972999d5660c4dfe779853a458">getGhostExchangeSources</a>() ;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    std::unordered_map&lt;int,std::vector&lt;long&gt;&gt; &amp;recvList =  m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#ab3d9782b45510606ec32bd74aeb7786f">getMesh</a>()-&gt;<a class="code" href="classbitpit_1_1PatchKernel.xhtml#a4104c9524cbf2b7eae76855f5d445dd8">getGhostExchangeTargets</a>() ;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <a class="code" href="classbitpit_1_1LevelSet.xhtml#a701ae67ac3235132c867ed57ab96d890">communicate</a>(sendList,recvList);</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    return ;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;}</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div>
<div class="line"><a name="l00511"></a><span class="lineno"><a class="line" href="classbitpit_1_1LevelSet.xhtml#a701ae67ac3235132c867ed57ab96d890">  511</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LevelSet.xhtml#a701ae67ac3235132c867ed57ab96d890">LevelSet::communicate</a>( std::unordered_map&lt;<span class="keywordtype">int</span>,std::vector&lt;long&gt;&gt; &amp;sendList, std::unordered_map&lt;<span class="keywordtype">int</span>,std::vector&lt;long&gt;&gt; &amp;recvList, std::vector&lt;adaption::Info&gt; <span class="keyword">const</span> *mapper){</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="keywordflow">if</span>( assureMPI() ){</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        MPI_Comm meshComm = m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a36a265e7d009012a8d82d958a42f1590">getCommunicator</a>() ;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="keywordtype">int</span>                 nClasses = 1 + m_object.size() ;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        <a class="code" href="classbitpit_1_1DataCommunicator.xhtml">DataCommunicator</a>    sizeCommunicator(meshComm) ; </div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        <a class="code" href="classbitpit_1_1DataCommunicator.xhtml">DataCommunicator</a>    dataCommunicator(meshComm) ; </div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        sizeCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a1c84dc83b8141938a8f62a38247e77b5">setTag</a>(0) ;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        dataCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a1c84dc83b8141938a8f62a38247e77b5">setTag</a>(1) ;</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        <span class="comment">// start receive of sizes</span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> entry : sendList) {</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            <span class="keywordtype">int</span> rank = entry.first;</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            sizeCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a2cd7f83bca7d8d74ad6f7aef13356734">setRecv</a>( rank, (1 + nClasses) * <span class="keyword">sizeof</span>(<span class="keywordtype">long</span>) ) ;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            sizeCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a3bb8f93f42f15ca898e73ae000b07700">startRecv</a>(rank);</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        }</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        { <span class="comment">// send first number of items and then data itself</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <span class="comment">// Fill the buffer with the given field and start sending the data</span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> entry : sendList) {</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                <span class="comment">// Get the send buffer</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                <span class="keywordtype">int</span> rank = entry.first;</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                sizeCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a80e3890ae05ee01549b8be035dc8b482">setSend</a>(rank, (1 + nClasses) * <span class="keyword">sizeof</span>(<span class="keywordtype">long</span>) ) ;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                dataCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a80e3890ae05ee01549b8be035dc8b482">setSend</a>(rank, 0 ) ;</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                <a class="code" href="classbitpit_1_1SendBuffer.xhtml">SendBuffer</a> &amp;sizeBuffer = sizeCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a3d532bbbccb082130d60f4b3f52017b1">getSendBuffer</a>(rank);</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                <a class="code" href="classbitpit_1_1SendBuffer.xhtml">SendBuffer</a> &amp;dataBuffer = dataCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a3d532bbbccb082130d60f4b3f52017b1">getSendBuffer</a>(rank);</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a4247b7f2c88b4302868449a7eb8e4fd8">writeCommunicationBuffer</a>( entry.second, sizeBuffer, dataBuffer ) ;</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                <span class="keywordflow">for</span>( <span class="keyword">const</span> <span class="keyword">auto</span> &amp;visitor : m_object){</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                    visitor.second-&gt;writeCommunicationBuffer( entry.second, sizeBuffer, dataBuffer ) ;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                }</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                sizeBuffer &lt;&lt; dataBuffer.<a class="code" href="classbitpit_1_1CommunicationBuffer.xhtml#a7dfff6c6c60d80fb55358df63560f9c3">capacity</a>() ;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                <span class="comment">// Start the send</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                sizeCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#afda6d1ae96db64a5a343267100ecc975">startSend</a>(rank);</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                dataCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#afda6d1ae96db64a5a343267100ecc975">startSend</a>(rank);</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            }</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        }</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        { </div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;            <span class="comment">// as soon as sizes are received start receiving data.</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;            <span class="keywordtype">int</span> nCompletedRecvs(0);</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            std::vector&lt;long&gt;   dummy(nClasses) ;</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;            std::unordered_map&lt;int,std::vector&lt;long&gt; &gt; items ;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            std::vector&lt;long&gt;::iterator itemItr ;</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            <span class="comment">// receive sizes</span></div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            <span class="keywordflow">while</span> (nCompletedRecvs &lt; sizeCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a54be77298edd20e0dbf35611e713d796">getRecvCount</a>()) {</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                <span class="keywordtype">int</span> rank = sizeCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a0ca766c936d23473e9a559f35cc76c06">waitAnyRecv</a>();</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                <a class="code" href="classbitpit_1_1RecvBuffer.xhtml">RecvBuffer</a> &amp;sizeBuffer = sizeCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#ade962eb4308933d6340b822c99f5880d">getRecvBuffer</a>(rank);</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                items.insert({{rank, dummy}}) ;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                itemItr = items[rank].begin() ;</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                sizeBuffer &gt;&gt; *(itemItr) ;</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                ++itemItr; </div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">size_t</span> i = 0; i &lt; m_object.size(); ++i){</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                    sizeBuffer &gt;&gt; *(itemItr) ;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                    ++itemItr ;</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                };</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                <span class="keywordtype">long</span> dataSize ;</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                sizeBuffer &gt;&gt; dataSize ;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                dataCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a2cd7f83bca7d8d74ad6f7aef13356734">setRecv</a>(rank,dataSize) ;</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                dataCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a3bb8f93f42f15ca898e73ae000b07700">startRecv</a>(rank) ;</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                ++nCompletedRecvs;</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;            }</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            <span class="keywordflow">if</span>( mapper!=NULL){</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#abe9bfef4718dcfce759381b3cc080a08">clearAfterMeshMovement</a>(*mapper);</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                <span class="keywordflow">for</span>( <span class="keyword">const</span> <span class="keyword">auto</span> &amp; visitor : m_object){</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                    visitor.second-&gt;clearAfterMeshMovement(*mapper);</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                }</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;            }</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;            <span class="comment">//  post-process data from buffer to data within classes</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;            nCompletedRecvs = 0;</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;            <span class="keywordflow">while</span> (nCompletedRecvs &lt; dataCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a54be77298edd20e0dbf35611e713d796">getRecvCount</a>()) {</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                <span class="keywordtype">int</span> rank = dataCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a0ca766c936d23473e9a559f35cc76c06">waitAnyRecv</a>();</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                <a class="code" href="classbitpit_1_1RecvBuffer.xhtml">RecvBuffer</a> &amp;dataBuffer = dataCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#ade962eb4308933d6340b822c99f5880d">getRecvBuffer</a>(rank);</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                itemItr = items[rank].begin();</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                m_kernel-&gt;<a class="code" href="classbitpit_1_1LevelSetKernel.xhtml#a40025b48f1a63005962acf2689416c98">readCommunicationBuffer</a>( recvList[rank], *itemItr, dataBuffer ) ;</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                ++itemItr ;</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;                <span class="keywordflow">for</span>( <span class="keyword">const</span> <span class="keyword">auto</span> &amp;visitor : m_object){</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                    visitor.second-&gt;readCommunicationBuffer( recvList[rank], *itemItr, dataBuffer ) ;</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                    ++itemItr ;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                }</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                ++nCompletedRecvs;</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;            }</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        }</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        sizeCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a3239d3f8a4c4177d938b677741514272">waitAllSends</a>();</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        sizeCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a7b7362405f1429422525424154daeac1">finalize</a>() ;</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        dataCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a3239d3f8a4c4177d938b677741514272">waitAllSends</a>();</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        dataCommunicator.<a class="code" href="classbitpit_1_1DataCommunicator.xhtml#a7b7362405f1429422525424154daeac1">finalize</a>() ;</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    }</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    return ;</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;}</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="preprocessor">#endif </span></div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;}</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a36a265e7d009012a8d82d958a42f1590"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a36a265e7d009012a8d82d958a42f1590">bitpit::LevelSetKernel::getCommunicator</a></div><div class="ttdeci">MPI_Comm getCommunicator() const </div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00694">levelSetKernel.cpp:694</a></div></div>
<div class="ttc" id="classbitpit_1_1RecvBuffer_xhtml"><div class="ttname"><a href="classbitpit_1_1RecvBuffer.xhtml">bitpit::RecvBuffer</a></div><div class="ttdoc">Buffer to be used for receive communications. </div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8hpp_source.xhtml#l00104">communications_buffers.hpp:104</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml_afda6d1ae96db64a5a343267100ecc975"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml#afda6d1ae96db64a5a343267100ecc975">bitpit::DataCommunicator::startSend</a></div><div class="ttdeci">void startSend(int dstRank)</div><div class="ttdef"><b>Definition:</b> <a href="communications_8cpp_source.xhtml#l00436">communications.cpp:436</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml_a7b7362405f1429422525424154daeac1"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml#a7b7362405f1429422525424154daeac1">bitpit::DataCommunicator::finalize</a></div><div class="ttdeci">void finalize()</div><div class="ttdef"><b>Definition:</b> <a href="communications_8cpp_source.xhtml#l00061">communications.cpp:61</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetOctree_xhtml"><div class="ttname"><a href="classbitpit_1_1LevelSetOctree.xhtml">bitpit::LevelSetOctree</a></div><div class="ttdoc">Implements LevelSetKernel for octree meshes. </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8hpp_source.xhtml#l00202">levelSet.hpp:202</a></div></div>
<div class="ttc" id="classbitpit_1_1PatchKernel_xhtml_a4104c9524cbf2b7eae76855f5d445dd8"><div class="ttname"><a href="classbitpit_1_1PatchKernel.xhtml#a4104c9524cbf2b7eae76855f5d445dd8">bitpit::PatchKernel::getGhostExchangeTargets</a></div><div class="ttdeci">std::unordered_map&lt; int, std::vector&lt; long &gt; &gt; &amp; getGhostExchangeTargets()</div><div class="ttdef"><b>Definition:</b> <a href="patch__kernel__parallel_8cpp_source.xhtml#l00356">patch_kernel_parallel.cpp:356</a></div></div>
<div class="ttc" id="classbitpit_1_1PatchKernel_xhtml_a18ef58972999d5660c4dfe779853a458"><div class="ttname"><a href="classbitpit_1_1PatchKernel.xhtml#a18ef58972999d5660c4dfe779853a458">bitpit::PatchKernel::getGhostExchangeSources</a></div><div class="ttdeci">std::unordered_map&lt; int, std::vector&lt; long &gt; &gt; &amp; getGhostExchangeSources()</div><div class="ttdef"><b>Definition:</b> <a href="patch__kernel__parallel_8cpp_source.xhtml#l00403">patch_kernel_parallel.cpp:403</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_af9b8c16a7ace5f03c1c11a7426dd177f"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#af9b8c16a7ace5f03c1c11a7426dd177f">bitpit::LevelSet::getSizeNarrowBand</a></div><div class="ttdeci">double getSizeNarrowBand() const </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00303">levelSet.cpp:303</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetObject_xhtml"><div class="ttname"><a href="classbitpit_1_1LevelSetObject.xhtml">bitpit::LevelSetObject</a></div><div class="ttdoc">Interface class for all objects with respect to whom the levelset function may be computed...</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8hpp_source.xhtml#l00219">levelSet.hpp:219</a></div></div>
<div class="ttc" id="classbitpit_1_1VolCartesian_xhtml"><div class="ttname"><a href="classbitpit_1_1VolCartesian.xhtml">bitpit::VolCartesian</a></div><div class="ttdoc">The VolCartesian defines a Cartesian patch. </div><div class="ttdef"><b>Definition:</b> <a href="volcartesian_8hpp_source.xhtml#l00037">volcartesian.hpp:37</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a330e22098a1bdd14e476c25cfcbb00fe"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a330e22098a1bdd14e476c25cfcbb00fe">bitpit::LevelSet::clearObject</a></div><div class="ttdeci">void clearObject()</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00180">levelSet.cpp:180</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml_a2cd7f83bca7d8d74ad6f7aef13356734"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml#a2cd7f83bca7d8d74ad6f7aef13356734">bitpit::DataCommunicator::setRecv</a></div><div class="ttdeci">void setRecv(int rank, long length=0)</div><div class="ttdef"><b>Definition:</b> <a href="communications_8cpp_source.xhtml#l00320">communications.cpp:320</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a3c86e83691f459b4c470cbde32a87b85"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a3c86e83691f459b4c470cbde32a87b85">bitpit::LevelSet::setMesh</a></div><div class="ttdeci">void setMesh(VolumeKernel *)</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00095">levelSet.cpp:95</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a946d4dd8d2d13a9c4094e2c92d191a8e"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a946d4dd8d2d13a9c4094e2c92d191a8e">bitpit::LevelSetKernel::propagateSign</a></div><div class="ttdeci">void propagateSign(std::unordered_map&lt; int, LevelSetObject * &gt;)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00287">levelSetKernel.cpp:287</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a5c8ebd5426a40696815c7c789382281d"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a5c8ebd5426a40696815c7c789382281d">bitpit::LevelSet::setPropagateSign</a></div><div class="ttdeci">void setPropagateSign(bool)</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00320">levelSet.cpp:320</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_ac9a8b7b521cac1909f5b8179f0b4eddb"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#ac9a8b7b521cac1909f5b8179f0b4eddb">bitpit::LevelSetKernel::dump</a></div><div class="ttdeci">void dump(std::fstream &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00646">levelSetKernel.cpp:646</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_ad3729f94bbbf75abbfe29b6cf32b697f"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#ad3729f94bbbf75abbfe29b6cf32b697f">bitpit::LevelSetKernel::restore</a></div><div class="ttdeci">void restore(std::fstream &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00667">levelSetKernel.cpp:667</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_ad1f432dee6bd5b55654b3a2bb5c0bb3b"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#ad1f432dee6bd5b55654b3a2bb5c0bb3b">bitpit::LevelSetKernel::getObject</a></div><div class="ttdeci">int getObject(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00133">levelSetKernel.cpp:133</a></div></div>
<div class="ttc" id="classbitpit_1_1SurfaceKernel_xhtml"><div class="ttname"><a href="classbitpit_1_1SurfaceKernel.xhtml">bitpit::SurfaceKernel</a></div><div class="ttdoc">The SurfaceKernel class provides an interface for defining surface patches. </div><div class="ttdef"><b>Definition:</b> <a href="surface__kernel_8hpp_source.xhtml#l00032">surface_kernel.hpp:32</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetCartesian_xhtml"><div class="ttname"><a href="classbitpit_1_1LevelSetCartesian.xhtml">bitpit::LevelSetCartesian</a></div><div class="ttdoc">Implements LevelSetKernel for cartesian meshes. </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8hpp_source.xhtml#l00186">levelSet.hpp:186</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_ae55daacabe2f83c5e90611d41b0bad35"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#ae55daacabe2f83c5e90611d41b0bad35">bitpit::LevelSet::getSupport</a></div><div class="ttdeci">long getSupport(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00247">levelSet.cpp:247</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_aba8ccd57fdfbdb090e18767357ee5230"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#aba8ccd57fdfbdb090e18767357ee5230">bitpit::LevelSet::getLS</a></div><div class="ttdeci">double getLS(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00220">levelSet.cpp:220</a></div></div>
<div class="ttc" id="classbitpit_1_1VolOctree_xhtml"><div class="ttname"><a href="classbitpit_1_1VolOctree.xhtml">bitpit::VolOctree</a></div><div class="ttdoc">The VolOctree defines a Octree patch. </div><div class="ttdef"><b>Definition:</b> <a href="voloctree_8hpp_source.xhtml#l00044">voloctree.hpp:44</a></div></div>
<div class="ttc" id="group__GenericIO_xhtml_gafd5fdc9c55c9dd00f4d957ac693eea98"><div class="ttname"><a href="group__GenericIO.xhtml#gafd5fdc9c55c9dd00f4d957ac693eea98">bitpit::genericIO::flushBINARY</a></div><div class="ttdeci">void flushBINARY(std::fstream &amp;str, const data_T &amp;data)</div><div class="ttdef"><b>Definition:</b> <a href="GenericIO_8tpp_source.xhtml#l00275">GenericIO.tpp:275</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_aa5ae74dcf2b8adeec0881b2185caac32"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#aa5ae74dcf2b8adeec0881b2185caac32">bitpit::LevelSet::addObject</a></div><div class="ttdeci">int addObject(SurfaceKernel *, int id=levelSetDefaults::OBJECT)</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00153">levelSet.cpp:153</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a7b3adc3a239c487c0a022719a75847e8"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a7b3adc3a239c487c0a022719a75847e8">bitpit::LevelSet::setSign</a></div><div class="ttdeci">void setSign(bool)</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00311">levelSet.cpp:311</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a40025b48f1a63005962acf2689416c98"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a40025b48f1a63005962acf2689416c98">bitpit::LevelSetKernel::readCommunicationBuffer</a></div><div class="ttdeci">void readCommunicationBuffer(const std::vector&lt; long &gt; &amp;, const long &amp;, RecvBuffer &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00790">levelSetKernel.cpp:790</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_ae0ed0283133a41ba38178940c7779cfa"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#ae0ed0283133a41ba38178940c7779cfa">bitpit::LevelSetKernel::getSign</a></div><div class="ttdeci">short getSign(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00148">levelSetKernel.cpp:148</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a708cfa6c216e2634f7396e34c4bc8bbb"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a708cfa6c216e2634f7396e34c4bc8bbb">bitpit::LevelSet::LevelSet</a></div><div class="ttdeci">LevelSet()</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00061">levelSet.cpp:61</a></div></div>
<div class="ttc" id="group__GenericIO_xhtml_gaa07df0f5bb3a3b7101a30b94bfee1460"><div class="ttname"><a href="group__GenericIO.xhtml#gaa07df0f5bb3a3b7101a30b94bfee1460">bitpit::genericIO::absorbBINARY</a></div><div class="ttdeci">void absorbBINARY(std::fstream &amp;str, data_T &amp;data)</div><div class="ttdef"><b>Definition:</b> <a href="GenericIO_8tpp_source.xhtml#l00825">GenericIO.tpp:825</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a701ae67ac3235132c867ed57ab96d890"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a701ae67ac3235132c867ed57ab96d890">bitpit::LevelSet::communicate</a></div><div class="ttdeci">void communicate(std::unordered_map&lt; int, std::vector&lt; long &gt;&gt; &amp;, std::unordered_map&lt; int, std::vector&lt; long &gt;&gt; &amp;, std::vector&lt; adaption::Info &gt; const *mapper=NULL)</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00511">levelSet.cpp:511</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a5d7dd747488384775a2aabd2282516b0"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a5d7dd747488384775a2aabd2282516b0">bitpit::LevelSet::~LevelSet</a></div><div class="ttdeci">~LevelSet()</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00077">levelSet.cpp:77</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a5b0ba2aed1c754043bf5a7aec4c88794"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a5b0ba2aed1c754043bf5a7aec4c88794">bitpit::LevelSetKernel::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00589">levelSetKernel.cpp:589</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a25a4169fb20d7270d6bf1b41b6466147"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a25a4169fb20d7270d6bf1b41b6466147">bitpit::LevelSet::isInNarrowBand</a></div><div class="ttdeci">bool isInNarrowBand(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00295">levelSet.cpp:295</a></div></div>
<div class="ttc" id="classbitpit_1_1CommunicationBuffer_xhtml_a7dfff6c6c60d80fb55358df63560f9c3"><div class="ttname"><a href="classbitpit_1_1CommunicationBuffer.xhtml#a7dfff6c6c60d80fb55358df63560f9c3">bitpit::CommunicationBuffer::capacity</a></div><div class="ttdeci">size_t capacity() const </div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8tpp_source.xhtml#l00066">communications_buffers.tpp:66</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a4168291bad279c958b90fddc8b202ecc"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a4168291bad279c958b90fddc8b202ecc">bitpit::LevelSet::compute</a></div><div class="ttdeci">void compute()</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00345">levelSet.cpp:345</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml_a54be77298edd20e0dbf35611e713d796"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml#a54be77298edd20e0dbf35611e713d796">bitpit::DataCommunicator::getRecvCount</a></div><div class="ttdeci">int getRecvCount()</div><div class="ttdef"><b>Definition:</b> <a href="communications_8cpp_source.xhtml#l00400">communications.cpp:400</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml_a0ca766c936d23473e9a559f35cc76c06"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml#a0ca766c936d23473e9a559f35cc76c06">bitpit::DataCommunicator::waitAnyRecv</a></div><div class="ttdeci">int waitAnyRecv()</div><div class="ttdef"><b>Definition:</b> <a href="communications_8cpp_source.xhtml#l00564">communications.cpp:564</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml_a3239d3f8a4c4177d938b677741514272"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml#a3239d3f8a4c4177d938b677741514272">bitpit::DataCommunicator::waitAllSends</a></div><div class="ttdeci">void waitAllSends()</div><div class="ttdef"><b>Definition:</b> <a href="communications_8cpp_source.xhtml#l00544">communications.cpp:544</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a4247b7f2c88b4302868449a7eb8e4fd8"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a4247b7f2c88b4302868449a7eb8e4fd8">bitpit::LevelSetKernel::writeCommunicationBuffer</a></div><div class="ttdeci">void writeCommunicationBuffer(const std::vector&lt; long &gt; &amp;, SendBuffer &amp;, SendBuffer &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00754">levelSetKernel.cpp:754</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml_a3d532bbbccb082130d60f4b3f52017b1"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml#a3d532bbbccb082130d60f4b3f52017b1">bitpit::DataCommunicator::getSendBuffer</a></div><div class="ttdeci">SendBuffer &amp; getSendBuffer(int rank)</div><div class="ttdef"><b>Definition:</b> <a href="communications_8cpp_source.xhtml#l00411">communications.cpp:411</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a8af81b96c7c37141cb780fe6d242daba"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a8af81b96c7c37141cb780fe6d242daba">bitpit::LevelSetKernel::setSizeNarrowBand</a></div><div class="ttdeci">void setSizeNarrowBand(double)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00185">levelSetKernel.cpp:185</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_abe9bfef4718dcfce759381b3cc080a08"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#abe9bfef4718dcfce759381b3cc080a08">bitpit::LevelSetKernel::clearAfterMeshMovement</a></div><div class="ttdeci">void clearAfterMeshMovement(const std::vector&lt; adaption::Info &gt; &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00597">levelSetKernel.cpp:597</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a42e8badfa3d23dbdf83594b4f6d07fc1"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a42e8badfa3d23dbdf83594b4f6d07fc1">bitpit::LevelSet::getObject</a></div><div class="ttdeci">int getObject(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00238">levelSet.cpp:238</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a00c3c7c18a6075a9713b2289656e41a3"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a00c3c7c18a6075a9713b2289656e41a3">bitpit::LevelSetKernel::getLS</a></div><div class="ttdeci">double getLS(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00103">levelSetKernel.cpp:103</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a66f34d2c1fd4bdea07d153aa2b19b203"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a66f34d2c1fd4bdea07d153aa2b19b203">bitpit::LevelSetKernel::isInNarrowBand</a></div><div class="ttdeci">bool isInNarrowBand(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00163">levelSetKernel.cpp:163</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a24575637dacead8fb2c1ad27ad7a6be7"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a24575637dacead8fb2c1ad27ad7a6be7">bitpit::LevelSetKernel::assureMPI</a></div><div class="ttdeci">bool assureMPI()</div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00733">levelSetKernel.cpp:733</a></div></div>
<div class="ttc" id="classbitpit_1_1SurfUnstructured_xhtml"><div class="ttname"><a href="classbitpit_1_1SurfUnstructured.xhtml">bitpit::SurfUnstructured</a></div><div class="ttdoc">The SurfUnstructured class defines an unstructured surface triangulation. </div><div class="ttdef"><b>Definition:</b> <a href="surfunstructured_8hpp_source.xhtml#l00036">surfunstructured.hpp:36</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_aeba34de2f04469a7fc91466d4ff7998a"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#aeba34de2f04469a7fc91466d4ff7998a">bitpit::LevelSet::getGradient</a></div><div class="ttdeci">std::array&lt; double, 3 &gt; getGradient(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00229">levelSet.cpp:229</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetSegmentation_xhtml"><div class="ttname"><a href="classbitpit_1_1LevelSetSegmentation.xhtml">bitpit::LevelSetSegmentation</a></div><div class="ttdoc">Implements visitor pattern fo segmentated geometries. </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8hpp_source.xhtml#l00253">levelSet.hpp:253</a></div></div>
<div class="ttc" id="classbitpit_1_1SendBuffer_xhtml"><div class="ttname"><a href="classbitpit_1_1SendBuffer.xhtml">bitpit::SendBuffer</a></div><div class="ttdoc">Buffer to be used for send communications. </div><div class="ttdef"><b>Definition:</b> <a href="communications__buffers_8hpp_source.xhtml#l00090">communications_buffers.hpp:90</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml_a80e3890ae05ee01549b8be035dc8b482"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml#a80e3890ae05ee01549b8be035dc8b482">bitpit::DataCommunicator::setSend</a></div><div class="ttdeci">void setSend(int rank, long length=0)</div><div class="ttdef"><b>Definition:</b> <a href="communications_8cpp_source.xhtml#l00300">communications.cpp:300</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_ab7c5954b25fa16ebb3a6c2e80def916f"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#ab7c5954b25fa16ebb3a6c2e80def916f">bitpit::LevelSet::setSizeNarrowBand</a></div><div class="ttdeci">void setSizeNarrowBand(double)</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00336">levelSet.cpp:336</a></div></div>
<div class="ttc" id="group__MathFunctions_xhtml_ga119be619426d7a672ab67296a32f04e9"><div class="ttname"><a href="group__MathFunctions.xhtml#ga119be619426d7a672ab67296a32f04e9">max</a></div><div class="ttdeci">std::array&lt; T, d &gt; max(const std::array&lt; T, d &gt; &amp;x, const std::array&lt; T, d &gt; &amp;y)</div><div class="ttdef"><b>Definition:</b> <a href="MathOperators__array_8tpp_source.xhtml#l00306">MathOperators_array.tpp:306</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml_a3bb8f93f42f15ca898e73ae000b07700"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml#a3bb8f93f42f15ca898e73ae000b07700">bitpit::DataCommunicator::startRecv</a></div><div class="ttdeci">void startRecv(int srcRank)</div><div class="ttdef"><b>Definition:</b> <a href="communications_8cpp_source.xhtml#l00472">communications.cpp:472</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a17ac9a87e45c5f160316adfa4f5113de"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a17ac9a87e45c5f160316adfa4f5113de">bitpit::LevelSetKernel::getSizeNarrowBand</a></div><div class="ttdeci">double getSizeNarrowBand() const </div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00177">levelSetKernel.cpp:177</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_ab3d9782b45510606ec32bd74aeb7786f"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#ab3d9782b45510606ec32bd74aeb7786f">bitpit::LevelSetKernel::getMesh</a></div><div class="ttdeci">VolumeKernel * getMesh() const </div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00093">levelSetKernel.cpp:93</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a66094ad89698e5f32c495d240376dfc1"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a66094ad89698e5f32c495d240376dfc1">bitpit::LevelSet::restore</a></div><div class="ttdeci">void restore(std::fstream &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00462">levelSet.cpp:462</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_ac88aaa9d09663ecd1938667c7dcae5a6"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#ac88aaa9d09663ecd1938667c7dcae5a6">bitpit::LevelSet::exchangeGhosts</a></div><div class="ttdeci">void exchangeGhosts()</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00494">levelSet.cpp:494</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a9967d2d63cf0c4695248ce71cb5edf39"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a9967d2d63cf0c4695248ce71cb5edf39">bitpit::LevelSet::getObjectAndSupport</a></div><div class="ttdeci">void getObjectAndSupport(const long &amp;, int &amp;, long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00264">levelSet.cpp:264</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a0479c0ae3f673e2ef5c93602ed754d22"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a0479c0ae3f673e2ef5c93602ed754d22">bitpit::LevelSetKernel::filterOutsideNarrowBand</a></div><div class="ttdeci">void filterOutsideNarrowBand(double)</div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00623">levelSetKernel.cpp:623</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a1a5477ad34a671de362c3b81d64f8655"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a1a5477ad34a671de362c3b81d64f8655">bitpit::LevelSet::update</a></div><div class="ttdeci">void update(const std::vector&lt; adaption::Info &gt; &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00374">levelSet.cpp:374</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a7a883d1b59925413e2134843decd2ece"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a7a883d1b59925413e2134843decd2ece">bitpit::LevelSet::dump</a></div><div class="ttdeci">void dump(std::fstream &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00441">levelSet.cpp:441</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml">bitpit::DataCommunicator</a></div><div class="ttdoc">The DataCommunicator class provides the infrastructure needed to exchange data among processors...</div><div class="ttdef"><b>Definition:</b> <a href="communications_8hpp_source.xhtml#l00040">communications.hpp:40</a></div></div>
<div class="ttc" id="classbitpit_1_1VolumeKernel_xhtml"><div class="ttname"><a href="classbitpit_1_1VolumeKernel.xhtml">bitpit::VolumeKernel</a></div><div class="ttdoc">The VolumeKernel class provides an interface for defining volume patches. </div><div class="ttdef"><b>Definition:</b> <a href="volume__kernel_8hpp_source.xhtml#l00032">volume_kernel.hpp:32</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ac9c385c32dc5a0331c601b1b07ab9952"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ac9c385c32dc5a0331c601b1b07ab9952">bitpit::log::cout</a></div><div class="ttdeci">Logger &amp; cout()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01280">logger.cpp:1280</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml_a1c84dc83b8141938a8f62a38247e77b5"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml#a1c84dc83b8141938a8f62a38247e77b5">bitpit::DataCommunicator::setTag</a></div><div class="ttdeci">void setTag(int tag)</div><div class="ttdef"><b>Definition:</b> <a href="communications_8cpp_source.xhtml#l00075">communications.cpp:75</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a75a142c0c3da7f30657dd282712fa710"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a75a142c0c3da7f30657dd282712fa710">bitpit::LevelSet::getSign</a></div><div class="ttdeci">short getSign(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00286">levelSet.cpp:286</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_ab021610d3ddf3fab7eee983fe5de8e6a"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#ab021610d3ddf3fab7eee983fe5de8e6a">bitpit::LevelSet::setPropagateValue</a></div><div class="ttdeci">void setPropagateValue(bool)</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00328">levelSet.cpp:328</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSet_xhtml_a33ea4d6c4efd868df48067d52bed77d1"><div class="ttname"><a href="classbitpit_1_1LevelSet.xhtml#a33ea4d6c4efd868df48067d52bed77d1">bitpit::LevelSet::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdef"><b>Definition:</b> <a href="levelSet_8cpp_source.xhtml#l00167">levelSet.cpp:167</a></div></div>
<div class="ttc" id="classbitpit_1_1DataCommunicator_xhtml_ade962eb4308933d6340b822c99f5880d"><div class="ttname"><a href="classbitpit_1_1DataCommunicator.xhtml#ade962eb4308933d6340b822c99f5880d">bitpit::DataCommunicator::getRecvBuffer</a></div><div class="ttdeci">RecvBuffer &amp; getRecvBuffer(int rank)</div><div class="ttdef"><b>Definition:</b> <a href="communications_8cpp_source.xhtml#l00424">communications.cpp:424</a></div></div>
<div class="ttc" id="classbitpit_1_1LevelSetKernel_xhtml_a27ab641eb7b79b49331c6dc8844bfb13"><div class="ttname"><a href="classbitpit_1_1LevelSetKernel.xhtml#a27ab641eb7b79b49331c6dc8844bfb13">bitpit::LevelSetKernel::getGradient</a></div><div class="ttdeci">std::array&lt; double, 3 &gt; getGradient(const long &amp;) const </div><div class="ttdef"><b>Definition:</b> <a href="levelSetKernel_8cpp_source.xhtml#l00118">levelSetKernel.cpp:118</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:24 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

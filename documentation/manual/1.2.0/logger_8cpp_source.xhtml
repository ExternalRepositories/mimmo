
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - src/IO/logger.cpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_fae119eb913a40fe8ed97cde8b98911e.xhtml">IO</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">logger.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">*  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">*  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">*  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">*  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">*  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">*  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">*  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">*  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">*  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">*  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">*  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;cctype&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;chrono&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;ctime&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;ostream&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;sys/types.h&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;sys/stat.h&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;logger.hpp&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span>bitpit{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a7e0a42cb9388a112de8defe194901c15">   55</a></span>&#160;<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a7e0a42cb9388a112de8defe194901c15">LoggerBuffer::LoggerBuffer</a>(std::size_t bufferSize)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    : m_buffer(bufferSize + 1), m_context(<span class="stringliteral">&quot;&quot;</span>), m_padding(<span class="stringliteral">&quot;&quot;</span>),</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    m_consoleEnabled(false), m_console(&amp;std::cout), m_consolePrefix(<span class="stringliteral">&quot;&quot;</span>),</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    m_fileEnabled(false), m_file(nullptr), m_filePrefix(<span class="stringliteral">&quot;&quot;</span>)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="comment">// Set the buffer</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">char</span> *bufferBegin = &amp;m_buffer.front();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    setp(bufferBegin, bufferBegin + m_buffer.size() - 1);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="comment">// Set console data</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a6ad1215b28d36810e49fa2a44ff8892b">setConsoleEnabled</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="comment">// Set log file data</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a186ed3d5cd11f52fbe9f4d5324167d4f">setFileEnabled</a>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a37de3dc0c2f008d9cef3b93f07de630f">   74</a></span>&#160;<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a37de3dc0c2f008d9cef3b93f07de630f">LoggerBuffer::~LoggerBuffer</a>()</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    sync();</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;LoggerBuffer::int_type LoggerBuffer::overflow(int_type character)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">if</span> (character != traits_type::eof()) {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="comment">// Write the charater to the buffer and then increment pptr() by</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="comment">// calling pbump(1). It&#39;s always safe to write thecharater to the</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="comment">// buffer because we reserved an extra char at the end of our buffer</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="comment">// in the constructor.</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        assert(std::less_equal&lt;char *&gt;()(pptr(), epptr()));</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        *pptr() = character;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        pbump(1);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="comment">// Flush the stream</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">if</span> (sync() == 0) {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">return</span> character;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span> traits_type::eof();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keywordtype">int</span> LoggerBuffer::sync()</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;{</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">flush</a>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">  127</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">LoggerBuffer::flush</a>(<span class="keywordtype">bool</span> terminate)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;{</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordtype">int</span> status = 0;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">if</span> (pptr() == pbase()) {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">return</span> status;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="comment">// Identify line breakers</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    std::vector&lt;char *&gt; linePointers;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    linePointers.push_back(pbase());</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">char</span> *p = pbase(), *e = pptr() - 1; p != e; ++p) {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">if</span> (*p == <span class="charliteral">&#39;\n&#39;</span>) {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            linePointers.push_back(p + 1);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    linePointers.push_back(pptr());</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="comment">// Detect if a new line must be added at the end</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    terminate = (terminate &amp;&amp; *(linePointers.back() - 1) != <span class="charliteral">&#39;\n&#39;</span>);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="comment">// Move the internal pointer</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    std::ptrdiff_t nCharacters = pptr() - pbase();</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    pbump(- nCharacters);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="comment">// Write all lines</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; linePointers.size() - 1; ++i) {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordtype">char</span> *firstCharacter = linePointers[i];</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordtype">char</span> *lastCharacter  = linePointers[i + 1];</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        std::ptrdiff_t lineSize = lastCharacter - firstCharacter;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="comment">// Write to the console</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">if</span> (m_console &amp;&amp; m_consoleEnabled) {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">if</span> (!m_consolePrefix.empty()) {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                *m_console &lt;&lt; m_consolePrefix &lt;&lt; <span class="stringliteral">&quot; :: &quot;</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">if</span> (!m_context.empty()) {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                *m_console &lt;&lt; m_context &lt;&lt; <span class="stringliteral">&quot; :: &quot;</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keywordflow">if</span> (!m_padding.empty()) {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                *m_console &lt;&lt; m_padding;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            m_console-&gt;write(firstCharacter, lineSize);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="keywordflow">if</span> ((m_console-&gt;rdstate() &amp; std::ifstream::failbit ) != 0) {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                status = -1;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="keywordflow">if</span> (terminate &amp;&amp; lastCharacter == linePointers.back()) {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                *m_console &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="comment">// Write to file</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordflow">if</span> (m_file &amp;&amp; m_fileEnabled &amp;&amp; m_file-&gt;is_open()) {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            *m_file &lt;&lt; <span class="stringliteral">&quot;[&quot;</span> + getTimestamp() + <span class="stringliteral">&quot;] &quot;</span>;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keywordflow">if</span> (!m_filePrefix.empty()) {</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                *m_file &lt;&lt; m_filePrefix &lt;&lt; <span class="stringliteral">&quot; :: &quot;</span>;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            }</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="keywordflow">if</span> (!m_context.empty()) {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                *m_file &lt;&lt; m_context + <span class="stringliteral">&quot; :: &quot;</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">if</span> (!m_padding.empty()) {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                *m_file &lt;&lt; m_padding;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            }</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            m_file-&gt;write(firstCharacter, lineSize);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="keywordflow">if</span> ((m_file-&gt;rdstate() &amp; std::ifstream::failbit ) != 0) {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                status = -1;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <span class="keywordflow">if</span> (terminate &amp;&amp; lastCharacter == linePointers.back()) {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                *m_file &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            }</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    }</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">return</span> status;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;}</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a6ad1215b28d36810e49fa2a44ff8892b">  216</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a6ad1215b28d36810e49fa2a44ff8892b">LoggerBuffer::setConsoleEnabled</a>(<span class="keywordtype">bool</span> enabled)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;{</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">flush</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    m_consoleEnabled = enabled;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#af19225bb78c87d26602470e292b13c41">  228</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#af19225bb78c87d26602470e292b13c41">LoggerBuffer::setConsoleStream</a>(std::ostream *console)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;{</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">flush</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    m_console = console;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a9d83968f3db3cea15fce47ce0bde7156">  240</a></span>&#160;std::ostream &amp; <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a9d83968f3db3cea15fce47ce0bde7156">LoggerBuffer::getConsoleStream</a>()</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;{</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordflow">return</span> *m_console;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;}</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#af4d848f6950514bf1dcd2bbcd93a934c">  251</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#af4d848f6950514bf1dcd2bbcd93a934c">LoggerBuffer::setConsolePrefix</a>(<span class="keyword">const</span> std::string &amp;prefix)</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;{</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">flush</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    m_consolePrefix = prefix;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;}</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a3be415797589d8a01744ff3d4be9bfb9">  263</a></span>&#160;std::string <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a3be415797589d8a01744ff3d4be9bfb9">LoggerBuffer::getConsolePrefix</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">return</span> m_consolePrefix;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;}</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a186ed3d5cd11f52fbe9f4d5324167d4f">  277</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a186ed3d5cd11f52fbe9f4d5324167d4f">LoggerBuffer::setFileEnabled</a>(<span class="keywordtype">bool</span> enabled)</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;{</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">flush</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    m_fileEnabled = enabled;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;}</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a6823c14ac1e636d62d34dad12b807abb">  289</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a6823c14ac1e636d62d34dad12b807abb">LoggerBuffer::setFileStream</a>(std::ofstream *file)</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;{</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">flush</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    m_file = file;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;}</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a0324db441e8d6c7e29adffa501298f89">  301</a></span>&#160;std::ofstream &amp; <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a0324db441e8d6c7e29adffa501298f89">LoggerBuffer::getFileStream</a>()</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;{</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordflow">return</span> *m_file;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;}</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a423312626a977e7314db07b93733854f">  312</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a423312626a977e7314db07b93733854f">LoggerBuffer::setFilePrefix</a>(<span class="keyword">const</span> std::string &amp;prefix)</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;{</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">flush</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    m_filePrefix = prefix;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;}</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a2dd7dc31eaf58321b4ffd0b2a8b53042">  324</a></span>&#160;std::string <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a2dd7dc31eaf58321b4ffd0b2a8b53042">LoggerBuffer::getFilePrefix</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keywordflow">return</span> m_filePrefix;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;}</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a3f6b86ad62f5177fa864f9b89e1c5d74">  334</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a3f6b86ad62f5177fa864f9b89e1c5d74">LoggerBuffer::setContext</a>(<span class="keyword">const</span> std::string &amp;context)</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;{</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">flush</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    m_context = context;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;}</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml#a17653d6825237bb12370a8f7dc885d57">  346</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a17653d6825237bb12370a8f7dc885d57">LoggerBuffer::setPadding</a>(<span class="keyword">const</span> std::string &amp;padding)</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;{</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">flush</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    m_padding = padding;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;}</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keyword">const</span> std::string LoggerBuffer::getTimestamp()<span class="keyword"> const</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keyword">auto</span> currentClock = std::chrono::system_clock::now();</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    std::time_t currentTime = std::chrono::system_clock::to_time_t(currentClock);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keyword">auto</span> seconds = std::chrono::duration_cast&lt;std::chrono::seconds&gt;(currentClock.time_since_epoch());</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keyword">auto</span> millisecs = std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(currentClock.time_since_epoch() - seconds);</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    std::ostringstream millisecsConverter;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    millisecsConverter &lt;&lt; (millisecs.count());</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordtype">char</span> buffer[80];</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    strftime(buffer, 80, <span class="stringliteral">&quot;%Y-%m-%d %H:%M:%S&quot;</span>, localtime(&amp;currentTime));</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    std::string timestamp(buffer);</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    timestamp += <span class="stringliteral">&quot;.&quot;</span> + millisecsConverter.str();</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keywordflow">return</span> timestamp;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;}</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#af6bb2075760e6d09f8262873d25d9c73">  398</a></span>&#160;<a class="code" href="classbitpit_1_1Logger.xhtml#af6bb2075760e6d09f8262873d25d9c73">Logger::Logger</a>(std::ostream *consoleStream, std::ofstream *fileStream,</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank)</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    : m_nProcessors(nProcessors), m_rank(rank), m_buffer(256),</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    m_priority(log::NORMAL), m_visibility(log::MASTER),</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    m_consoleVerbosity(log::NORMAL), m_fileVerbosity(log::NORMAL)</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;{</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="comment">// Assigne the buffer to the stream</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    rdbuf(&amp;m_buffer);</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="comment">// Set buffer data</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#a316c15d7bbddfac0e8b9669728b6764c">setConsoleStream</a>(consoleStream);</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#a8b07b17211ee498d3e49e68942178bd9">setFileStream</a>(fileStream);</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="comment">// Set parallel data</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keywordflow">if</span> (m_nProcessors &gt; 1) {</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <span class="keywordtype">int</span> nDigits = ceil(log10(m_nProcessors));</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        std::ostringstream convert;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        convert &lt;&lt; std::setw(nDigits) &lt;&lt; m_rank;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        std::string rankPrefix = <span class="stringliteral">&quot;#&quot;</span> + convert.str();</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#af4d848f6950514bf1dcd2bbcd93a934c">setConsolePrefix</a>(rankPrefix);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a423312626a977e7314db07b93733854f">setFilePrefix</a>(rankPrefix);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#af4d848f6950514bf1dcd2bbcd93a934c">setConsolePrefix</a>(<span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a423312626a977e7314db07b93733854f">setFilePrefix</a>(<span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    }</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <span class="comment">// Reset verbosity</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#aae8da3905cd171f25652ef613c2b8591">setConsoleVerbosity</a>(m_consoleVerbosity);</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#a5abe802299cc02298e7aef814a196eca">setFileVerbosity</a>(m_fileVerbosity);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="comment">// Set logger data</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#a4be8ae0395ce56a44fab42ac5841a5af">setPriority</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaa4c09f2c05d88c37ce54a5bc74d6a4071">log::NORMAL</a>);</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#ac2a2ab63f8db95cb6b3b8c65303313a4">setVisibility</a>(log::MASTER);</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;}</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00439"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a316c15d7bbddfac0e8b9669728b6764c">  439</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a316c15d7bbddfac0e8b9669728b6764c">Logger::setConsoleStream</a>(std::ostream *console)</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;{</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#af19225bb78c87d26602470e292b13c41">setConsoleStream</a>(console);</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;}</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div>
<div class="line"><a name="l00449"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#af73280fb419f31aef78c28f4799dc8c0">  449</a></span>&#160;std::ostream &amp; <a class="code" href="classbitpit_1_1Logger.xhtml#af73280fb419f31aef78c28f4799dc8c0">Logger::getConsoleStream</a>()</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;{</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keywordflow">return</span> m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a9d83968f3db3cea15fce47ce0bde7156">getConsoleStream</a>();</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;}</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div>
<div class="line"><a name="l00459"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a8b07b17211ee498d3e49e68942178bd9">  459</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a8b07b17211ee498d3e49e68942178bd9">Logger::setFileStream</a>(std::ofstream *file)</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;{</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a6823c14ac1e636d62d34dad12b807abb">setFileStream</a>(file);</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;}</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div>
<div class="line"><a name="l00470"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#ad6f1a11d31b1459a5efd67dcdf926b41">  470</a></span>&#160;std::ofstream &amp; <a class="code" href="classbitpit_1_1Logger.xhtml#ad6f1a11d31b1459a5efd67dcdf926b41">Logger::getFileStream</a>()</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;{</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="keywordflow">return</span> m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a0324db441e8d6c7e29adffa501298f89">getFileStream</a>();</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;}</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div>
<div class="line"><a name="l00480"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a4be8ae0395ce56a44fab42ac5841a5af">  480</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a4be8ae0395ce56a44fab42ac5841a5af">Logger::setPriority</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> priority)</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;{</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    m_priority = priority;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#aae8da3905cd171f25652ef613c2b8591">setConsoleVerbosity</a>(m_consoleVerbosity);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#a5abe802299cc02298e7aef814a196eca">setFileVerbosity</a>(m_fileVerbosity);</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;}</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div>
<div class="line"><a name="l00493"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#afa2aa1cf9504752dbbb53ec6bdd62552">  493</a></span>&#160;<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> <a class="code" href="classbitpit_1_1Logger.xhtml#afa2aa1cf9504752dbbb53ec6bdd62552">Logger::getPriority</a>()</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;{</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <span class="keywordflow">return</span> m_priority;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;}</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div>
<div class="line"><a name="l00503"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#ac2a2ab63f8db95cb6b3b8c65303313a4">  503</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#ac2a2ab63f8db95cb6b3b8c65303313a4">Logger::setVisibility</a>(log::Visibility visibility)</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;{</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    m_visibility = visibility;</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#aae8da3905cd171f25652ef613c2b8591">setConsoleVerbosity</a>(m_consoleVerbosity);</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#a5abe802299cc02298e7aef814a196eca">setFileVerbosity</a>(m_fileVerbosity);</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;}</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div>
<div class="line"><a name="l00516"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#af487a0a5285050093f678f8b303d6f9b">  516</a></span>&#160;log::Visibility <a class="code" href="classbitpit_1_1Logger.xhtml#af487a0a5285050093f678f8b303d6f9b">Logger::getVisibility</a>()</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;{</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keywordflow">return</span> m_visibility;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;}</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div>
<div class="line"><a name="l00527"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#aa4ce8c829fa16686e87df554fb72e7b0">  527</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aa4ce8c829fa16686e87df554fb72e7b0">Logger::setVerbosities</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity)</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;{</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#aae8da3905cd171f25652ef613c2b8591">setConsoleVerbosity</a>(verbosity);</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#a5abe802299cc02298e7aef814a196eca">setFileVerbosity</a>(verbosity);</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;}</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div>
<div class="line"><a name="l00538"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#aae8da3905cd171f25652ef613c2b8591">  538</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aae8da3905cd171f25652ef613c2b8591">Logger::setConsoleVerbosity</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity)</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;{</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    m_consoleVerbosity = verbosity;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keywordflow">if</span> (m_consoleVerbosity == <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaa53c0f5e20dcbeb9a1af06f16a3cba943">log::QUIET</a>) {</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a6ad1215b28d36810e49fa2a44ff8892b">setConsoleEnabled</a>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (m_visibility == log::MASTER &amp;&amp; (m_rank != 0)) {</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a6ad1215b28d36810e49fa2a44ff8892b">setConsoleEnabled</a>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a6ad1215b28d36810e49fa2a44ff8892b">setConsoleEnabled</a>(m_consoleVerbosity &gt;= m_priority);</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    }</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;}</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div>
<div class="line"><a name="l00555"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#aa20656dfdf4319466c44ed719343f09f">  555</a></span>&#160;<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> <a class="code" href="classbitpit_1_1Logger.xhtml#aa20656dfdf4319466c44ed719343f09f">Logger::getConsoleVerbosity</a>()</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;{</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="keywordflow">return</span> m_consoleVerbosity;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;}</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div>
<div class="line"><a name="l00565"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a7cd4cb5acf6dd2d075e3ba3375ff363d">  565</a></span>&#160;std::string <a class="code" href="classbitpit_1_1Logger.xhtml#a7cd4cb5acf6dd2d075e3ba3375ff363d">Logger::getConsolePrefix</a>()</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;{</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <span class="keywordflow">return</span> m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a3be415797589d8a01744ff3d4be9bfb9">getConsolePrefix</a>();</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;}</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div>
<div class="line"><a name="l00575"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a5abe802299cc02298e7aef814a196eca">  575</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a5abe802299cc02298e7aef814a196eca">Logger::setFileVerbosity</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity)</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;{</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    m_fileVerbosity = verbosity;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keywordtype">bool</span> isFileEnabled;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="keywordflow">if</span> (m_fileVerbosity == <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaa53c0f5e20dcbeb9a1af06f16a3cba943">log::QUIET</a>) {</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        isFileEnabled = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (m_visibility == log::MASTER &amp;&amp; (m_rank != 0)) {</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        isFileEnabled = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        isFileEnabled = (m_fileVerbosity &gt;= m_priority);</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    }</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a186ed3d5cd11f52fbe9f4d5324167d4f">setFileEnabled</a>(isFileEnabled);</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;}</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div>
<div class="line"><a name="l00595"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a892a8608b62dbd52784f66cf28523a1c">  595</a></span>&#160;<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> <a class="code" href="classbitpit_1_1Logger.xhtml#a892a8608b62dbd52784f66cf28523a1c">Logger::getFileVerbosity</a>()</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;{</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <span class="keywordflow">return</span> m_fileVerbosity;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;}</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div>
<div class="line"><a name="l00605"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#aa5e8841acb06811d2f0312d14629306f">  605</a></span>&#160;std::string <a class="code" href="classbitpit_1_1Logger.xhtml#aa5e8841acb06811d2f0312d14629306f">Logger::getFilePrefix</a>()</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;{</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keywordflow">return</span> m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a2dd7dc31eaf58321b4ffd0b2a8b53042">getFilePrefix</a>();</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;}</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div>
<div class="line"><a name="l00615"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#ae967bedd4f07d6b77d71db668bbbd09a">  615</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#ae967bedd4f07d6b77d71db668bbbd09a">Logger::setContext</a>(<span class="keyword">const</span> std::string &amp;context)</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;{</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    m_context = context;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a3f6b86ad62f5177fa864f9b89e1c5d74">setContext</a>(m_context);</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;}</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div>
<div class="line"><a name="l00627"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a46a814ead4c050cfa483a4495785852d">  627</a></span>&#160;std::string <a class="code" href="classbitpit_1_1Logger.xhtml#a46a814ead4c050cfa483a4495785852d">Logger::getContext</a>()</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;{</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    <span class="keywordflow">return</span> m_context;</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;}</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div>
<div class="line"><a name="l00637"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a7bfaf377e5fdbe623f21b25a0100d983">  637</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a7bfaf377e5fdbe623f21b25a0100d983">Logger::setIndentation</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta)</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;{</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    m_indentation = <a class="code" href="group__MathFunctions.xhtml#ga119be619426d7a672ab67296a32f04e9">std::max</a>(m_indentation + delta, 0);</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    std::string padding = std::string(m_indentation, <span class="charliteral">&#39; &#39;</span>);</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    m_buffer.<a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a17653d6825237bb12370a8f7dc885d57">setPadding</a>(padding);</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;}</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div>
<div class="line"><a name="l00650"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#adea6c4d257861e35f4ba6460b2100ae6">  650</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Logger.xhtml#adea6c4d257861e35f4ba6460b2100ae6">Logger::getIndentation</a>()</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;{</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    <span class="keywordflow">return</span> m_indentation;</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;}</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;</div>
<div class="line"><a name="l00660"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a5a17610617c5c312b52b98b90b542f43">  660</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a5a17610617c5c312b52b98b90b542f43">Logger::getProcessorCount</a>()</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;{</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    <span class="keywordflow">return</span> m_nProcessors;</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;}</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div>
<div class="line"><a name="l00670"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a515d3e2e03ab72d9a69bf378ccb5a065">  670</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a515d3e2e03ab72d9a69bf378ccb5a065">Logger::getRank</a>()</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;{</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    <span class="keywordflow">return</span> m_rank;</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;}</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;</div>
<div class="line"><a name="l00680"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">  680</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">Logger::println</a>(<span class="keyword">const</span> std::string &amp;line)</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;{</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">print</a>(line + <span class="charliteral">&#39;\n&#39;</span>);</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;}</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;</div>
<div class="line"><a name="l00691"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#adfaeee83c07fc5141797662422cf8f15">  691</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">Logger::println</a>(<span class="keyword">const</span> std::string &amp;line, <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> priority)</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;{</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">print</a>(line + <span class="charliteral">&#39;\n&#39;</span>, priority);</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;}</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;</div>
<div class="line"><a name="l00702"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a02b0aa4e23c5f98ba192eec0bee32226">  702</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">Logger::println</a>(<span class="keyword">const</span> std::string &amp;line, log::Visibility visibility)</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;{</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">print</a>(line + <span class="charliteral">&#39;\n&#39;</span>, visibility);</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;}</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div>
<div class="line"><a name="l00714"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a0562004b9d11a75226bf11dadea58115">  714</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">Logger::println</a>(<span class="keyword">const</span> std::string &amp;line, <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> priority, log::Visibility visibility)</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;{</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">print</a>(line + <span class="charliteral">&#39;\n&#39;</span>, priority, visibility);</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;}</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div>
<div class="line"><a name="l00724"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">  724</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">Logger::print</a>(<span class="keyword">const</span> std::string &amp;message)</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;{</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    (*this) &lt;&lt; message;</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;}</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div>
<div class="line"><a name="l00735"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a6ea8597b252724a16e3cfc37d32789af">  735</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">Logger::print</a>(<span class="keyword">const</span> std::string &amp;message, <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> priority)</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;{</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#a4be8ae0395ce56a44fab42ac5841a5af">setPriority</a>(priority);</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    (*this) &lt;&lt; message;</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;}</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div>
<div class="line"><a name="l00748"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a580fb7b7c04d9d4fc292be4f95b4bb9b">  748</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">Logger::print</a>(<span class="keyword">const</span> std::string &amp;message, log::Visibility visibility)</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;{</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#ac2a2ab63f8db95cb6b3b8c65303313a4">setVisibility</a>(visibility);</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    (*this) &lt;&lt; message;</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;}</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;</div>
<div class="line"><a name="l00762"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml#a4df225201b9d486783866de7bc1e5127">  762</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">Logger::print</a>(<span class="keyword">const</span> std::string &amp;message, <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> priority, log::Visibility visibility)</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;{</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> prevPriority   = <a class="code" href="classbitpit_1_1Logger.xhtml#afa2aa1cf9504752dbbb53ec6bdd62552">getPriority</a>();</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;    log::Visibility prevVisibility = <a class="code" href="classbitpit_1_1Logger.xhtml#af487a0a5285050093f678f8b303d6f9b">getVisibility</a>();</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#a4be8ae0395ce56a44fab42ac5841a5af">setPriority</a>(priority);</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#ac2a2ab63f8db95cb6b3b8c65303313a4">setVisibility</a>(visibility);</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    (*this) &lt;&lt; message;</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#a4be8ae0395ce56a44fab42ac5841a5af">setPriority</a>(prevPriority);</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#ac2a2ab63f8db95cb6b3b8c65303313a4">setVisibility</a>(prevVisibility);</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;}</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;<span class="comment">    Initialize logger manager instance.</span></div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;std::unique_ptr&lt;LoggerManager&gt; LoggerManager::m_manager = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;<span class="comment">    Default name for the logger.</span></div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;std::string LoggerManager::BITPIT_LOG_NAME = <span class="stringliteral">&quot;bitpit&quot;</span>;</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;<span class="comment">    Default directory for the logger.</span></div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;std::string LoggerManager::BITPIT_LOG_DIRECTORY = <span class="stringliteral">&quot;.&quot;</span>;</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;LoggerManager::LoggerManager()</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;    : m_defaultName(BITPIT_LOG_NAME), m_defaultDirectory(BITPIT_LOG_DIRECTORY),</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;    m_mode(log::SEPARATE)</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;{</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;}</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;</div>
<div class="line"><a name="l00822"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#afd127b04d6851eb3da78f0a18e736255">  822</a></span>&#160;<a class="code" href="classbitpit_1_1LoggerManager.xhtml#afd127b04d6851eb3da78f0a18e736255">LoggerManager::~LoggerManager</a>()</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;{</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    <span class="comment">// Get a list of the loggers</span></div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    std::vector&lt;std::string&gt; loggerNames;</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    loggerNames.reserve(m_loggers.size());</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;entry : m_loggers) {</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;        loggerNames.push_back(entry.first);</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    }</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <span class="comment">// Destry all the loggers</span></div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> std::string &amp;name : loggerNames) {</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;        <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a2dea2852803426766ee2ed7dcc0e0341">destroy</a>(name, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    }</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;}</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;</div>
<div class="line"><a name="l00842"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a9f6899ef7326a6a131372d1727eca86c">  842</a></span>&#160;<a class="code" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a> &amp; <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a9f6899ef7326a6a131372d1727eca86c">LoggerManager::manager</a>()</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;{</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;    <span class="keywordflow">if</span> (!m_manager) {</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;        m_manager = std::unique_ptr&lt;LoggerManager&gt;(<span class="keyword">new</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a>());</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    }</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    <span class="keywordflow">return</span> *m_manager;</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;}</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;</div>
<div class="line"><a name="l00856"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">  856</a></span>&#160;<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp; <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">LoggerManager::cout</a>()</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;{</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>(m_defaultName);</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;}</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;</div>
<div class="line"><a name="l00870"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#ab7fb632df3503f6d690d36e2a2f93049">  870</a></span>&#160;<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp; <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">LoggerManager::cout</a>(<span class="keyword">const</span> std::string &amp;name)</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;{</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    <span class="comment">// The logger has to be created</span></div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;    <span class="keywordflow">if</span> (m_loggers.count(name) == 0) {</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classbitpit_1_1LoggerManager.xhtml#a828b6591258444aa3ae141c7eeca6a6c">isInitialized</a>()) {</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;            <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a078d4ba4ed203093981e6c161d5fd58e">setMode</a>(log::SEPARATE);</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;        }</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;        <span class="keywordflow">if</span> (name == m_defaultName) {</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;            _create(name, <span class="keyword">false</span>, m_defaultDirectory, 1, 0);</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;            <a class="code" href="classbitpit_1_1LoggerManager.xhtml#afb70c032a23025cfaac462a7948ff6ce">create</a>(name, <span class="keyword">false</span>, m_defaultDirectory, 1, 0);</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;        }</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;    }</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;    <span class="comment">// Return the logger</span></div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    <span class="keywordflow">return</span> *(m_loggers.at(name));</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;}</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;</div>
<div class="line"><a name="l00897"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">  897</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">LoggerManager::initialize</a>(log::Mode mode, <span class="keywordtype">bool</span> reset,</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank)</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;{</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;    <a class="code" href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">initialize</a>(mode, m_defaultName, reset, m_defaultDirectory, nProcessors, rank);</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;}</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;</div>
<div class="line"><a name="l00912"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a381a5c47e3146201b24006b1d39d4edd">  912</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">LoggerManager::initialize</a>(log::Mode mode, <span class="keywordtype">bool</span> reset, <span class="keyword">const</span> std::string &amp;directory,</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank)</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;{</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;    <a class="code" href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">initialize</a>(mode, m_defaultName, reset, directory, nProcessors, rank);</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;}</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;</div>
<div class="line"><a name="l00928"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a59adcd57997f5d8caaca65ecc450a67c">  928</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">LoggerManager::initialize</a>(log::Mode mode, <span class="keyword">const</span> std::string &amp;name, <span class="keywordtype">bool</span> reset,</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;                            <span class="keyword">const</span> std::string &amp;directory,</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank)</div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;{</div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classbitpit_1_1LoggerManager.xhtml#a828b6591258444aa3ae141c7eeca6a6c">isInitialized</a>()) {</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;        <a class="code" href="namespacebitpit_1_1log.xhtml#ac9c385c32dc5a0331c601b1b07ab9952">log::cout</a>().<a class="code" href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">println</a>(<span class="stringliteral">&quot;Logger initialization has to be called before creating the loggers.&quot;</span>);</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;    }</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;    <span class="comment">// Set mode</span></div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a078d4ba4ed203093981e6c161d5fd58e">setMode</a>(mode);</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;    <span class="comment">// Set the dafault data</span></div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;    m_defaultName      = name;</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;    m_defaultDirectory = directory;</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;    <span class="comment">// Create the logger</span></div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;    _create(m_defaultName, reset, directory, nProcessors, rank);</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;}</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;</div>
<div class="line"><a name="l00956"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#afb70c032a23025cfaac462a7948ff6ce">  956</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#afb70c032a23025cfaac462a7948ff6ce">LoggerManager::create</a>(<span class="keyword">const</span> std::string &amp;name, <span class="keywordtype">bool</span> reset,</div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank)</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;{</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;    <a class="code" href="classbitpit_1_1LoggerManager.xhtml#afb70c032a23025cfaac462a7948ff6ce">create</a>(name, reset, m_defaultDirectory, nProcessors, rank);</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;}</div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;</div>
<div class="line"><a name="l00971"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a46e48ba8cdb7325666446acb9b4c7432">  971</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#afb70c032a23025cfaac462a7948ff6ce">LoggerManager::create</a>(<span class="keyword">const</span> std::string &amp;name, <span class="keywordtype">bool</span> reset,</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;                        <span class="keyword">const</span> std::string &amp;directory,</div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank)</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;{</div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;    <span class="comment">// Its not possible to create a log with the default name nor a log</span></div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;    <span class="comment">// with the same name of an existent logger nor a log with an empty</span></div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;    <span class="comment">// name</span></div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classbitpit_1_1LoggerManager.xhtml#a754f70184ccba4d6605db0a72cd98c3a">exists</a>(name)) {</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;        m_loggerUsers[name]++;</div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;        <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>(name) &lt;&lt; <span class="stringliteral">&quot;Detected an attemp to create the logger \&quot;&quot;</span> &lt;&lt; name &lt;&lt; <span class="stringliteral">&quot;\&quot; twice&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;        <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>(name) &lt;&lt; <span class="stringliteral">&quot;The previously created logger will be used.&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (name == m_defaultName) {</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;        <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>(m_defaultName) &lt;&lt; <span class="stringliteral">&quot;Detected an attemp to overwrite the default logger&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;        <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>(m_defaultName) &lt;&lt; <span class="stringliteral">&quot;The name of the default logger is \&quot;&quot;</span> &lt;&lt; name &lt;&lt; <span class="stringliteral">&quot;\&quot;&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (name == <span class="stringliteral">&quot;&quot;</span>) {</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;        <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>() &lt;&lt; <span class="stringliteral">&quot;Detected an attemp to create a logger with an empty name&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;    }</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    <span class="comment">// Create the logger</span></div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;    <span class="keywordflow">if</span> (m_mode == log::SEPARATE) {</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;        _create(name, reset, directory, nProcessors, rank);</div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;        _create(name, <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>(m_defaultName));</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;    }</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;}</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;</div>
<div class="line"><a name="l01012"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a2dea2852803426766ee2ed7dcc0e0341"> 1012</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a2dea2852803426766ee2ed7dcc0e0341">LoggerManager::destroy</a>(<span class="keyword">const</span> std::string &amp;name, <span class="keywordtype">bool</span> force)</div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;{</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="classbitpit_1_1LoggerManager.xhtml#a754f70184ccba4d6605db0a72cd98c3a">exists</a>(name)) {</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;    }</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;    <span class="comment">// Decrement the users</span></div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;    <span class="keywordtype">int</span> &amp;nUsers = m_loggerUsers[name];</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;    nUsers--;</div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    <span class="comment">// If the logger has no users we can delete it</span></div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;    <span class="keywordflow">if</span> (nUsers == 0 || force) {</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;        <span class="comment">// Remove the logger from the manager</span></div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;        m_loggers.erase(name);</div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;        m_loggerUsers.erase(name);</div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;</div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;        <span class="comment">// If the logger has it own file stream, delete it</span></div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;        <span class="keywordflow">if</span> (m_fileStreams.count(name) &gt; 0) {</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;            <span class="comment">// Close the stream</span></div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;            std::ofstream &amp;fileStream = *(m_fileStreams.at(name));</div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;            fileStream.close();</div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;</div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;            <span class="comment">// Remove the stream</span></div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;            m_fileStreams.erase(name);</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;        }</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;</div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;    }</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;}</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;</div>
<div class="line"><a name="l01050"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a754f70184ccba4d6605db0a72cd98c3a"> 1050</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a754f70184ccba4d6605db0a72cd98c3a">LoggerManager::exists</a>(<span class="keyword">const</span> std::string &amp;name)<span class="keyword"> const</span></div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;    <span class="keywordflow">return</span> (m_loggers.count(name) != 0);</div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;}</div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;</div>
<div class="line"><a name="l01065"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a828b6591258444aa3ae141c7eeca6a6c"> 1065</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a828b6591258444aa3ae141c7eeca6a6c">LoggerManager::isInitialized</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;    <span class="keywordflow">return</span> (m_loggers.size() &gt; 0);</div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;}</div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;</div>
<div class="line"><a name="l01078"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a078d4ba4ed203093981e6c161d5fd58e"> 1078</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a078d4ba4ed203093981e6c161d5fd58e">LoggerManager::setMode</a>(log::Mode mode)</div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;{</div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classbitpit_1_1LoggerManager.xhtml#a828b6591258444aa3ae141c7eeca6a6c">isInitialized</a>()) {</div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;        <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>().<a class="code" href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">println</a>(<span class="stringliteral">&quot;The policy has to be set before creating the loggers.&quot;</span>);</div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;    }</div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;</div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;    m_mode = mode;</div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;}</div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;</div>
<div class="line"><a name="l01094"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#ab3a4b587319bd1750813775e0106bb57"> 1094</a></span>&#160;log::Mode <a class="code" href="classbitpit_1_1LoggerManager.xhtml#ab3a4b587319bd1750813775e0106bb57">LoggerManager::getMode</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;    <span class="keywordflow">return</span> m_mode;</div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;}</div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;</div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;<span class="keywordtype">void</span> LoggerManager::_create(<span class="keyword">const</span> std::string &amp;name, <span class="keywordtype">bool</span> reset,</div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;                            <span class="keyword">const</span> std::string &amp;directory,</div>
<div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank)</div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;{</div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    <span class="comment">// Get the file path</span></div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;    <a class="code" href="classbitpit_1_1FileHandler.xhtml">FileHandler</a> fileHandler;</div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;    fileHandler.<a class="code" href="classbitpit_1_1FileHandler.xhtml#a32184b676277b89ba0b415fb97864c20">setDirectory</a>(directory);</div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;    fileHandler.<a class="code" href="classbitpit_1_1FileHandler.xhtml#afc6765e4221e28b11e6af15adfb949ba">setName</a>(name);</div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;    fileHandler.<a class="code" href="classbitpit_1_1FileHandler.xhtml#aec694b932110254d387946682da35eb1">setAppendix</a>(<span class="stringliteral">&quot;log&quot;</span>);</div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;    fileHandler.<a class="code" href="classbitpit_1_1FileHandler.xhtml#a1e6b74ad4610c9d35ad9ea9c67978cb4">setParallel</a>(nProcessors &gt; 1);</div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;    <span class="keywordflow">if</span> (nProcessors &gt; 1) {</div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;        fileHandler.<a class="code" href="classbitpit_1_1FileHandler.xhtml#ae5809c15662fe1345979ec1ee13d1d35">setBlock</a>(rank);</div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;    }</div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;</div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;    std::string filePath = fileHandler.<a class="code" href="classbitpit_1_1FileHandler.xhtml#aff2e7a0f8f5461a51cebf9fe888be9de">getPath</a>();</div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;</div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;    <span class="comment">// Create the file stream</span></div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;    std::ios_base::openmode fileMode;</div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;    <span class="keywordflow">if</span> (reset) {</div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;        fileMode = std::ofstream::out;</div>
<div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;        fileMode = std::ofstream::app;</div>
<div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;    }</div>
<div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;</div>
<div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;    m_fileStreams[name] = std::unique_ptr&lt;std::ofstream&gt;(<span class="keyword">new</span> std::ofstream());</div>
<div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;    std::ofstream &amp;fileStream = *(m_fileStreams.at(name));</div>
<div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;    fileStream.rdbuf()-&gt;pubsetbuf(0, 0);</div>
<div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;    fileStream.open(filePath, fileMode);</div>
<div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;</div>
<div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;    <span class="comment">// Use cout as console stream</span></div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    std::ostream &amp;consoleStream = std::cout;</div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;</div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;    <span class="comment">// Create the logger</span></div>
<div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;    m_loggers[name]     = std::unique_ptr&lt;Logger&gt;(<span class="keyword">new</span> Logger(&amp;consoleStream, &amp;fileStream, nProcessors, rank));</div>
<div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    m_loggerUsers[name] = 1;</div>
<div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;}</div>
<div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;</div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;<span class="keywordtype">void</span> LoggerManager::_create(<span class="keyword">const</span> std::string &amp;name, Logger &amp;master)</div>
<div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;{</div>
<div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;    std::ostream &amp;consoleStream = master.getConsoleStream();</div>
<div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;    std::ofstream &amp;fileStream   = master.getFileStream();</div>
<div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;</div>
<div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;    <span class="keywordtype">int</span> rank        = master.getRank();</div>
<div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;    <span class="keywordtype">int</span> nProcessors = master.getProcessorCount();</div>
<div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;</div>
<div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;    m_loggers[name]     = std::unique_ptr&lt;Logger&gt;(<span class="keyword">new</span> Logger(&amp;consoleStream, &amp;fileStream, nProcessors, rank));</div>
<div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;    m_loggerUsers[name] = 1;</div>
<div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;</div>
<div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;    <span class="comment">// Import logger settings</span></div>
<div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;    Logger &amp;logger = *(m_loggers.at(name));</div>
<div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;    logger.setConsoleVerbosity(master.getConsoleVerbosity());</div>
<div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;    logger.setFileVerbosity(master.getFileVerbosity());</div>
<div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;    logger.setVisibility(master.getVisibility());</div>
<div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    logger.setPriority(master.getPriority());</div>
<div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;}</div>
<div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;</div>
<div class="line"><a name="l01177"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a5feeab7cdff54550041aa6bb9c366585"> 1177</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a5feeab7cdff54550041aa6bb9c366585">LoggerManager::setVerbosities</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity)</div>
<div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;{</div>
<div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;entry : m_loggers) {</div>
<div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;        entry.second-&gt;setVerbosities(verbosity);</div>
<div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;    }</div>
<div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;}</div>
<div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;</div>
<div class="line"><a name="l01189"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a24f7cd2787c0914a3acf25dff3b6c35f"> 1189</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a24f7cd2787c0914a3acf25dff3b6c35f">LoggerManager::setConsoleVerbosity</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity)</div>
<div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;{</div>
<div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;entry : m_loggers) {</div>
<div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;        entry.second-&gt;setConsoleVerbosity(verbosity);</div>
<div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    }</div>
<div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;}</div>
<div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;</div>
<div class="line"><a name="l01201"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a9531640f4b85fed8615f29a74ad34577"> 1201</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a9531640f4b85fed8615f29a74ad34577">LoggerManager::setFileVerbosity</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity)</div>
<div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;{</div>
<div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;entry : m_loggers) {</div>
<div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;        entry.second-&gt;setFileVerbosity(verbosity);</div>
<div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;    }</div>
<div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;}</div>
<div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;</div>
<div class="line"><a name="l01213"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a37a24504b0b2e674edee4bc1612b6876"> 1213</a></span>&#160;std::string <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a37a24504b0b2e674edee4bc1612b6876">LoggerManager::getDefaultName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;    <span class="keywordflow">return</span> m_defaultName;</div>
<div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;}</div>
<div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;</div>
<div class="line"><a name="l01223"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml#a6867449ff7afc7567d92d6c478d82c79"> 1223</a></span>&#160;std::string <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a6867449ff7afc7567d92d6c478d82c79">LoggerManager::getDefaultDirectory</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;    <span class="keywordflow">return</span> m_defaultDirectory;</div>
<div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;}</div>
<div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;</div>
<div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;<span class="comment">// Logger global functions</span></div>
<div class="line"><a name="l01238"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml"> 1238</a></span>&#160;<span class="keyword">namespace </span>log {</div>
<div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;</div>
<div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;    <span class="comment">// Generic global functions</span></div>
<div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;</div>
<div class="line"><a name="l01270"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#ad3e7fef0bec2cde00a65b3eaf0a319d0"> 1270</a></span>&#160;    <a class="code" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a> &amp; <a class="code" href="namespacebitpit_1_1log.xhtml#ad3e7fef0bec2cde00a65b3eaf0a319d0">manager</a>()</div>
<div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;    {</div>
<div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a9f6899ef7326a6a131372d1727eca86c">LoggerManager::manager</a>();</div>
<div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;    }</div>
<div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;</div>
<div class="line"><a name="l01280"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#ac9c385c32dc5a0331c601b1b07ab9952"> 1280</a></span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp; <a class="code" href="namespacebitpit_1_1log.xhtml#ac9c385c32dc5a0331c601b1b07ab9952">cout</a>()</div>
<div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;    {</div>
<div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacebitpit_1_1log.xhtml#ad3e7fef0bec2cde00a65b3eaf0a319d0">manager</a>().<a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>();</div>
<div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;    }</div>
<div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;</div>
<div class="line"><a name="l01291"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#aa816cfaf0f9dc25d751630a6a0ef4ef5"> 1291</a></span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp; <a class="code" href="namespacebitpit_1_1log.xhtml#ac9c385c32dc5a0331c601b1b07ab9952">cout</a>(std::string name)</div>
<div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;    {</div>
<div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacebitpit_1_1log.xhtml#ad3e7fef0bec2cde00a65b3eaf0a319d0">manager</a>().<a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>(name);</div>
<div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;    }</div>
<div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;</div>
<div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;    <span class="comment">// Manipulators global functions</span></div>
<div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;</div>
<div class="line"><a name="l01305"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#afc52b027df85bd5d07640a528bf58206"> 1305</a></span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#afc52b027df85bd5d07640a528bf58206">setContext</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> std::string &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#ade77118a9a7a36d5d57b8213a82fa596">context</a>)</div>
<div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;    {</div>
<div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;        logger.<a class="code" href="classbitpit_1_1Logger.xhtml#ae967bedd4f07d6b77d71db668bbbd09a">setContext</a>(context);</div>
<div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;</div>
<div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;        <span class="keywordflow">return</span> logger;</div>
<div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;    }</div>
<div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;</div>
<div class="line"><a name="l01320"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#ade77118a9a7a36d5d57b8213a82fa596"> 1320</a></span>&#160;    <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;std::string&gt;</a> <a class="code" href="namespacebitpit_1_1log.xhtml#ade77118a9a7a36d5d57b8213a82fa596">context</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#ade77118a9a7a36d5d57b8213a82fa596">context</a>)</div>
<div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;    {</div>
<div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;std::string&gt;</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#afc52b027df85bd5d07640a528bf58206">setContext</a>, <a class="code" href="namespacebitpit_1_1log.xhtml#ade77118a9a7a36d5d57b8213a82fa596">context</a>);</div>
<div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;    }</div>
<div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;</div>
<div class="line"><a name="l01332"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#a52c575a99105102b84b426e5aa10f30a"> 1332</a></span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#a52c575a99105102b84b426e5aa10f30a">setPriority</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#a228421bbc23ceb7e8aeddc17ad58cbd8">priority</a>)</div>
<div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;    {</div>
<div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;        logger.<a class="code" href="classbitpit_1_1Logger.xhtml#a4be8ae0395ce56a44fab42ac5841a5af">setPriority</a>(priority);</div>
<div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;</div>
<div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;        <span class="keywordflow">return</span> logger;</div>
<div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;    }</div>
<div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;</div>
<div class="line"><a name="l01347"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#a228421bbc23ceb7e8aeddc17ad58cbd8"> 1347</a></span>&#160;    <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;log::Priority&gt;</a> <a class="code" href="namespacebitpit_1_1log.xhtml#a228421bbc23ceb7e8aeddc17ad58cbd8">priority</a>(<span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#a228421bbc23ceb7e8aeddc17ad58cbd8">priority</a>)</div>
<div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;    {</div>
<div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;log::Priority&gt;</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a52c575a99105102b84b426e5aa10f30a">setPriority</a>, <a class="code" href="namespacebitpit_1_1log.xhtml#a228421bbc23ceb7e8aeddc17ad58cbd8">priority</a>);</div>
<div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;    }</div>
<div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;</div>
<div class="line"><a name="l01359"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#abb3583db34b8ebba0642b72389e9a0f4"> 1359</a></span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#abb3583db34b8ebba0642b72389e9a0f4">setVisibility</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> log::Visibility &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#a53f88a58e8db76efce733743d4548099">visibility</a>)</div>
<div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;    {</div>
<div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;        logger.<a class="code" href="classbitpit_1_1Logger.xhtml#ac2a2ab63f8db95cb6b3b8c65303313a4">setVisibility</a>(visibility);</div>
<div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;</div>
<div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;        <span class="keywordflow">return</span> logger;</div>
<div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;    }</div>
<div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;</div>
<div class="line"><a name="l01374"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#a53f88a58e8db76efce733743d4548099"> 1374</a></span>&#160;    <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;log::Visibility&gt;</a> <a class="code" href="namespacebitpit_1_1log.xhtml#a53f88a58e8db76efce733743d4548099">visibility</a>(<span class="keyword">const</span> log::Visibility &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#a53f88a58e8db76efce733743d4548099">visibility</a>)</div>
<div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;    {</div>
<div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;log::Visibility&gt;</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#abb3583db34b8ebba0642b72389e9a0f4">setVisibility</a>, <a class="code" href="namespacebitpit_1_1log.xhtml#a53f88a58e8db76efce733743d4548099">visibility</a>);</div>
<div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;    }</div>
<div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;</div>
<div class="line"><a name="l01387"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#add8e728a18ca6af4004c475d340cb493"> 1387</a></span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#add8e728a18ca6af4004c475d340cb493">setVerbosities</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity)</div>
<div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;    {</div>
<div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;        logger.<a class="code" href="classbitpit_1_1Logger.xhtml#aa4ce8c829fa16686e87df554fb72e7b0">setVerbosities</a>(verbosity);</div>
<div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;</div>
<div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;        <span class="keywordflow">return</span> logger;</div>
<div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;    }</div>
<div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;</div>
<div class="line"><a name="l01402"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#ad12578204f5ad2a947218d23d1e715fb"> 1402</a></span>&#160;    <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;log::Verbosity&gt;</a> <a class="code" href="namespacebitpit_1_1log.xhtml#ad12578204f5ad2a947218d23d1e715fb">verbosities</a>(<span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity)</div>
<div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;    {</div>
<div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;log::Verbosity&gt;</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#add8e728a18ca6af4004c475d340cb493">setVerbosities</a>, verbosity);</div>
<div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;    }</div>
<div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;</div>
<div class="line"><a name="l01415"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#a661b96aca1ac0f1fb58eda72c66ad127"> 1415</a></span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#a661b96aca1ac0f1fb58eda72c66ad127">setConsoleVerbosity</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity)</div>
<div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;    {</div>
<div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;        logger.<a class="code" href="classbitpit_1_1Logger.xhtml#aae8da3905cd171f25652ef613c2b8591">setConsoleVerbosity</a>(verbosity);</div>
<div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;</div>
<div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;        <span class="keywordflow">return</span> logger;</div>
<div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;    }</div>
<div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;</div>
<div class="line"><a name="l01431"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#ad6f89bcb2adf0f51cb232969b714e83b"> 1431</a></span>&#160;    <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;log::Verbosity&gt;</a> <a class="code" href="namespacebitpit_1_1log.xhtml#ad6f89bcb2adf0f51cb232969b714e83b">consoleVerbosity</a>(<span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity)</div>
<div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;    {</div>
<div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;log::Verbosity&gt;</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a661b96aca1ac0f1fb58eda72c66ad127">setConsoleVerbosity</a>, verbosity);</div>
<div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;    }</div>
<div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;</div>
<div class="line"><a name="l01444"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#a48478d1f1fc87bdce07f1bc122a31eed"> 1444</a></span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#a48478d1f1fc87bdce07f1bc122a31eed">setFileVerbosity</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity)</div>
<div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;    {</div>
<div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;        logger.<a class="code" href="classbitpit_1_1Logger.xhtml#a5abe802299cc02298e7aef814a196eca">setFileVerbosity</a>(verbosity);</div>
<div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;</div>
<div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;        <span class="keywordflow">return</span> logger;</div>
<div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;    }</div>
<div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;</div>
<div class="line"><a name="l01460"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#acd50005e81bd303fa96065d563592348"> 1460</a></span>&#160;    <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;log::Verbosity&gt;</a> <a class="code" href="namespacebitpit_1_1log.xhtml#acd50005e81bd303fa96065d563592348">fileVerbosity</a>(<span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity)</div>
<div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;    {</div>
<div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;log::Verbosity&gt;</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a48478d1f1fc87bdce07f1bc122a31eed">setFileVerbosity</a>, verbosity);</div>
<div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;    }</div>
<div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;</div>
<div class="line"><a name="l01472"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#ad9e0cb517c5e74d13d1eb3ff3029d760"> 1472</a></span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#ad9e0cb517c5e74d13d1eb3ff3029d760">setIndentation</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta)</div>
<div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;    {</div>
<div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;        logger.<a class="code" href="classbitpit_1_1Logger.xhtml#a7bfaf377e5fdbe623f21b25a0100d983">setIndentation</a>(delta);</div>
<div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;</div>
<div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;        <span class="keywordflow">return</span> logger;</div>
<div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;    }</div>
<div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;</div>
<div class="line"><a name="l01487"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#a62e62d4d720143f8d4911417882d2055"> 1487</a></span>&#160;    <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;int&gt;</a> <a class="code" href="namespacebitpit_1_1log.xhtml#a62e62d4d720143f8d4911417882d2055">indent</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta)</div>
<div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;    {</div>
<div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator&lt;int&gt;</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#ad9e0cb517c5e74d13d1eb3ff3029d760">setIndentation</a>, delta);</div>
<div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;    }</div>
<div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;}</div>
<div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;</div>
<div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;}</div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ade77118a9a7a36d5d57b8213a82fa596"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ade77118a9a7a36d5d57b8213a82fa596">bitpit::log::context</a></div><div class="ttdeci">LoggerManipulator&lt; std::string &gt; context(const std::string &amp;context)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01320">logger.cpp:1320</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_aa5e8841acb06811d2f0312d14629306f"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#aa5e8841acb06811d2f0312d14629306f">bitpit::Logger::getFilePrefix</a></div><div class="ttdeci">std::string getFilePrefix()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00605">logger.cpp:605</a></div></div>
<div class="ttc" id="classbitpit_1_1FileHandler_xhtml_aec694b932110254d387946682da35eb1"><div class="ttname"><a href="classbitpit_1_1FileHandler.xhtml#aec694b932110254d387946682da35eb1">bitpit::FileHandler::setAppendix</a></div><div class="ttdeci">void setAppendix(std::string a_)</div><div class="ttdef"><b>Definition:</b> <a href="FileHandler_8cpp_source.xhtml#l00125">FileHandler.cpp:125</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml">bitpit::LoggerManager</a></div><div class="ttdoc">Manager for the loggers. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00179">logger.hpp:179</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a48478d1f1fc87bdce07f1bc122a31eed"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a48478d1f1fc87bdce07f1bc122a31eed">bitpit::log::setFileVerbosity</a></div><div class="ttdeci">Logger &amp; setFileVerbosity(Logger &amp;logger, const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01444">logger.cpp:1444</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_afa2aa1cf9504752dbbb53ec6bdd62552"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#afa2aa1cf9504752dbbb53ec6bdd62552">bitpit::Logger::getPriority</a></div><div class="ttdeci">log::Priority getPriority()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00493">logger.cpp:493</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_af487a0a5285050093f678f8b303d6f9b"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#af487a0a5285050093f678f8b303d6f9b">bitpit::Logger::getVisibility</a></div><div class="ttdeci">log::Visibility getVisibility()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00516">logger.cpp:516</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_af19225bb78c87d26602470e292b13c41"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#af19225bb78c87d26602470e292b13c41">bitpit::LoggerBuffer::setConsoleStream</a></div><div class="ttdeci">void setConsoleStream(std::ostream *console)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00228">logger.cpp:228</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a62e62d4d720143f8d4911417882d2055"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a62e62d4d720143f8d4911417882d2055">bitpit::log::indent</a></div><div class="ttdeci">LoggerManipulator&lt; int &gt; indent(const int &amp;delta)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01487">logger.cpp:1487</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a46a814ead4c050cfa483a4495785852d"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a46a814ead4c050cfa483a4495785852d">bitpit::Logger::getContext</a></div><div class="ttdeci">std::string getContext()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00627">logger.cpp:627</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_ae967bedd4f07d6b77d71db668bbbd09a"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#ae967bedd4f07d6b77d71db668bbbd09a">bitpit::Logger::setContext</a></div><div class="ttdeci">void setContext(const std::string &amp;context)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00615">logger.cpp:615</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_aae8da3905cd171f25652ef613c2b8591"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#aae8da3905cd171f25652ef613c2b8591">bitpit::Logger::setConsoleVerbosity</a></div><div class="ttdeci">void setConsoleVerbosity(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00538">logger.cpp:538</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a938b602ae97614227c05cf1784d7ff49"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">bitpit::LoggerManager::cout</a></div><div class="ttdeci">Logger &amp; cout()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00856">logger.cpp:856</a></div></div>
<div class="ttc" id="classbitpit_1_1FileHandler_xhtml_afc6765e4221e28b11e6af15adfb949ba"><div class="ttname"><a href="classbitpit_1_1FileHandler.xhtml#afc6765e4221e28b11e6af15adfb949ba">bitpit::FileHandler::setName</a></div><div class="ttdeci">void setName(std::string n_)</div><div class="ttdef"><b>Definition:</b> <a href="FileHandler_8cpp_source.xhtml#l00116">FileHandler.cpp:116</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a423312626a977e7314db07b93733854f"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a423312626a977e7314db07b93733854f">bitpit::LoggerBuffer::setFilePrefix</a></div><div class="ttdeci">void setFilePrefix(const std::string &amp;prefix)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00312">logger.cpp:312</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ad3e7fef0bec2cde00a65b3eaf0a319d0"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ad3e7fef0bec2cde00a65b3eaf0a319d0">bitpit::log::manager</a></div><div class="ttdeci">LoggerManager &amp; manager()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01270">logger.cpp:1270</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a078d4ba4ed203093981e6c161d5fd58e"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a078d4ba4ed203093981e6c161d5fd58e">bitpit::LoggerManager::setMode</a></div><div class="ttdeci">bool setMode(log::Mode mode)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01078">logger.cpp:1078</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a19918daf77e8598ba40ef3a290549efaa53c0f5e20dcbeb9a1af06f16a3cba943"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaa53c0f5e20dcbeb9a1af06f16a3cba943">bitpit::log::QUIET</a></div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00052">logger.hpp:52</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a6ad1215b28d36810e49fa2a44ff8892b"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a6ad1215b28d36810e49fa2a44ff8892b">bitpit::LoggerBuffer::setConsoleEnabled</a></div><div class="ttdeci">void setConsoleEnabled(bool enabled)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00216">logger.cpp:216</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a3be415797589d8a01744ff3d4be9bfb9"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a3be415797589d8a01744ff3d4be9bfb9">bitpit::LoggerBuffer::getConsolePrefix</a></div><div class="ttdeci">std::string getConsolePrefix() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00263">logger.cpp:263</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a53f88a58e8db76efce733743d4548099"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a53f88a58e8db76efce733743d4548099">bitpit::log::visibility</a></div><div class="ttdeci">LoggerManipulator&lt; log::Visibility &gt; visibility(const log::Visibility &amp;visibility)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01374">logger.cpp:1374</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a12619ae1dcbc95826f84a0096c3aa657"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">bitpit::Logger::println</a></div><div class="ttdeci">void println(const std::string &amp;line)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00680">logger.cpp:680</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_afc52b027df85bd5d07640a528bf58206"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#afc52b027df85bd5d07640a528bf58206">bitpit::log::setContext</a></div><div class="ttdeci">Logger &amp; setContext(Logger &amp;logger, const std::string &amp;context)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01305">logger.cpp:1305</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a2dea2852803426766ee2ed7dcc0e0341"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a2dea2852803426766ee2ed7dcc0e0341">bitpit::LoggerManager::destroy</a></div><div class="ttdeci">bool destroy(const std::string &amp;name, bool force=false)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01012">logger.cpp:1012</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a5abe802299cc02298e7aef814a196eca"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a5abe802299cc02298e7aef814a196eca">bitpit::Logger::setFileVerbosity</a></div><div class="ttdeci">void setFileVerbosity(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00575">logger.cpp:575</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_af6bb2075760e6d09f8262873d25d9c73"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#af6bb2075760e6d09f8262873d25d9c73">bitpit::Logger::Logger</a></div><div class="ttdeci">Logger(std::ostream *consoleStream, std::ofstream *fileStream, const int &amp;nProcessors=1, const int &amp;rank=0)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00398">logger.cpp:398</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_acd50005e81bd303fa96065d563592348"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#acd50005e81bd303fa96065d563592348">bitpit::log::fileVerbosity</a></div><div class="ttdeci">LoggerManipulator&lt; log::Verbosity &gt; fileVerbosity(const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01460">logger.cpp:1460</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_af4d848f6950514bf1dcd2bbcd93a934c"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#af4d848f6950514bf1dcd2bbcd93a934c">bitpit::LoggerBuffer::setConsolePrefix</a></div><div class="ttdeci">void setConsolePrefix(const std::string &amp;prefix)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00251">logger.cpp:251</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_ac2a2ab63f8db95cb6b3b8c65303313a4"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#ac2a2ab63f8db95cb6b3b8c65303313a4">bitpit::Logger::setVisibility</a></div><div class="ttdeci">void setVisibility(log::Visibility visibility)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00503">logger.cpp:503</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ad9e0cb517c5e74d13d1eb3ff3029d760"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ad9e0cb517c5e74d13d1eb3ff3029d760">bitpit::log::setIndentation</a></div><div class="ttdeci">Logger &amp; setIndentation(Logger &amp;logger, const int &amp;delta)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01472">logger.cpp:1472</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a9f6899ef7326a6a131372d1727eca86c"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a9f6899ef7326a6a131372d1727eca86c">bitpit::LoggerManager::manager</a></div><div class="ttdeci">static LoggerManager &amp; manager()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00842">logger.cpp:842</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_aa20656dfdf4319466c44ed719343f09f"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#aa20656dfdf4319466c44ed719343f09f">bitpit::Logger::getConsoleVerbosity</a></div><div class="ttdeci">log::Verbosity getConsoleVerbosity()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00555">logger.cpp:555</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a228421bbc23ceb7e8aeddc17ad58cbd8"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a228421bbc23ceb7e8aeddc17ad58cbd8">bitpit::log::priority</a></div><div class="ttdeci">LoggerManipulator&lt; log::Priority &gt; priority(const log::Priority &amp;priority)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01347">logger.cpp:1347</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_abb3583db34b8ebba0642b72389e9a0f4"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#abb3583db34b8ebba0642b72389e9a0f4">bitpit::log::setVisibility</a></div><div class="ttdeci">Logger &amp; setVisibility(Logger &amp;logger, const log::Visibility &amp;visibility)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01359">logger.cpp:1359</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a52c575a99105102b84b426e5aa10f30a"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a52c575a99105102b84b426e5aa10f30a">bitpit::log::setPriority</a></div><div class="ttdeci">Logger &amp; setPriority(Logger &amp;logger, const log::Priority &amp;priority)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01332">logger.cpp:1332</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a2dd7dc31eaf58321b4ffd0b2a8b53042"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a2dd7dc31eaf58321b4ffd0b2a8b53042">bitpit::LoggerBuffer::getFilePrefix</a></div><div class="ttdeci">std::string getFilePrefix() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00324">logger.cpp:324</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a316c15d7bbddfac0e8b9669728b6764c"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a316c15d7bbddfac0e8b9669728b6764c">bitpit::Logger::setConsoleStream</a></div><div class="ttdeci">void setConsoleStream(std::ostream *console)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00439">logger.cpp:439</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_ab3a4b587319bd1750813775e0106bb57"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#ab3a4b587319bd1750813775e0106bb57">bitpit::LoggerManager::getMode</a></div><div class="ttdeci">log::Mode getMode() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01094">logger.cpp:1094</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a37a24504b0b2e674edee4bc1612b6876"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a37a24504b0b2e674edee4bc1612b6876">bitpit::LoggerManager::getDefaultName</a></div><div class="ttdeci">std::string getDefaultName() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01213">logger.cpp:1213</a></div></div>
<div class="ttc" id="classbitpit_1_1FileHandler_xhtml"><div class="ttname"><a href="classbitpit_1_1FileHandler.xhtml">bitpit::FileHandler</a></div><div class="ttdoc">Creates file names and checks status. </div><div class="ttdef"><b>Definition:</b> <a href="FileHandler_8hpp_source.xhtml#l00045">FileHandler.hpp:45</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a8b07b17211ee498d3e49e68942178bd9"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a8b07b17211ee498d3e49e68942178bd9">bitpit::Logger::setFileStream</a></div><div class="ttdeci">void setFileStream(std::ofstream *file)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00459">logger.cpp:459</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a17653d6825237bb12370a8f7dc885d57"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a17653d6825237bb12370a8f7dc885d57">bitpit::LoggerBuffer::setPadding</a></div><div class="ttdeci">void setPadding(const std::string &amp;padding)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00346">logger.cpp:346</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ad12578204f5ad2a947218d23d1e715fb"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ad12578204f5ad2a947218d23d1e715fb">bitpit::log::verbosities</a></div><div class="ttdeci">LoggerManipulator&lt; log::Verbosity &gt; verbosities(const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01402">logger.cpp:1402</a></div></div>
<div class="ttc" id="classbitpit_1_1FileHandler_xhtml_aff2e7a0f8f5461a51cebf9fe888be9de"><div class="ttname"><a href="classbitpit_1_1FileHandler.xhtml#aff2e7a0f8f5461a51cebf9fe888be9de">bitpit::FileHandler::getPath</a></div><div class="ttdeci">std::string getPath()</div><div class="ttdef"><b>Definition:</b> <a href="FileHandler_8cpp_source.xhtml#l00178">FileHandler.cpp:178</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_ad97dc30dcadb9c87ca180637884b4362"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">bitpit::LoggerManager::initialize</a></div><div class="ttdeci">void initialize(log::Mode mode, bool reset, const int &amp;nProcessors, const int &amp;rank)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00897">logger.cpp:897</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a19918daf77e8598ba40ef3a290549efaa4c09f2c05d88c37ce54a5bc74d6a4071"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaa4c09f2c05d88c37ce54a5bc74d6a4071">bitpit::log::NORMAL</a></div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00053">logger.hpp:53</a></div></div>
<div class="ttc" id="classbitpit_1_1FileHandler_xhtml_a1e6b74ad4610c9d35ad9ea9c67978cb4"><div class="ttname"><a href="classbitpit_1_1FileHandler.xhtml#a1e6b74ad4610c9d35ad9ea9c67978cb4">bitpit::FileHandler::setParallel</a></div><div class="ttdeci">void setParallel(bool p_)</div><div class="ttdef"><b>Definition:</b> <a href="FileHandler_8cpp_source.xhtml#l00152">FileHandler.cpp:152</a></div></div>
<div class="ttc" id="classbitpit_1_1FileHandler_xhtml_a32184b676277b89ba0b415fb97864c20"><div class="ttname"><a href="classbitpit_1_1FileHandler.xhtml#a32184b676277b89ba0b415fb97864c20">bitpit::FileHandler::setDirectory</a></div><div class="ttdeci">void setDirectory(std::string d_)</div><div class="ttdef"><b>Definition:</b> <a href="FileHandler_8cpp_source.xhtml#l00107">FileHandler.cpp:107</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a892a8608b62dbd52784f66cf28523a1c"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a892a8608b62dbd52784f66cf28523a1c">bitpit::Logger::getFileVerbosity</a></div><div class="ttdeci">log::Verbosity getFileVerbosity()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00595">logger.cpp:595</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a4be8ae0395ce56a44fab42ac5841a5af"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a4be8ae0395ce56a44fab42ac5841a5af">bitpit::Logger::setPriority</a></div><div class="ttdeci">void setPriority(log::Priority priority)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00480">logger.cpp:480</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a9531640f4b85fed8615f29a74ad34577"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a9531640f4b85fed8615f29a74ad34577">bitpit::LoggerManager::setFileVerbosity</a></div><div class="ttdeci">void setFileVerbosity(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01201">logger.cpp:1201</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a0324db441e8d6c7e29adffa501298f89"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a0324db441e8d6c7e29adffa501298f89">bitpit::LoggerBuffer::getFileStream</a></div><div class="ttdeci">std::ofstream &amp; getFileStream()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00301">logger.cpp:301</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a754f70184ccba4d6605db0a72cd98c3a"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a754f70184ccba4d6605db0a72cd98c3a">bitpit::LoggerManager::exists</a></div><div class="ttdeci">bool exists(const std::string &amp;name) const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01050">logger.cpp:1050</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a186ed3d5cd11f52fbe9f4d5324167d4f"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a186ed3d5cd11f52fbe9f4d5324167d4f">bitpit::LoggerBuffer::setFileEnabled</a></div><div class="ttdeci">void setFileEnabled(bool enabled)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00277">logger.cpp:277</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a24f7cd2787c0914a3acf25dff3b6c35f"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a24f7cd2787c0914a3acf25dff3b6c35f">bitpit::LoggerManager::setConsoleVerbosity</a></div><div class="ttdeci">void setConsoleVerbosity(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01189">logger.cpp:1189</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_ad6f1a11d31b1459a5efd67dcdf926b41"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#ad6f1a11d31b1459a5efd67dcdf926b41">bitpit::Logger::getFileStream</a></div><div class="ttdeci">std::ofstream &amp; getFileStream()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00470">logger.cpp:470</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a5a17610617c5c312b52b98b90b542f43"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a5a17610617c5c312b52b98b90b542f43">bitpit::Logger::getProcessorCount</a></div><div class="ttdeci">int getProcessorCount()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00660">logger.cpp:660</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_afd127b04d6851eb3da78f0a18e736255"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#afd127b04d6851eb3da78f0a18e736255">bitpit::LoggerManager::~LoggerManager</a></div><div class="ttdeci">~LoggerManager()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00822">logger.cpp:822</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_aa2eadc76c942f7d50007c9d476c21cb5"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">bitpit::Logger::print</a></div><div class="ttdeci">void print(const std::string &amp;line)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00724">logger.cpp:724</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a3f6b86ad62f5177fa864f9b89e1c5d74"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a3f6b86ad62f5177fa864f9b89e1c5d74">bitpit::LoggerBuffer::setContext</a></div><div class="ttdeci">void setContext(const std::string &amp;context)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00334">logger.cpp:334</a></div></div>
<div class="ttc" id="structbitpit_1_1log_1_1LoggerManipulator_xhtml"><div class="ttname"><a href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">bitpit::log::LoggerManipulator</a></div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00266">logger.hpp:266</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a6823c14ac1e636d62d34dad12b807abb"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a6823c14ac1e636d62d34dad12b807abb">bitpit::LoggerBuffer::setFileStream</a></div><div class="ttdeci">void setFileStream(std::ofstream *file)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00289">logger.cpp:289</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_add8e728a18ca6af4004c475d340cb493"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#add8e728a18ca6af4004c475d340cb493">bitpit::log::setVerbosities</a></div><div class="ttdeci">Logger &amp; setVerbosities(Logger &amp;logger, const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01387">logger.cpp:1387</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a7e0a42cb9388a112de8defe194901c15"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a7e0a42cb9388a112de8defe194901c15">bitpit::LoggerBuffer::LoggerBuffer</a></div><div class="ttdeci">LoggerBuffer(std::size_t bufferSize=256)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00055">logger.cpp:55</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a7cd4cb5acf6dd2d075e3ba3375ff363d"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a7cd4cb5acf6dd2d075e3ba3375ff363d">bitpit::Logger::getConsolePrefix</a></div><div class="ttdeci">std::string getConsolePrefix()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00565">logger.cpp:565</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a5feeab7cdff54550041aa6bb9c366585"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a5feeab7cdff54550041aa6bb9c366585">bitpit::LoggerManager::setVerbosities</a></div><div class="ttdeci">void setVerbosities(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01177">logger.cpp:1177</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a19918daf77e8598ba40ef3a290549efa"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">bitpit::log::Verbosity</a></div><div class="ttdeci">Verbosity</div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00051">logger.hpp:51</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a7bfaf377e5fdbe623f21b25a0100d983"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a7bfaf377e5fdbe623f21b25a0100d983">bitpit::Logger::setIndentation</a></div><div class="ttdeci">void setIndentation(const int &amp;delta)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00637">logger.cpp:637</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ad6f89bcb2adf0f51cb232969b714e83b"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ad6f89bcb2adf0f51cb232969b714e83b">bitpit::log::consoleVerbosity</a></div><div class="ttdeci">LoggerManipulator&lt; log::Verbosity &gt; consoleVerbosity(const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01431">logger.cpp:1431</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a6867449ff7afc7567d92d6c478d82c79"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a6867449ff7afc7567d92d6c478d82c79">bitpit::LoggerManager::getDefaultDirectory</a></div><div class="ttdeci">std::string getDefaultDirectory() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01223">logger.cpp:1223</a></div></div>
<div class="ttc" id="classbitpit_1_1FileHandler_xhtml_ae5809c15662fe1345979ec1ee13d1d35"><div class="ttname"><a href="classbitpit_1_1FileHandler.xhtml#ae5809c15662fe1345979ec1ee13d1d35">bitpit::FileHandler::setBlock</a></div><div class="ttdeci">void setBlock(int b_)</div><div class="ttdef"><b>Definition:</b> <a href="FileHandler_8cpp_source.xhtml#l00161">FileHandler.cpp:161</a></div></div>
<div class="ttc" id="group__MathFunctions_xhtml_ga119be619426d7a672ab67296a32f04e9"><div class="ttname"><a href="group__MathFunctions.xhtml#ga119be619426d7a672ab67296a32f04e9">max</a></div><div class="ttdeci">std::array&lt; T, d &gt; max(const std::array&lt; T, d &gt; &amp;x, const std::array&lt; T, d &gt; &amp;y)</div><div class="ttdef"><b>Definition:</b> <a href="MathOperators__array_8tpp_source.xhtml#l00306">MathOperators_array.tpp:306</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a37de3dc0c2f008d9cef3b93f07de630f"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a37de3dc0c2f008d9cef3b93f07de630f">bitpit::LoggerBuffer::~LoggerBuffer</a></div><div class="ttdeci">~LoggerBuffer()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00074">logger.cpp:74</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml">bitpit::Logger</a></div><div class="ttdoc">Message logger. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00112">logger.hpp:112</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_aa4ce8c829fa16686e87df554fb72e7b0"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#aa4ce8c829fa16686e87df554fb72e7b0">bitpit::Logger::setVerbosities</a></div><div class="ttdeci">void setVerbosities(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00527">logger.cpp:527</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a515d3e2e03ab72d9a69bf378ccb5a065"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a515d3e2e03ab72d9a69bf378ccb5a065">bitpit::Logger::getRank</a></div><div class="ttdeci">int getRank()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00670">logger.cpp:670</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_afb70c032a23025cfaac462a7948ff6ce"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#afb70c032a23025cfaac462a7948ff6ce">bitpit::LoggerManager::create</a></div><div class="ttdeci">void create(const std::string &amp;name, bool reset=false, const int &amp;nProcessors=1, const int &amp;rank=0)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00956">logger.cpp:956</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a828b6591258444aa3ae141c7eeca6a6c"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a828b6591258444aa3ae141c7eeca6a6c">bitpit::LoggerManager::isInitialized</a></div><div class="ttdeci">bool isInitialized() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01065">logger.cpp:1065</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_adea6c4d257861e35f4ba6460b2100ae6"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#adea6c4d257861e35f4ba6460b2100ae6">bitpit::Logger::getIndentation</a></div><div class="ttdeci">int getIndentation()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00650">logger.cpp:650</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a9d83968f3db3cea15fce47ce0bde7156"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a9d83968f3db3cea15fce47ce0bde7156">bitpit::LoggerBuffer::getConsoleStream</a></div><div class="ttdeci">std::ostream &amp; getConsoleStream()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00240">logger.cpp:240</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ac9c385c32dc5a0331c601b1b07ab9952"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ac9c385c32dc5a0331c601b1b07ab9952">bitpit::log::cout</a></div><div class="ttdeci">Logger &amp; cout()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01280">logger.cpp:1280</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_aae50035d11f6bd15df5b1d9de830d3b4"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">bitpit::LoggerBuffer::flush</a></div><div class="ttdeci">int flush(bool terminate)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00127">logger.cpp:127</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_af73280fb419f31aef78c28f4799dc8c0"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#af73280fb419f31aef78c28f4799dc8c0">bitpit::Logger::getConsoleStream</a></div><div class="ttdeci">std::ostream &amp; getConsoleStream()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00449">logger.cpp:449</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a661b96aca1ac0f1fb58eda72c66ad127"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a661b96aca1ac0f1fb58eda72c66ad127">bitpit::log::setConsoleVerbosity</a></div><div class="ttdeci">Logger &amp; setConsoleVerbosity(Logger &amp;logger, const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01415">logger.cpp:1415</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:24 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

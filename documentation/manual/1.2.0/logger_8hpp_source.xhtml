
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - src/IO/logger.hpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_fae119eb913a40fe8ed97cde8b98911e.xhtml">IO</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">logger.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __BITPIT_LOGGER_HPP__</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __BITPIT_LOGGER_HPP__</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="utils_8hpp.xhtml">utils.hpp</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;FileHandler.hpp&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#define BITPIT_DEBUG_COUT(...) BITPIT_OVERLOAD_CALL(BITPIT_DEBUG_COUT, __VA_ARGS__)</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#if ENABLE_DEBUG==1</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define BITPIT_DEBUG_COUT_0()     bitpit::log::cout()</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define BITPIT_DEBUG_COUT_1(NAME) bitpit::log::cout(NAME)</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#else</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define BITPIT_DEBUG_COUT_0()     while(0) bitpit::log::cout()</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define BITPIT_DEBUG_COUT_1(NAME) while(0) bitpit::log::cout(NAME)</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">namespace </span>bitpit{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span>log {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">enum</span> Mode {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        COMBINED,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        SEPARATE</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    };</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">   51</a></span>&#160;    <span class="keyword">enum</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">Verbosity</a> {</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaa53c0f5e20dcbeb9a1af06f16a3cba943">   52</a></span>&#160;        <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaa53c0f5e20dcbeb9a1af06f16a3cba943">QUIET</a> = 0,</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaa4c09f2c05d88c37ce54a5bc74d6a4071">   53</a></span>&#160;        <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaa4c09f2c05d88c37ce54a5bc74d6a4071">NORMAL</a>,</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaad4a85e7a5fe3db0b2dc8cf18c4c24ab7">   54</a></span>&#160;        <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaad4a85e7a5fe3db0b2dc8cf18c4c24ab7">DEBUG</a></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    };</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">enum</span> Visibility {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        MASTER = 0,</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        GLOBAL</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    };</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#a36693a6cf350ab6fb71be17e986493d7">   62</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">Verbosity</a> <a class="code" href="namespacebitpit_1_1log.xhtml#a36693a6cf350ab6fb71be17e986493d7">Priority</a>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">// Logger buffer</span></div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerBuffer.xhtml">   66</a></span>&#160;<span class="keyword">class </span><a class="code" href="classbitpit_1_1LoggerBuffer.xhtml">LoggerBuffer</a> : <span class="keyword">public</span> std::streambuf</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a7e0a42cb9388a112de8defe194901c15">LoggerBuffer</a>(std::size_t bufferSize = 256);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a37de3dc0c2f008d9cef3b93f07de630f">~LoggerBuffer</a>();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a6ad1215b28d36810e49fa2a44ff8892b">setConsoleEnabled</a>(<span class="keywordtype">bool</span> enabled);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#af19225bb78c87d26602470e292b13c41">setConsoleStream</a>(std::ostream *console);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    std::ostream &amp; <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a9d83968f3db3cea15fce47ce0bde7156">getConsoleStream</a>();</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#af4d848f6950514bf1dcd2bbcd93a934c">setConsolePrefix</a>(<span class="keyword">const</span> std::string &amp;prefix);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    std::string <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a3be415797589d8a01744ff3d4be9bfb9">getConsolePrefix</a>()  <span class="keyword">const</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a186ed3d5cd11f52fbe9f4d5324167d4f">setFileEnabled</a>(<span class="keywordtype">bool</span> enabled);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a6823c14ac1e636d62d34dad12b807abb">setFileStream</a>(std::ofstream *file);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::ofstream &amp; <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a0324db441e8d6c7e29adffa501298f89">getFileStream</a>();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a423312626a977e7314db07b93733854f">setFilePrefix</a>(<span class="keyword">const</span> std::string &amp;prefix);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    std::string <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a2dd7dc31eaf58321b4ffd0b2a8b53042">getFilePrefix</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a3f6b86ad62f5177fa864f9b89e1c5d74">setContext</a>(<span class="keyword">const</span> std::string &amp;context);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#a17653d6825237bb12370a8f7dc885d57">setPadding</a>(<span class="keyword">const</span> std::string &amp;padding);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">flush</a>(<span class="keywordtype">bool</span> terminate);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    std::vector&lt;char&gt; m_buffer;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    std::string m_context;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    std::string m_padding;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">bool</span> m_consoleEnabled;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    std::ostream *m_console;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    std::string m_consolePrefix;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">bool</span> m_fileEnabled;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    std::ofstream *m_file;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    std::string m_filePrefix;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">const</span> std::string getTimestamp() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    int_type overflow(int_type ch);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">int</span> sync();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;};</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">// Logger</span></div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classbitpit_1_1Logger.xhtml">  112</a></span>&#160;<span class="keyword">class </span><a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> : <span class="keyword">public</span> std::ostream</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#af6bb2075760e6d09f8262873d25d9c73">Logger</a>(std::ostream *consoleStream, std::ofstream *fileStream,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors = 1, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank = 0);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a5a17610617c5c312b52b98b90b542f43">getProcessorCount</a>();</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a515d3e2e03ab72d9a69bf378ccb5a065">getRank</a>();</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#ae967bedd4f07d6b77d71db668bbbd09a">setContext</a>(<span class="keyword">const</span> std::string &amp;context);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    std::string <a class="code" href="classbitpit_1_1Logger.xhtml#a46a814ead4c050cfa483a4495785852d">getContext</a>();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a7bfaf377e5fdbe623f21b25a0100d983">setIndentation</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1Logger.xhtml#adea6c4d257861e35f4ba6460b2100ae6">getIndentation</a>();</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a4be8ae0395ce56a44fab42ac5841a5af">setPriority</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> priority);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> <a class="code" href="classbitpit_1_1Logger.xhtml#afa2aa1cf9504752dbbb53ec6bdd62552">getPriority</a>();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#ac2a2ab63f8db95cb6b3b8c65303313a4">setVisibility</a>(log::Visibility visibility);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    log::Visibility <a class="code" href="classbitpit_1_1Logger.xhtml#af487a0a5285050093f678f8b303d6f9b">getVisibility</a>();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aa4ce8c829fa16686e87df554fb72e7b0">setVerbosities</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a316c15d7bbddfac0e8b9669728b6764c">setConsoleStream</a>(std::ostream *console);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    std::ostream &amp; <a class="code" href="classbitpit_1_1Logger.xhtml#af73280fb419f31aef78c28f4799dc8c0">getConsoleStream</a>();</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    std::string <a class="code" href="classbitpit_1_1Logger.xhtml#a7cd4cb5acf6dd2d075e3ba3375ff363d">getConsolePrefix</a>();</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aae8da3905cd171f25652ef613c2b8591">setConsoleVerbosity</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> <a class="code" href="classbitpit_1_1Logger.xhtml#aa20656dfdf4319466c44ed719343f09f">getConsoleVerbosity</a>();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a8b07b17211ee498d3e49e68942178bd9">setFileStream</a>(std::ofstream *file);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    std::ofstream &amp; <a class="code" href="classbitpit_1_1Logger.xhtml#ad6f1a11d31b1459a5efd67dcdf926b41">getFileStream</a>();</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    std::string <a class="code" href="classbitpit_1_1Logger.xhtml#aa5e8841acb06811d2f0312d14629306f">getFilePrefix</a>();</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a5abe802299cc02298e7aef814a196eca">setFileVerbosity</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> <a class="code" href="classbitpit_1_1Logger.xhtml#a892a8608b62dbd52784f66cf28523a1c">getFileVerbosity</a>();</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    std::string getName();</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">println</a>(<span class="keyword">const</span> std::string &amp;line);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">println</a>(<span class="keyword">const</span> std::string &amp;line, <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> priority);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">println</a>(<span class="keyword">const</span> std::string &amp;line, log::Visibility visibility);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">println</a>(<span class="keyword">const</span> std::string &amp;line, <span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> priority, log::Visibility visibility);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">print</a>(<span class="keyword">const</span> std::string &amp;line);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">print</a>(<span class="keyword">const</span> std::string &amp;line, <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> priority);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">print</a>(<span class="keyword">const</span> std::string &amp;line, log::Visibility visibility);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">print</a>(<span class="keyword">const</span> std::string &amp;line, <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> priority, log::Visibility visibility);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordtype">int</span> m_nProcessors;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordtype">int</span> m_rank;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="classbitpit_1_1LoggerBuffer.xhtml">LoggerBuffer</a> m_buffer;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">int</span> m_indentation;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    std::string m_context;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> m_priority;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    log::Visibility m_visibility;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> m_consoleVerbosity;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> m_fileVerbosity;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml#af6bb2075760e6d09f8262873d25d9c73">Logger</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> <span class="keyword">const</span>&amp;) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; operator=(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> <span class="keyword">const</span>&amp;) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;};</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">// Logger manager</span></div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="classbitpit_1_1LoggerManager.xhtml">  179</a></span>&#160;<span class="keyword">class </span><a class="code" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;{</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keyword">static</span> std::string BITPIT_LOG_NAME;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keyword">static</span> std::string BITPIT_LOG_DIRECTORY;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keyword">static</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a> &amp; <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a9f6899ef7326a6a131372d1727eca86c">manager</a>();</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="classbitpit_1_1LoggerManager.xhtml#afd127b04d6851eb3da78f0a18e736255">~LoggerManager</a>();</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp; <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>();</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp; <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">cout</a>(<span class="keyword">const</span> std::string &amp;name);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">initialize</a>(log::Mode mode, <span class="keywordtype">bool</span> reset,</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                    <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">initialize</a>(log::Mode mode, <span class="keywordtype">bool</span> reset = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                    <span class="keyword">const</span> std::string &amp;directory = BITPIT_LOG_DIRECTORY,</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                    <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors = 1, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank = 0);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">initialize</a>(log::Mode mode, <span class="keyword">const</span> std::string &amp;name,</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                    <span class="keywordtype">bool</span> reset = <span class="keyword">false</span>, <span class="keyword">const</span> std::string &amp;directory = BITPIT_LOG_DIRECTORY,</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                    <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors = 1, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank = 0);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#afb70c032a23025cfaac462a7948ff6ce">create</a>(<span class="keyword">const</span> std::string &amp;name, <span class="keywordtype">bool</span> reset = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors = 1, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank = 0);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#afb70c032a23025cfaac462a7948ff6ce">create</a>(<span class="keyword">const</span> std::string &amp;name, <span class="keywordtype">bool</span> reset, <span class="keyword">const</span> std::string &amp;directory,</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors = 1, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank = 0);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a2dea2852803426766ee2ed7dcc0e0341">destroy</a>(<span class="keyword">const</span> std::string &amp;name, <span class="keywordtype">bool</span> force = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a754f70184ccba4d6605db0a72cd98c3a">exists</a>(<span class="keyword">const</span> std::string &amp;name) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a828b6591258444aa3ae141c7eeca6a6c">isInitialized</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a078d4ba4ed203093981e6c161d5fd58e">setMode</a>(log::Mode mode);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    log::Mode <a class="code" href="classbitpit_1_1LoggerManager.xhtml#ab3a4b587319bd1750813775e0106bb57">getMode</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a5feeab7cdff54550041aa6bb9c366585">setVerbosities</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a24f7cd2787c0914a3acf25dff3b6c35f">setConsoleVerbosity</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a9531640f4b85fed8615f29a74ad34577">setFileVerbosity</a>(<a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> verbosity);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    std::string <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a37a24504b0b2e674edee4bc1612b6876">getDefaultName</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    std::string <a class="code" href="classbitpit_1_1LoggerManager.xhtml#a6867449ff7afc7567d92d6c478d82c79">getDefaultDirectory</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keyword">static</span> std::unique_ptr&lt;LoggerManager&gt; m_manager;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    std::string m_defaultName;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    std::string m_defaultDirectory;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    log::Mode m_mode;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    std::unordered_map&lt;std::string, std::unique_ptr&lt;Logger&gt;&gt; m_loggers;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    std::unordered_map&lt;std::string, int&gt; m_loggerUsers;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    std::unordered_map&lt;std::string, std::unique_ptr&lt;std::ofstream&gt;&gt; m_fileStreams;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <a class="code" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a>();</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a>(<a class="code" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a> <span class="keyword">const</span>&amp;) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a>&amp; operator=(<a class="code" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a> <span class="keyword">const</span>&amp;) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordtype">void</span> _create(<span class="keyword">const</span> std::string &amp;name, <span class="keywordtype">bool</span> reset, <span class="keyword">const</span> std::string &amp;directory,</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;nProcessors, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;rank);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordtype">void</span> _create(<span class="keyword">const</span> std::string &amp;name, <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp;master);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;};</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keyword">namespace </span>log {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="comment">// Generic global functions</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="classbitpit_1_1LoggerManager.xhtml">LoggerManager</a> &amp; <a class="code" href="namespacebitpit_1_1log.xhtml#ad3e7fef0bec2cde00a65b3eaf0a319d0">manager</a>();</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp; <a class="code" href="namespacebitpit_1_1log.xhtml#ac9c385c32dc5a0331c601b1b07ab9952">cout</a>();</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a> &amp; <a class="code" href="namespacebitpit_1_1log.xhtml#ac9c385c32dc5a0331c601b1b07ab9952">cout</a>(std::string name);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="comment">// Manipulators global functions</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">  266</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">LoggerManipulator</a> {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; (*f) (<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp;, <span class="keyword">const</span> T &amp;);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        T value;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml#acc8063f932d2bbc327769761625da989">  273</a></span>&#160;        <a class="code" href="structbitpit_1_1log_1_1LoggerManipulator.xhtml#acc8063f932d2bbc327769761625da989">LoggerManipulator</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; (*ff)(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp;, <span class="keyword">const</span> T &amp;), <span class="keyword">const</span> T &amp; ss)</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            : f(ff), value(ss) {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    };</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1log.xhtml#af750ecd0ed9cc35a39dd41d4e03fdbdd">  283</a></span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; operator&lt;&lt;(Logger&amp; logger, LoggerManipulator&lt;T&gt;&amp;&amp; m)</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">return</span> m.f(logger, m.value);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#afc52b027df85bd5d07640a528bf58206">setContext</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> std::string &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#ade77118a9a7a36d5d57b8213a82fa596">context</a>);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    LoggerManipulator&lt;std::string&gt; <a class="code" href="namespacebitpit_1_1log.xhtml#ade77118a9a7a36d5d57b8213a82fa596">context</a>(<span class="keyword">const</span> std::string &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#ade77118a9a7a36d5d57b8213a82fa596">context</a>);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#a52c575a99105102b84b426e5aa10f30a">setPriority</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#a228421bbc23ceb7e8aeddc17ad58cbd8">priority</a>);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    LoggerManipulator&lt;log::Priority&gt; <a class="code" href="namespacebitpit_1_1log.xhtml#a228421bbc23ceb7e8aeddc17ad58cbd8">priority</a>(<span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Priority</a> &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#a228421bbc23ceb7e8aeddc17ad58cbd8">priority</a>);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#abb3583db34b8ebba0642b72389e9a0f4">setVisibility</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> log::Visibility &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#a53f88a58e8db76efce733743d4548099">visibility</a>);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    LoggerManipulator&lt;log::Visibility&gt; <a class="code" href="namespacebitpit_1_1log.xhtml#a53f88a58e8db76efce733743d4548099">visibility</a>(<span class="keyword">const</span> log::Visibility &amp;<a class="code" href="namespacebitpit_1_1log.xhtml#a53f88a58e8db76efce733743d4548099">visibility</a>);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#add8e728a18ca6af4004c475d340cb493">setVerbosities</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    LoggerManipulator&lt;log::Priority&gt; <a class="code" href="namespacebitpit_1_1log.xhtml#ad12578204f5ad2a947218d23d1e715fb">verbosities</a>(<span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#a661b96aca1ac0f1fb58eda72c66ad127">setConsoleVerbosity</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    LoggerManipulator&lt;log::Priority&gt; <a class="code" href="namespacebitpit_1_1log.xhtml#ad6f89bcb2adf0f51cb232969b714e83b">consoleVerbosity</a>(<span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#a48478d1f1fc87bdce07f1bc122a31eed">setFileVerbosity</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    LoggerManipulator&lt;log::Priority&gt; <a class="code" href="namespacebitpit_1_1log.xhtml#acd50005e81bd303fa96065d563592348">fileVerbosity</a>(<span class="keyword">const</span> <a class="code" href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">log::Verbosity</a> &amp;verbosity);</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; <a class="code" href="namespacebitpit_1_1log.xhtml#ad9e0cb517c5e74d13d1eb3ff3029d760">setIndentation</a>(<a class="code" href="classbitpit_1_1Logger.xhtml">Logger</a>&amp; logger, <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta);</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    LoggerManipulator&lt;int&gt; <a class="code" href="namespacebitpit_1_1log.xhtml#a62e62d4d720143f8d4911417882d2055">indent</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;delta);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;}</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;}</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ade77118a9a7a36d5d57b8213a82fa596"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ade77118a9a7a36d5d57b8213a82fa596">bitpit::log::context</a></div><div class="ttdeci">LoggerManipulator&lt; std::string &gt; context(const std::string &amp;context)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01320">logger.cpp:1320</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_aa5e8841acb06811d2f0312d14629306f"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#aa5e8841acb06811d2f0312d14629306f">bitpit::Logger::getFilePrefix</a></div><div class="ttdeci">std::string getFilePrefix()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00605">logger.cpp:605</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml">bitpit::LoggerManager</a></div><div class="ttdoc">Manager for the loggers. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00179">logger.hpp:179</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a48478d1f1fc87bdce07f1bc122a31eed"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a48478d1f1fc87bdce07f1bc122a31eed">bitpit::log::setFileVerbosity</a></div><div class="ttdeci">Logger &amp; setFileVerbosity(Logger &amp;logger, const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01444">logger.cpp:1444</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_afa2aa1cf9504752dbbb53ec6bdd62552"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#afa2aa1cf9504752dbbb53ec6bdd62552">bitpit::Logger::getPriority</a></div><div class="ttdeci">log::Priority getPriority()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00493">logger.cpp:493</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_af487a0a5285050093f678f8b303d6f9b"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#af487a0a5285050093f678f8b303d6f9b">bitpit::Logger::getVisibility</a></div><div class="ttdeci">log::Visibility getVisibility()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00516">logger.cpp:516</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a36693a6cf350ab6fb71be17e986493d7"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a36693a6cf350ab6fb71be17e986493d7">bitpit::log::Priority</a></div><div class="ttdeci">Verbosity Priority</div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00062">logger.hpp:62</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_af19225bb78c87d26602470e292b13c41"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#af19225bb78c87d26602470e292b13c41">bitpit::LoggerBuffer::setConsoleStream</a></div><div class="ttdeci">void setConsoleStream(std::ostream *console)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00228">logger.cpp:228</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a62e62d4d720143f8d4911417882d2055"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a62e62d4d720143f8d4911417882d2055">bitpit::log::indent</a></div><div class="ttdeci">LoggerManipulator&lt; int &gt; indent(const int &amp;delta)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01487">logger.cpp:1487</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a46a814ead4c050cfa483a4495785852d"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a46a814ead4c050cfa483a4495785852d">bitpit::Logger::getContext</a></div><div class="ttdeci">std::string getContext()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00627">logger.cpp:627</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_ae967bedd4f07d6b77d71db668bbbd09a"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#ae967bedd4f07d6b77d71db668bbbd09a">bitpit::Logger::setContext</a></div><div class="ttdeci">void setContext(const std::string &amp;context)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00615">logger.cpp:615</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_aae8da3905cd171f25652ef613c2b8591"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#aae8da3905cd171f25652ef613c2b8591">bitpit::Logger::setConsoleVerbosity</a></div><div class="ttdeci">void setConsoleVerbosity(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00538">logger.cpp:538</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a938b602ae97614227c05cf1784d7ff49"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a938b602ae97614227c05cf1784d7ff49">bitpit::LoggerManager::cout</a></div><div class="ttdeci">Logger &amp; cout()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00856">logger.cpp:856</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a423312626a977e7314db07b93733854f"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a423312626a977e7314db07b93733854f">bitpit::LoggerBuffer::setFilePrefix</a></div><div class="ttdeci">void setFilePrefix(const std::string &amp;prefix)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00312">logger.cpp:312</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ad3e7fef0bec2cde00a65b3eaf0a319d0"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ad3e7fef0bec2cde00a65b3eaf0a319d0">bitpit::log::manager</a></div><div class="ttdeci">LoggerManager &amp; manager()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01270">logger.cpp:1270</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a078d4ba4ed203093981e6c161d5fd58e"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a078d4ba4ed203093981e6c161d5fd58e">bitpit::LoggerManager::setMode</a></div><div class="ttdeci">bool setMode(log::Mode mode)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01078">logger.cpp:1078</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a19918daf77e8598ba40ef3a290549efaa53c0f5e20dcbeb9a1af06f16a3cba943"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaa53c0f5e20dcbeb9a1af06f16a3cba943">bitpit::log::QUIET</a></div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00052">logger.hpp:52</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a6ad1215b28d36810e49fa2a44ff8892b"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a6ad1215b28d36810e49fa2a44ff8892b">bitpit::LoggerBuffer::setConsoleEnabled</a></div><div class="ttdeci">void setConsoleEnabled(bool enabled)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00216">logger.cpp:216</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a3be415797589d8a01744ff3d4be9bfb9"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a3be415797589d8a01744ff3d4be9bfb9">bitpit::LoggerBuffer::getConsolePrefix</a></div><div class="ttdeci">std::string getConsolePrefix() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00263">logger.cpp:263</a></div></div>
<div class="ttc" id="structbitpit_1_1log_1_1LoggerManipulator_xhtml_acc8063f932d2bbc327769761625da989"><div class="ttname"><a href="structbitpit_1_1log_1_1LoggerManipulator.xhtml#acc8063f932d2bbc327769761625da989">bitpit::log::LoggerManipulator::LoggerManipulator</a></div><div class="ttdeci">LoggerManipulator(Logger &amp;(*ff)(Logger &amp;, const T &amp;), const T &amp;ss)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00273">logger.hpp:273</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a53f88a58e8db76efce733743d4548099"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a53f88a58e8db76efce733743d4548099">bitpit::log::visibility</a></div><div class="ttdeci">LoggerManipulator&lt; log::Visibility &gt; visibility(const log::Visibility &amp;visibility)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01374">logger.cpp:1374</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a12619ae1dcbc95826f84a0096c3aa657"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a12619ae1dcbc95826f84a0096c3aa657">bitpit::Logger::println</a></div><div class="ttdeci">void println(const std::string &amp;line)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00680">logger.cpp:680</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_afc52b027df85bd5d07640a528bf58206"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#afc52b027df85bd5d07640a528bf58206">bitpit::log::setContext</a></div><div class="ttdeci">Logger &amp; setContext(Logger &amp;logger, const std::string &amp;context)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01305">logger.cpp:1305</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a2dea2852803426766ee2ed7dcc0e0341"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a2dea2852803426766ee2ed7dcc0e0341">bitpit::LoggerManager::destroy</a></div><div class="ttdeci">bool destroy(const std::string &amp;name, bool force=false)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01012">logger.cpp:1012</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a5abe802299cc02298e7aef814a196eca"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a5abe802299cc02298e7aef814a196eca">bitpit::Logger::setFileVerbosity</a></div><div class="ttdeci">void setFileVerbosity(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00575">logger.cpp:575</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_af6bb2075760e6d09f8262873d25d9c73"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#af6bb2075760e6d09f8262873d25d9c73">bitpit::Logger::Logger</a></div><div class="ttdeci">Logger(std::ostream *consoleStream, std::ofstream *fileStream, const int &amp;nProcessors=1, const int &amp;rank=0)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00398">logger.cpp:398</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_acd50005e81bd303fa96065d563592348"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#acd50005e81bd303fa96065d563592348">bitpit::log::fileVerbosity</a></div><div class="ttdeci">LoggerManipulator&lt; log::Verbosity &gt; fileVerbosity(const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01460">logger.cpp:1460</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_af4d848f6950514bf1dcd2bbcd93a934c"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#af4d848f6950514bf1dcd2bbcd93a934c">bitpit::LoggerBuffer::setConsolePrefix</a></div><div class="ttdeci">void setConsolePrefix(const std::string &amp;prefix)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00251">logger.cpp:251</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_ac2a2ab63f8db95cb6b3b8c65303313a4"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#ac2a2ab63f8db95cb6b3b8c65303313a4">bitpit::Logger::setVisibility</a></div><div class="ttdeci">void setVisibility(log::Visibility visibility)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00503">logger.cpp:503</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ad9e0cb517c5e74d13d1eb3ff3029d760"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ad9e0cb517c5e74d13d1eb3ff3029d760">bitpit::log::setIndentation</a></div><div class="ttdeci">Logger &amp; setIndentation(Logger &amp;logger, const int &amp;delta)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01472">logger.cpp:1472</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a9f6899ef7326a6a131372d1727eca86c"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a9f6899ef7326a6a131372d1727eca86c">bitpit::LoggerManager::manager</a></div><div class="ttdeci">static LoggerManager &amp; manager()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00842">logger.cpp:842</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_aa20656dfdf4319466c44ed719343f09f"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#aa20656dfdf4319466c44ed719343f09f">bitpit::Logger::getConsoleVerbosity</a></div><div class="ttdeci">log::Verbosity getConsoleVerbosity()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00555">logger.cpp:555</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a228421bbc23ceb7e8aeddc17ad58cbd8"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a228421bbc23ceb7e8aeddc17ad58cbd8">bitpit::log::priority</a></div><div class="ttdeci">LoggerManipulator&lt; log::Priority &gt; priority(const log::Priority &amp;priority)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01347">logger.cpp:1347</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_abb3583db34b8ebba0642b72389e9a0f4"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#abb3583db34b8ebba0642b72389e9a0f4">bitpit::log::setVisibility</a></div><div class="ttdeci">Logger &amp; setVisibility(Logger &amp;logger, const log::Visibility &amp;visibility)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01359">logger.cpp:1359</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a52c575a99105102b84b426e5aa10f30a"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a52c575a99105102b84b426e5aa10f30a">bitpit::log::setPriority</a></div><div class="ttdeci">Logger &amp; setPriority(Logger &amp;logger, const log::Priority &amp;priority)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01332">logger.cpp:1332</a></div></div>
<div class="ttc" id="utils_8hpp_xhtml"><div class="ttname"><a href="utils_8hpp.xhtml">utils.hpp</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a2dd7dc31eaf58321b4ffd0b2a8b53042"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a2dd7dc31eaf58321b4ffd0b2a8b53042">bitpit::LoggerBuffer::getFilePrefix</a></div><div class="ttdeci">std::string getFilePrefix() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00324">logger.cpp:324</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a316c15d7bbddfac0e8b9669728b6764c"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a316c15d7bbddfac0e8b9669728b6764c">bitpit::Logger::setConsoleStream</a></div><div class="ttdeci">void setConsoleStream(std::ostream *console)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00439">logger.cpp:439</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_ab3a4b587319bd1750813775e0106bb57"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#ab3a4b587319bd1750813775e0106bb57">bitpit::LoggerManager::getMode</a></div><div class="ttdeci">log::Mode getMode() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01094">logger.cpp:1094</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a37a24504b0b2e674edee4bc1612b6876"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a37a24504b0b2e674edee4bc1612b6876">bitpit::LoggerManager::getDefaultName</a></div><div class="ttdeci">std::string getDefaultName() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01213">logger.cpp:1213</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a8b07b17211ee498d3e49e68942178bd9"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a8b07b17211ee498d3e49e68942178bd9">bitpit::Logger::setFileStream</a></div><div class="ttdeci">void setFileStream(std::ofstream *file)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00459">logger.cpp:459</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a17653d6825237bb12370a8f7dc885d57"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a17653d6825237bb12370a8f7dc885d57">bitpit::LoggerBuffer::setPadding</a></div><div class="ttdeci">void setPadding(const std::string &amp;padding)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00346">logger.cpp:346</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ad12578204f5ad2a947218d23d1e715fb"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ad12578204f5ad2a947218d23d1e715fb">bitpit::log::verbosities</a></div><div class="ttdeci">LoggerManipulator&lt; log::Verbosity &gt; verbosities(const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01402">logger.cpp:1402</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_ad97dc30dcadb9c87ca180637884b4362"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#ad97dc30dcadb9c87ca180637884b4362">bitpit::LoggerManager::initialize</a></div><div class="ttdeci">void initialize(log::Mode mode, bool reset, const int &amp;nProcessors, const int &amp;rank)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00897">logger.cpp:897</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a19918daf77e8598ba40ef3a290549efaa4c09f2c05d88c37ce54a5bc74d6a4071"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaa4c09f2c05d88c37ce54a5bc74d6a4071">bitpit::log::NORMAL</a></div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00053">logger.hpp:53</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a892a8608b62dbd52784f66cf28523a1c"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a892a8608b62dbd52784f66cf28523a1c">bitpit::Logger::getFileVerbosity</a></div><div class="ttdeci">log::Verbosity getFileVerbosity()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00595">logger.cpp:595</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a4be8ae0395ce56a44fab42ac5841a5af"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a4be8ae0395ce56a44fab42ac5841a5af">bitpit::Logger::setPriority</a></div><div class="ttdeci">void setPriority(log::Priority priority)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00480">logger.cpp:480</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a9531640f4b85fed8615f29a74ad34577"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a9531640f4b85fed8615f29a74ad34577">bitpit::LoggerManager::setFileVerbosity</a></div><div class="ttdeci">void setFileVerbosity(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01201">logger.cpp:1201</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a0324db441e8d6c7e29adffa501298f89"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a0324db441e8d6c7e29adffa501298f89">bitpit::LoggerBuffer::getFileStream</a></div><div class="ttdeci">std::ofstream &amp; getFileStream()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00301">logger.cpp:301</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a754f70184ccba4d6605db0a72cd98c3a"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a754f70184ccba4d6605db0a72cd98c3a">bitpit::LoggerManager::exists</a></div><div class="ttdeci">bool exists(const std::string &amp;name) const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01050">logger.cpp:1050</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a186ed3d5cd11f52fbe9f4d5324167d4f"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a186ed3d5cd11f52fbe9f4d5324167d4f">bitpit::LoggerBuffer::setFileEnabled</a></div><div class="ttdeci">void setFileEnabled(bool enabled)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00277">logger.cpp:277</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a24f7cd2787c0914a3acf25dff3b6c35f"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a24f7cd2787c0914a3acf25dff3b6c35f">bitpit::LoggerManager::setConsoleVerbosity</a></div><div class="ttdeci">void setConsoleVerbosity(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01189">logger.cpp:1189</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_ad6f1a11d31b1459a5efd67dcdf926b41"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#ad6f1a11d31b1459a5efd67dcdf926b41">bitpit::Logger::getFileStream</a></div><div class="ttdeci">std::ofstream &amp; getFileStream()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00470">logger.cpp:470</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a5a17610617c5c312b52b98b90b542f43"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a5a17610617c5c312b52b98b90b542f43">bitpit::Logger::getProcessorCount</a></div><div class="ttdeci">int getProcessorCount()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00660">logger.cpp:660</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_afd127b04d6851eb3da78f0a18e736255"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#afd127b04d6851eb3da78f0a18e736255">bitpit::LoggerManager::~LoggerManager</a></div><div class="ttdeci">~LoggerManager()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00822">logger.cpp:822</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_aa2eadc76c942f7d50007c9d476c21cb5"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#aa2eadc76c942f7d50007c9d476c21cb5">bitpit::Logger::print</a></div><div class="ttdeci">void print(const std::string &amp;line)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00724">logger.cpp:724</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a3f6b86ad62f5177fa864f9b89e1c5d74"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a3f6b86ad62f5177fa864f9b89e1c5d74">bitpit::LoggerBuffer::setContext</a></div><div class="ttdeci">void setContext(const std::string &amp;context)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00334">logger.cpp:334</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a19918daf77e8598ba40ef3a290549efaad4a85e7a5fe3db0b2dc8cf18c4c24ab7"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efaad4a85e7a5fe3db0b2dc8cf18c4c24ab7">bitpit::log::DEBUG</a></div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00054">logger.hpp:54</a></div></div>
<div class="ttc" id="structbitpit_1_1log_1_1LoggerManipulator_xhtml"><div class="ttname"><a href="structbitpit_1_1log_1_1LoggerManipulator.xhtml">bitpit::log::LoggerManipulator</a></div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00266">logger.hpp:266</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a6823c14ac1e636d62d34dad12b807abb"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a6823c14ac1e636d62d34dad12b807abb">bitpit::LoggerBuffer::setFileStream</a></div><div class="ttdeci">void setFileStream(std::ofstream *file)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00289">logger.cpp:289</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_add8e728a18ca6af4004c475d340cb493"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#add8e728a18ca6af4004c475d340cb493">bitpit::log::setVerbosities</a></div><div class="ttdeci">Logger &amp; setVerbosities(Logger &amp;logger, const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01387">logger.cpp:1387</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a7e0a42cb9388a112de8defe194901c15"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a7e0a42cb9388a112de8defe194901c15">bitpit::LoggerBuffer::LoggerBuffer</a></div><div class="ttdeci">LoggerBuffer(std::size_t bufferSize=256)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00055">logger.cpp:55</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a7cd4cb5acf6dd2d075e3ba3375ff363d"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a7cd4cb5acf6dd2d075e3ba3375ff363d">bitpit::Logger::getConsolePrefix</a></div><div class="ttdeci">std::string getConsolePrefix()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00565">logger.cpp:565</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a5feeab7cdff54550041aa6bb9c366585"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a5feeab7cdff54550041aa6bb9c366585">bitpit::LoggerManager::setVerbosities</a></div><div class="ttdeci">void setVerbosities(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01177">logger.cpp:1177</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml">bitpit::LoggerBuffer</a></div><div class="ttdoc">Stream buffer for the message logger. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00066">logger.hpp:66</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a19918daf77e8598ba40ef3a290549efa"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a19918daf77e8598ba40ef3a290549efa">bitpit::log::Verbosity</a></div><div class="ttdeci">Verbosity</div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00051">logger.hpp:51</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a7bfaf377e5fdbe623f21b25a0100d983"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a7bfaf377e5fdbe623f21b25a0100d983">bitpit::Logger::setIndentation</a></div><div class="ttdeci">void setIndentation(const int &amp;delta)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00637">logger.cpp:637</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ad6f89bcb2adf0f51cb232969b714e83b"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ad6f89bcb2adf0f51cb232969b714e83b">bitpit::log::consoleVerbosity</a></div><div class="ttdeci">LoggerManipulator&lt; log::Verbosity &gt; consoleVerbosity(const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01431">logger.cpp:1431</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a6867449ff7afc7567d92d6c478d82c79"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a6867449ff7afc7567d92d6c478d82c79">bitpit::LoggerManager::getDefaultDirectory</a></div><div class="ttdeci">std::string getDefaultDirectory() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01223">logger.cpp:1223</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a37de3dc0c2f008d9cef3b93f07de630f"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a37de3dc0c2f008d9cef3b93f07de630f">bitpit::LoggerBuffer::~LoggerBuffer</a></div><div class="ttdeci">~LoggerBuffer()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00074">logger.cpp:74</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml">bitpit::Logger</a></div><div class="ttdoc">Message logger. </div><div class="ttdef"><b>Definition:</b> <a href="logger_8hpp_source.xhtml#l00112">logger.hpp:112</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_aa4ce8c829fa16686e87df554fb72e7b0"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#aa4ce8c829fa16686e87df554fb72e7b0">bitpit::Logger::setVerbosities</a></div><div class="ttdeci">void setVerbosities(log::Verbosity verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00527">logger.cpp:527</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_a515d3e2e03ab72d9a69bf378ccb5a065"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#a515d3e2e03ab72d9a69bf378ccb5a065">bitpit::Logger::getRank</a></div><div class="ttdeci">int getRank()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00670">logger.cpp:670</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_afb70c032a23025cfaac462a7948ff6ce"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#afb70c032a23025cfaac462a7948ff6ce">bitpit::LoggerManager::create</a></div><div class="ttdeci">void create(const std::string &amp;name, bool reset=false, const int &amp;nProcessors=1, const int &amp;rank=0)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00956">logger.cpp:956</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerManager_xhtml_a828b6591258444aa3ae141c7eeca6a6c"><div class="ttname"><a href="classbitpit_1_1LoggerManager.xhtml#a828b6591258444aa3ae141c7eeca6a6c">bitpit::LoggerManager::isInitialized</a></div><div class="ttdeci">bool isInitialized() const </div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01065">logger.cpp:1065</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_adea6c4d257861e35f4ba6460b2100ae6"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#adea6c4d257861e35f4ba6460b2100ae6">bitpit::Logger::getIndentation</a></div><div class="ttdeci">int getIndentation()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00650">logger.cpp:650</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_a9d83968f3db3cea15fce47ce0bde7156"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#a9d83968f3db3cea15fce47ce0bde7156">bitpit::LoggerBuffer::getConsoleStream</a></div><div class="ttdeci">std::ostream &amp; getConsoleStream()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00240">logger.cpp:240</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_ac9c385c32dc5a0331c601b1b07ab9952"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#ac9c385c32dc5a0331c601b1b07ab9952">bitpit::log::cout</a></div><div class="ttdeci">Logger &amp; cout()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01280">logger.cpp:1280</a></div></div>
<div class="ttc" id="classbitpit_1_1LoggerBuffer_xhtml_aae50035d11f6bd15df5b1d9de830d3b4"><div class="ttname"><a href="classbitpit_1_1LoggerBuffer.xhtml#aae50035d11f6bd15df5b1d9de830d3b4">bitpit::LoggerBuffer::flush</a></div><div class="ttdeci">int flush(bool terminate)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00127">logger.cpp:127</a></div></div>
<div class="ttc" id="classbitpit_1_1Logger_xhtml_af73280fb419f31aef78c28f4799dc8c0"><div class="ttname"><a href="classbitpit_1_1Logger.xhtml#af73280fb419f31aef78c28f4799dc8c0">bitpit::Logger::getConsoleStream</a></div><div class="ttdeci">std::ostream &amp; getConsoleStream()</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l00449">logger.cpp:449</a></div></div>
<div class="ttc" id="namespacebitpit_1_1log_xhtml_a661b96aca1ac0f1fb58eda72c66ad127"><div class="ttname"><a href="namespacebitpit_1_1log.xhtml#a661b96aca1ac0f1fb58eda72c66ad127">bitpit::log::setConsoleVerbosity</a></div><div class="ttdeci">Logger &amp; setConsoleVerbosity(Logger &amp;logger, const log::Verbosity &amp;verbosity)</div><div class="ttdef"><b>Definition:</b> <a href="logger_8cpp_source.xhtml#l01415">logger.cpp:1415</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:24 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

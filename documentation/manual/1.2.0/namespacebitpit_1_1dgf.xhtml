
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - bitpit::dgf Namespace Reference</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>bitpit</b></li><li class="navelem"><a class="el" href="namespacebitpit_1_1dgf.xhtml">dgf</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">bitpit::dgf Namespace Reference<div class="ingroups"><a class="el" href="group__DuneGridFormat.xhtml">DuneGridFormat (DGF)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Utility fuctions for DGF IO.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a65cfc48a13871f0e4ab1b61c0dd0dc4d"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#a65cfc48a13871f0e4ab1b61c0dd0dc4d">check</a> (std::ifstream &amp;, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;)</td></tr>
<tr class="separator:a65cfc48a13871f0e4ab1b61c0dd0dc4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accb788db1fb0fe1484c2516d09fe7b83"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#accb788db1fb0fe1484c2516d09fe7b83">checkData</a> (std::ifstream &amp;, int &amp;)</td></tr>
<tr class="separator:accb788db1fb0fe1484c2516d09fe7b83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad05e147a52b87e0edb8ae5a2e1c55907"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#ad05e147a52b87e0edb8ae5a2e1c55907">readMesh</a> (std::ifstream &amp;, int &amp;, int &amp;, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;)</td></tr>
<tr class="separator:ad05e147a52b87e0edb8ae5a2e1c55907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73cf2ff1f3ea7e4db8a8b697cb26790b"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#a73cf2ff1f3ea7e4db8a8b697cb26790b">readMesh</a> (std::ifstream &amp;, int &amp;, int &amp;, std::vector&lt; std::array&lt; double, 3 &gt; &gt; &amp;, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;)</td></tr>
<tr class="separator:a73cf2ff1f3ea7e4db8a8b697cb26790b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02518735242d1050f26c0f860c3bb503"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#a02518735242d1050f26c0f860c3bb503">scan</a> (std::ifstream &amp;, int &amp;, int &amp;, std::vector&lt; std::string &gt; &amp;, std::vector&lt; std::string &gt; &amp;, std::vector&lt; int &gt; &amp;, std::vector&lt; int &gt; &amp;)</td></tr>
<tr class="separator:a02518735242d1050f26c0f860c3bb503"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad53dd03c442f1118f82633c5c4460179"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#ad53dd03c442f1118f82633c5c4460179">scanData</a> (std::ifstream &amp;, int &amp;)</td></tr>
<tr class="separator:ad53dd03c442f1118f82633c5c4460179"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62d9f1c635c7ef8bef1967e11ae29315"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#a62d9f1c635c7ef8bef1967e11ae29315">writeMesh</a> (std::ofstream &amp;, int &amp;, int &amp;, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;)</td></tr>
<tr class="separator:a62d9f1c635c7ef8bef1967e11ae29315"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee18f87b270ad5b55dc491d9609234f5"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#aee18f87b270ad5b55dc491d9609234f5">writeMesh</a> (std::ofstream &amp;, int &amp;, int &amp;, std::vector&lt; std::array&lt; double, 3 &gt; &gt; &amp;, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;)</td></tr>
<tr class="separator:aee18f87b270ad5b55dc491d9609234f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:a43c4840696c663bf7ad8f64c5ccdf1de"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a43c4840696c663bf7ad8f64c5ccdf1de"><td class="memTemplItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#a43c4840696c663bf7ad8f64c5ccdf1de">readData</a> (std::ifstream &amp;file_handle, int &amp;N, std::vector&lt; T &gt; &amp;Data)</td></tr>
<tr class="separator:a43c4840696c663bf7ad8f64c5ccdf1de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2657e24135efb5970bad14554e91cfa7"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a2657e24135efb5970bad14554e91cfa7"><td class="memTemplItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#a2657e24135efb5970bad14554e91cfa7">readVertexData</a> (std::ifstream &amp;file_handle, int &amp;n, std::vector&lt; T &gt; &amp;data, std::string data_name=&quot;&quot;)</td></tr>
<tr class="separator:a2657e24135efb5970bad14554e91cfa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b2856225405540b68bab53b574ede90"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5b2856225405540b68bab53b574ede90"><td class="memTemplItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#a5b2856225405540b68bab53b574ede90">readSimplexData</a> (std::ifstream &amp;file_handle, int &amp;n, std::vector&lt; T &gt; &amp;data, std::string data_name=&quot;&quot;)</td></tr>
<tr class="separator:a5b2856225405540b68bab53b574ede90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46bb4230146f588eecfe1fb4602a72bd"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a46bb4230146f588eecfe1fb4602a72bd"><td class="memTemplItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#a46bb4230146f588eecfe1fb4602a72bd">writeData</a> (std::ofstream &amp;, int &amp;, std::vector&lt; T &gt; &amp;)</td></tr>
<tr class="separator:a46bb4230146f588eecfe1fb4602a72bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a123ee00c139a566c1a088df4dd73d79c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a123ee00c139a566c1a088df4dd73d79c"><td class="memTemplItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#a123ee00c139a566c1a088df4dd73d79c">writeVertexData</a> (std::ofstream &amp;file_handle, int &amp;N, std::vector&lt; T &gt; &amp;Data, std::string Data_name=&quot;&quot;)</td></tr>
<tr class="separator:a123ee00c139a566c1a088df4dd73d79c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b3661f05e2c2c23f9e8a37534b60c7d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9b3661f05e2c2c23f9e8a37534b60c7d"><td class="memTemplItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacebitpit_1_1dgf.xhtml#a9b3661f05e2c2c23f9e8a37534b60c7d">writeSimplexData</a> (std::ofstream &amp;file_handle, int &amp;N, std::vector&lt; T &gt; &amp;Data, std::string Data_name=&quot;&quot;)</td></tr>
<tr class="separator:a9b3661f05e2c2c23f9e8a37534b60c7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Utility fuctions for DGF IO. </p>
</div><h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a65cfc48a13871f0e4ab1b61c0dd0dc4d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::check </td>
          <td>(</td>
          <td class="paramtype">std::ifstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::vector&lt; int &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>err_code</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Scan dgf file and check for format error(s) within the file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>input stream from dgf file. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">err_code</td><td>on output stores the error code for format error(s) found in each data section: err_code[0][0] stores the list of error codes found in the vertex section err_code[1][0] stores the list of error codes found in the cell section err_code[2][i] stores the list of error codes found in the i-th vertex data section err_code[3][i] stores the list of error codes found in the i-th cell data section Error codes are listed below: err_code[i][j] = 0: no error(s) found err_code[i][j] = 1: unterminated data block err_code[i][j] = 2: unreadable data</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag for I/O errors: err = 0: no error(s) encountered err = 1: failed to scan dgf file. </dd></dl>

<p>Definition at line <a class="el" href="DGF_8cpp_source.xhtml#l01110">1110</a> of file <a class="el" href="DGF_8cpp_source.xhtml">DGF.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="accb788db1fb0fe1484c2516d09fe7b83"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::checkData </td>
          <td>(</td>
          <td class="paramtype">std::ifstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>err_code</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Scan dgf data block and check for format errors.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>input stream from dgf file. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">err_code</td><td>error code for format error founds in the data block err_code = 0: no error(s) found err_code = 1: unterminated data block err_code = 2: unreadable data</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag for I/O errors: err = 0: no error(s) encountered err = 1: failed to scan dgf file. </dd></dl>

<p>Definition at line <a class="el" href="DGF_8cpp_source.xhtml#l01032">1032</a> of file <a class="el" href="DGF_8cpp_source.xhtml">DGF.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a43c4840696c663bf7ad8f64c5ccdf1de"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::readData </td>
          <td>(</td>
          <td class="paramtype">std::ifstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>N</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>Data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>/}</p>
<p>Read data block from dgf file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>input stream from dgf file </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">N</td><td>number data entries loaded from the data set </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">Data</td><td>on output stores the data loaded from the data block</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag tor I/O errors err = 0: no error(s) encountered err = 1: failed to load data from dgf file </dd></dl>

<p>Definition at line <a class="el" href="DGF_8hpp_source.xhtml#l00252">252</a> of file <a class="el" href="DGF_8hpp_source.xhtml">DGF.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad05e147a52b87e0edb8ae5a2e1c55907"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::readMesh </td>
          <td>(</td>
          <td class="paramtype">std::ifstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nV</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::vector&lt; double &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>V</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::vector&lt; int &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>S</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Load mesh from dgf file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">file_handle</td><td>input file stream </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">nV</td><td>on input stores the number of vertices already acquired from the dgf file. On output stores the input value incremented by the number of mesh vertices loaded from the dgf file. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">nS</td><td>on input stores the number of cells already acquired from the dgf file. On output stores the input value incremented by the number of mesh cells loaded from the dgf file. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">V</td><td>vertex coordinate list. On output stores the coordinates of the vertices already acquired from the dgf file. New coordinates are appended at the end of V. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">S</td><td>cell-&gt;vertex connectivity data. On output stores the connectivity entries for cells acquired from the dgf file. New connectivity entries are appended at the and of S.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag for I/O errors. err = 0: no error(s) occurred err = 1: failed to import mesh data from dgf file. </dd></dl>

<p>Definition at line <a class="el" href="DGF_8cpp_source.xhtml#l01211">1211</a> of file <a class="el" href="DGF_8cpp_source.xhtml">DGF.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a73cf2ff1f3ea7e4db8a8b697cb26790b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::readMesh </td>
          <td>(</td>
          <td class="paramtype">std::ifstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nV</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::array&lt; double, 3 &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>V</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::vector&lt; int &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>S</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Load mesh from dgf file. Overloading of function <a class="el" href="namespacebitpit_1_1dgf.xhtml#ad05e147a52b87e0edb8ae5a2e1c55907">dgf::readMesh()</a> for container vector&lt;array&lt;double,3&gt;&gt;</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">file_handle</td><td>input file stream </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">nV</td><td>on input stores the number of vertices already acquired from the dgf file. On output stores the input value incremented by the number of mesh vertices loaded from the dgf file. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">nS</td><td>on input stores the number of cells already acquired from the dgf file. On output stores the input value incremented by the number of mesh cells loaded from the dgf file. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">V</td><td>vertex coordinate list. On output stores the coordinates of the vertices already acquired from the dgf file. New coordinates are appended at the end of V. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">S</td><td>cell-&gt;vertex connectivity data. On output stores the connectivity entries for cells acquired from the dgf file. New connectivity entries are appended at the and of S.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag for I/O errors. err = 0: no error(s) occurred err = 1: failed to import mesh data from dgf file. </dd></dl>

<p>Definition at line <a class="el" href="DGF_8cpp_source.xhtml#l01299">1299</a> of file <a class="el" href="DGF_8cpp_source.xhtml">DGF.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5b2856225405540b68bab53b574ede90"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::readSimplexData </td>
          <td>(</td>
          <td class="paramtype">std::ifstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>data_name</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Read cell data from dgf file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>input stream from dgf file </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">n</td><td>number data entries loaded from the data set </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">data</td><td>on output stores the data loaded from the data block </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data_name</td><td>name of the cell data set to be loaded. If no name is specified (i.e. data_name = "") the first cell data set encountered in the dgf file is returned. If no cell data set matching the input name is found, no data is loaded from the dgf file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag tor I/O errors err = 0: no error(s) encountered err = 1: failed to load data from dgf file </dd></dl>

<p>Definition at line <a class="el" href="DGF_8hpp_source.xhtml#l00442">442</a> of file <a class="el" href="DGF_8hpp_source.xhtml">DGF.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2657e24135efb5970bad14554e91cfa7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::readVertexData </td>
          <td>(</td>
          <td class="paramtype">std::ifstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>data_name</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Read vertex data from dgf file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>input stream from dgf file </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">n</td><td>number data entries loaded from the data set </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">data</td><td>on output stores the data loaded from the data block </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data_name</td><td>name of the vertex data set to be loaded. If no name is specified (i.e. data_name = "") the first vertex data set encountered in the dgf file is returned. If no vertex data set matching the input name is found, no data is loaded from the dgf file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag tor I/O errors err = 0: no error(s) encountered err = 1: failed to load data from dgf file </dd></dl>

<p>Definition at line <a class="el" href="DGF_8hpp_source.xhtml#l00346">346</a> of file <a class="el" href="DGF_8hpp_source.xhtml">DGF.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a02518735242d1050f26c0f860c3bb503"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::scan </td>
          <td>(</td>
          <td class="paramtype">std::ifstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nV</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>sV_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>sS_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; int &gt; &amp;&#160;</td>
          <td class="paramname"><em>nV_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; int &gt; &amp;&#160;</td>
          <td class="paramname"><em>nS_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Scan dgf file and gather infos</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>input stream from dgf file. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">nV</td><td>on output stores the number of mesh vertices </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">nS</td><td>on output stores the number of mesh cells </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">sV_data</td><td>name associated to each vertex data block </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">sS_data</td><td>name associated to each cell data block </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">nV_data</td><td>number of data entries for each vertex data block </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">nS_data</td><td>number of data entries for each cell data block</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag for I/O errors: err = 0: no error(s) encountered err = 1: failed to scan dgf file. </dd></dl>

<p>Definition at line <a class="el" href="DGF_8cpp_source.xhtml#l00914">914</a> of file <a class="el" href="DGF_8cpp_source.xhtml">DGF.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad53dd03c442f1118f82633c5c4460179"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::scanData </td>
          <td>(</td>
          <td class="paramtype">std::ifstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Scan dgf data block and returns the number of entries in the block.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>input stream from dgf file </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">n</td><td>on output stores the number of entries found in the data block</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag for I/O errors: err = 0: no error(s) encountered err = 1: failed to scan dgf file. </dd></dl>

<p>Definition at line <a class="el" href="DGF_8cpp_source.xhtml#l00835">835</a> of file <a class="el" href="DGF_8cpp_source.xhtml">DGF.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a46bb4230146f588eecfe1fb4602a72bd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::writeData </td>
          <td>(</td>
          <td class="paramtype">std::ofstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>N</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>Data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write data block to dgf file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>output stream to dgf file </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">N</td><td>number data entries to be written to file </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">Data</td><td>container storing the data</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag tor I/O errors err = 0: no error(s) encountered err = 1: failed to write data to dgf file </dd></dl>

<p>Definition at line <a class="el" href="DGF_8hpp_source.xhtml#l00536">536</a> of file <a class="el" href="DGF_8hpp_source.xhtml">DGF.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a62d9f1c635c7ef8bef1967e11ae29315"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::writeMesh </td>
          <td>(</td>
          <td class="paramtype">std::ofstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nV</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::vector&lt; double &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>V</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::vector&lt; int &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>S</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Export mesh to dgf file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>output stream to dgf file. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nV</td><td>number of mesh vertices </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nS</td><td>number of mesh cells </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">V</td><td>vertex coordinate list </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">S</td><td>cell-&gt;vertex connectivity</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag for I/O errors: err = 0: no error(s) encountered err = 1: failed to write data to dgf file. </dd></dl>

<p>Definition at line <a class="el" href="DGF_8cpp_source.xhtml#l01380">1380</a> of file <a class="el" href="DGF_8cpp_source.xhtml">DGF.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aee18f87b270ad5b55dc491d9609234f5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::writeMesh </td>
          <td>(</td>
          <td class="paramtype">std::ofstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nV</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>nS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::array&lt; double, 3 &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>V</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; std::vector&lt; int &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>S</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Export mesh to dgf file. Overloading of function <a class="el" href="namespacebitpit_1_1dgf.xhtml#a62d9f1c635c7ef8bef1967e11ae29315">dgf::writeMesh()</a> for container vector&lt;array&lt;double,3&gt; &gt;</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>output stream to dgf file. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nV</td><td>number of mesh vertices </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nS</td><td>number of mesh cells </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">V</td><td>vertex coordinate list </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">S</td><td>cell-&gt;vertex connectivity</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag for I/O errors: err = 0: no error(s) encountered err = 1: failed to write data to dgf file. </dd></dl>

<p>Definition at line <a class="el" href="DGF_8cpp_source.xhtml#l01432">1432</a> of file <a class="el" href="DGF_8cpp_source.xhtml">DGF.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9b3661f05e2c2c23f9e8a37534b60c7d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::writeSimplexData </td>
          <td>(</td>
          <td class="paramtype">std::ofstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>N</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>Data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>Data_name</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write cell data to dgf file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>output stream to dgf file </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">N</td><td>number data entries to be written </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">Data</td><td>container storing the data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Data_name</td><td>name of the cell data set</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag tor I/O errors err = 0: no error(s) encountered err = 1: failed to load data from dgf file </dd></dl>

<p>Definition at line <a class="el" href="DGF_8hpp_source.xhtml#l00637">637</a> of file <a class="el" href="DGF_8hpp_source.xhtml">DGF.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a123ee00c139a566c1a088df4dd73d79c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned int bitpit::dgf::writeVertexData </td>
          <td>(</td>
          <td class="paramtype">std::ofstream &amp;&#160;</td>
          <td class="paramname"><em>file_handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>N</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>Data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>Data_name</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write vertex data to dgf file.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">file_handle</td><td>output stream to dgf file </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">N</td><td>number data entries to be written </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">Data</td><td>container storing the data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Data_name</td><td>name of the vertex data set</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>error flag tor I/O errors err = 0: no error(s) encountered err = 1: failed to load data from dgf file </dd></dl>

<p>Definition at line <a class="el" href="DGF_8hpp_source.xhtml#l00582">582</a> of file <a class="el" href="DGF_8hpp_source.xhtml">DGF.hpp</a>.</p>

</div>
</div>
</div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:25 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

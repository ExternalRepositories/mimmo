
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - bitpit::linearalgebra Namespace Reference</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>bitpit</b></li><li class="navelem"><a class="el" href="namespacebitpit_1_1linearalgebra.xhtml">linearalgebra</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">bitpit::linearalgebra Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>collection of functions to create and solve small linear systems  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga556fad3aa19ec8c72f3408f53ae9a2cf"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga556fad3aa19ec8c72f3408f53ae9a2cf"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__ladisplay.xhtml#ga556fad3aa19ec8c72f3408f53ae9a2cf">display</a> (std::ostream &amp;, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:ga556fad3aa19ec8c72f3408f53ae9a2cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0cd8afe0b8c3617a92d7f4761786b407"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:ga0cd8afe0b8c3617a92d7f4761786b407"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__ladisplay.xhtml#ga0cd8afe0b8c3617a92d7f4761786b407">display</a> (std::ostream &amp;, std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;)</td></tr>
<tr class="separator:ga0cd8afe0b8c3617a92d7f4761786b407"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga22b0eb3f64382bd7ecabaf69a1a44d7e"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga22b0eb3f64382bd7ecabaf69a1a44d7e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__laspecialmatrix.xhtml#ga22b0eb3f64382bd7ecabaf69a1a44d7e">zeros</a> (std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, int, int)</td></tr>
<tr class="separator:ga22b0eb3f64382bd7ecabaf69a1a44d7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41115a082b7ada66000cd097719f1c04"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:ga41115a082b7ada66000cd097719f1c04"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__laspecialmatrix.xhtml#ga41115a082b7ada66000cd097719f1c04">zeros</a> (std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;)</td></tr>
<tr class="separator:ga41115a082b7ada66000cd097719f1c04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6979fe11d2c80da16d29bb089317afd0"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga6979fe11d2c80da16d29bb089317afd0"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__laspecialmatrix.xhtml#ga6979fe11d2c80da16d29bb089317afd0">ones</a> (std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, int, int)</td></tr>
<tr class="separator:ga6979fe11d2c80da16d29bb089317afd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe1887e0eec180ec24fdd7eb5c1774be"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:gabe1887e0eec180ec24fdd7eb5c1774be"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__laspecialmatrix.xhtml#gabe1887e0eec180ec24fdd7eb5c1774be">ones</a> (std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;)</td></tr>
<tr class="separator:gabe1887e0eec180ec24fdd7eb5c1774be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaca37656ddc0a52bf36b85e6395d6d58b"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:gaca37656ddc0a52bf36b85e6395d6d58b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__laspecialmatrix.xhtml#gaca37656ddc0a52bf36b85e6395d6d58b">eye</a> (std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, int, int)</td></tr>
<tr class="separator:gaca37656ddc0a52bf36b85e6395d6d58b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf51ae9fb7cee7be6549620669fc1d64e"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:gaf51ae9fb7cee7be6549620669fc1d64e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__laspecialmatrix.xhtml#gaf51ae9fb7cee7be6549620669fc1d64e">eye</a> (std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;)</td></tr>
<tr class="separator:gaf51ae9fb7cee7be6549620669fc1d64e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gadf0310d09f138129f36618058a58b61d"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:gadf0310d09f138129f36618058a58b61d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#gadf0310d09f138129f36618058a58b61d">matmul</a> (T, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:gadf0310d09f138129f36618058a58b61d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a4bb4b7c72c0734a105a543d0089601"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:ga3a4bb4b7c72c0734a105a543d0089601"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga3a4bb4b7c72c0734a105a543d0089601">matmul</a> (T, std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;, std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;)</td></tr>
<tr class="separator:ga3a4bb4b7c72c0734a105a543d0089601"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e79f82abb89f2743fe1dc199cae4450"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga0e79f82abb89f2743fe1dc199cae4450"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga0e79f82abb89f2743fe1dc199cae4450">matmul</a> (std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, T, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:ga0e79f82abb89f2743fe1dc199cae4450"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga790136308a57d03cfbafea411fb38c7e"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:ga790136308a57d03cfbafea411fb38c7e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga790136308a57d03cfbafea411fb38c7e">matmul</a> (std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;, T, std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;)</td></tr>
<tr class="separator:ga790136308a57d03cfbafea411fb38c7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3ff0fa51b9b8bdfc6bc7995e2b7f1062"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga3ff0fa51b9b8bdfc6bc7995e2b7f1062"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga3ff0fa51b9b8bdfc6bc7995e2b7f1062">matmul</a> (std::vector&lt; T &gt; &amp;, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, std::vector&lt; T &gt; &amp;)</td></tr>
<tr class="separator:ga3ff0fa51b9b8bdfc6bc7995e2b7f1062"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef6596334667ec6e011206eacd515cc6"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:gaef6596334667ec6e011206eacd515cc6"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#gaef6596334667ec6e011206eacd515cc6">matmul</a> (std::array&lt; T, m &gt; &amp;, std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;, std::array&lt; T, n &gt; &amp;)</td></tr>
<tr class="separator:gaef6596334667ec6e011206eacd515cc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac6e1dcd8ba0ae3b0e245d2d25b9b4984"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:gac6e1dcd8ba0ae3b0e245d2d25b9b4984"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#gac6e1dcd8ba0ae3b0e245d2d25b9b4984">matmul</a> (std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, std::vector&lt; T &gt; &amp;, std::vector&lt; T &gt; &amp;)</td></tr>
<tr class="separator:gac6e1dcd8ba0ae3b0e245d2d25b9b4984"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5852833f11e7906b204fc0c28e38181e"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:ga5852833f11e7906b204fc0c28e38181e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga5852833f11e7906b204fc0c28e38181e">matmul</a> (std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;, std::array&lt; T, n &gt; &amp;, std::array&lt; T, m &gt; &amp;)</td></tr>
<tr class="separator:ga5852833f11e7906b204fc0c28e38181e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8195965b5044d991b72cdf352aa07e5"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:gaa8195965b5044d991b72cdf352aa07e5"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#gaa8195965b5044d991b72cdf352aa07e5">matmul</a> (std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:gaa8195965b5044d991b72cdf352aa07e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac66810867d3467acb23e61413337d4a7"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n, size_t l&gt; </td></tr>
<tr class="memitem:gac66810867d3467acb23e61413337d4a7"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#gac66810867d3467acb23e61413337d4a7">matmul</a> (std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;, std::array&lt; std::array&lt; T, l &gt;, n &gt; &amp;, std::array&lt; std::array&lt; T, l &gt;, m &gt; &amp;)</td></tr>
<tr class="separator:gac66810867d3467acb23e61413337d4a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0508ddfc7265ceb01206b4d192fcee0"><td class="memTemplParams" colspan="2">template&lt;class T , size_t d1, size_t d2, size_t d3&gt; </td></tr>
<tr class="memitem:gaa0508ddfc7265ceb01206b4d192fcee0"><td class="memTemplItemLeft" align="right" valign="top">std::array&lt; std::array&lt; T, d2 &gt;<br class="typebreak"/>
, d1 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#gaa0508ddfc7265ceb01206b4d192fcee0">matmul</a> (const std::array&lt; std::array&lt; T, d3 &gt;, d1 &gt; &amp;, const std::array&lt; std::array&lt; T, d2 &gt;, d3 &gt; &amp;)</td></tr>
<tr class="separator:gaa0508ddfc7265ceb01206b4d192fcee0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga504ab7c59069b7be7c2bc8127108f0eb"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga504ab7c59069b7be7c2bc8127108f0eb"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; std::vector&lt; T &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga504ab7c59069b7be7c2bc8127108f0eb">matmul</a> (const std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, const std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:ga504ab7c59069b7be7c2bc8127108f0eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab99319568f7f7e19e9e1fae735ad8382"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:gab99319568f7f7e19e9e1fae735ad8382"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; std::vector&lt; T &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#gab99319568f7f7e19e9e1fae735ad8382">matmulDiag</a> (const std::vector&lt; T &gt; &amp;, const std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:gab99319568f7f7e19e9e1fae735ad8382"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3fc3ffaeec4008ff6439cd500dcd3e2e"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga3fc3ffaeec4008ff6439cd500dcd3e2e"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; std::vector&lt; T &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga3fc3ffaeec4008ff6439cd500dcd3e2e">matmulDiag</a> (const std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, const std::vector&lt; T &gt; &amp;)</td></tr>
<tr class="separator:ga3fc3ffaeec4008ff6439cd500dcd3e2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga803b85aa873fbda76d637f9a77455d11"><td class="memTemplParams" colspan="2">template&lt;class T , size_t d1, size_t d2&gt; </td></tr>
<tr class="memitem:ga803b85aa873fbda76d637f9a77455d11"><td class="memTemplItemLeft" align="right" valign="top">std::array&lt; std::array&lt; T, d2 &gt;<br class="typebreak"/>
, d1 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga803b85aa873fbda76d637f9a77455d11">matmulDiag</a> (const std::array&lt; T, d1 &gt; &amp;, const std::array&lt; std::array&lt; T, d2 &gt;, d1 &gt; &amp;)</td></tr>
<tr class="separator:ga803b85aa873fbda76d637f9a77455d11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9186b9a84d8db54154913148ad29dba1"><td class="memTemplParams" colspan="2">template&lt;class T , size_t d1, size_t d2&gt; </td></tr>
<tr class="memitem:ga9186b9a84d8db54154913148ad29dba1"><td class="memTemplItemLeft" align="right" valign="top">std::array&lt; std::array&lt; T, d2 &gt;<br class="typebreak"/>
, d1 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga9186b9a84d8db54154913148ad29dba1">matmulDiag</a> (const std::array&lt; std::array&lt; T, d2 &gt;, d1 &gt; &amp;, const std::array&lt; T, d2 &gt; &amp;)</td></tr>
<tr class="separator:ga9186b9a84d8db54154913148ad29dba1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8532e4fd4e989cf1e270c5247cdb009a"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga8532e4fd4e989cf1e270c5247cdb009a"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga8532e4fd4e989cf1e270c5247cdb009a">matmul</a> (const std::vector&lt; std::vector&lt; T &gt;&gt; &amp;, const std::vector&lt; T &gt; &amp;)</td></tr>
<tr class="separator:ga8532e4fd4e989cf1e270c5247cdb009a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2aeba53692bbd265de14e89501e33afa"><td class="memTemplParams" colspan="2">template&lt;class T , size_t d1, size_t d2&gt; </td></tr>
<tr class="memitem:ga2aeba53692bbd265de14e89501e33afa"><td class="memTemplItemLeft" align="right" valign="top">std::array&lt; T, d1 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga2aeba53692bbd265de14e89501e33afa">matmul</a> (const std::array&lt; std::array&lt; T, d2 &gt;, d1 &gt; &amp;, const std::array&lt; T, d2 &gt; &amp;)</td></tr>
<tr class="separator:ga2aeba53692bbd265de14e89501e33afa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga869d2ad00a73356c053834b55056f3db"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga869d2ad00a73356c053834b55056f3db"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; std::vector&lt; T &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#ga869d2ad00a73356c053834b55056f3db">tensorProduct</a> (std::vector&lt; T &gt; const &amp;, std::vector&lt; T &gt; const &amp;)</td></tr>
<tr class="separator:ga869d2ad00a73356c053834b55056f3db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadcb6b73f4e3af338541d848ef5a4e962"><td class="memTemplParams" colspan="2">template&lt;class T , size_t n, size_t m&gt; </td></tr>
<tr class="memitem:gadcb6b73f4e3af338541d848ef5a4e962"><td class="memTemplItemLeft" align="right" valign="top">std::array&lt; std::array&lt; T, m &gt;, n &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamultiplication.xhtml#gadcb6b73f4e3af338541d848ef5a4e962">tensorProduct</a> (std::array&lt; T, n &gt; const &amp;, std::array&lt; T, m &gt; const &amp;)</td></tr>
<tr class="separator:gadcb6b73f4e3af338541d848ef5a4e962"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga0e9a3490052e83f4217825253f58797e"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga0e9a3490052e83f4217825253f58797e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamanipulation.xhtml#ga0e9a3490052e83f4217825253f58797e">transpose</a> (std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:ga0e9a3490052e83f4217825253f58797e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga17b05e107e66c3411e6ce091e38a2505"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:ga17b05e107e66c3411e6ce091e38a2505"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamanipulation.xhtml#ga17b05e107e66c3411e6ce091e38a2505">transpose</a> (std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;, std::array&lt; std::array&lt; T, m &gt;, n &gt; &amp;)</td></tr>
<tr class="separator:ga17b05e107e66c3411e6ce091e38a2505"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4729652893ed1f93f0e1eed8f291d17"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:gaf4729652893ed1f93f0e1eed8f291d17"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; std::vector&lt; T &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamanipulation.xhtml#gaf4729652893ed1f93f0e1eed8f291d17">transpose</a> (const std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:gaf4729652893ed1f93f0e1eed8f291d17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab2aa79df1ecd612dca32bf76193e44bd"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:gab2aa79df1ecd612dca32bf76193e44bd"><td class="memTemplItemLeft" align="right" valign="top">std::array&lt; std::array&lt; T, m &gt;, n &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamanipulation.xhtml#gab2aa79df1ecd612dca32bf76193e44bd">transpose</a> (const std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;)</td></tr>
<tr class="separator:gab2aa79df1ecd612dca32bf76193e44bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e5463b86aea022bee913610f9a7a378"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga0e5463b86aea022bee913610f9a7a378"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamanipulation.xhtml#ga0e5463b86aea022bee913610f9a7a378">complement</a> (int, int, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:ga0e5463b86aea022bee913610f9a7a378"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga146d2279cc7db607dacb2ec8747d995c"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:ga146d2279cc7db607dacb2ec8747d995c"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamanipulation.xhtml#ga146d2279cc7db607dacb2ec8747d995c">complement</a> (int, int, std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;, std::array&lt; std::array&lt; T, n-1 &gt;, m-1 &gt; &amp;)</td></tr>
<tr class="separator:ga146d2279cc7db607dacb2ec8747d995c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2077a22570b0b2d5a177ef7847186740"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga2077a22570b0b2d5a177ef7847186740"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamanipulation.xhtml#ga2077a22570b0b2d5a177ef7847186740">triL</a> (std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:ga2077a22570b0b2d5a177ef7847186740"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf0d5a05039dcf3482df70d3dadec2ce1"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:gaf0d5a05039dcf3482df70d3dadec2ce1"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamanipulation.xhtml#gaf0d5a05039dcf3482df70d3dadec2ce1">triL</a> (std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;, std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;)</td></tr>
<tr class="separator:gaf0d5a05039dcf3482df70d3dadec2ce1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga640f31ff2db5c9766970891cea68afe8"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga640f31ff2db5c9766970891cea68afe8"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamanipulation.xhtml#ga640f31ff2db5c9766970891cea68afe8">triU</a> (std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:ga640f31ff2db5c9766970891cea68afe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf52d2476a084dd76f94529ca3b5904e0"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:gaf52d2476a084dd76f94529ca3b5904e0"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lamanipulation.xhtml#gaf52d2476a084dd76f94529ca3b5904e0">triU</a> (std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;, std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;)</td></tr>
<tr class="separator:gaf52d2476a084dd76f94529ca3b5904e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga726908a9dc603080f8bd848f19b78598"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga726908a9dc603080f8bd848f19b78598"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lainfo.xhtml#ga726908a9dc603080f8bd848f19b78598">det</a> (std::vector&lt; std::vector&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:ga726908a9dc603080f8bd848f19b78598"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a80ab240a49ebc10a1a34024a06e68b"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ga7a80ab240a49ebc10a1a34024a06e68b"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lainfo.xhtml#ga7a80ab240a49ebc10a1a34024a06e68b">det</a> (std::array&lt; std::array&lt; T, 1 &gt;, 1 &gt; &amp;)</td></tr>
<tr class="separator:ga7a80ab240a49ebc10a1a34024a06e68b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga580ed601953fce31fdc4767b6bedd5cc"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:ga580ed601953fce31fdc4767b6bedd5cc"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lainfo.xhtml#ga580ed601953fce31fdc4767b6bedd5cc">det</a> (std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;)</td></tr>
<tr class="separator:ga580ed601953fce31fdc4767b6bedd5cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:gaf5b0160ba1bbbe3978e63091875a310d"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:gaf5b0160ba1bbbe3978e63091875a310d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lasolve.xhtml#gaf5b0160ba1bbbe3978e63091875a310d">cramer</a> (std::vector&lt; std::vector&lt; T &gt; &gt; &amp;, std::vector&lt; T &gt; &amp;, std::vector&lt; T &gt; &amp;)</td></tr>
<tr class="separator:gaf5b0160ba1bbbe3978e63091875a310d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c89b5bb72d37d035c0268b742961ccb"><td class="memTemplParams" colspan="2">template&lt;class T , size_t m, size_t n&gt; </td></tr>
<tr class="memitem:ga7c89b5bb72d37d035c0268b742961ccb"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lasolve.xhtml#ga7c89b5bb72d37d035c0268b742961ccb">cramer</a> (std::array&lt; std::array&lt; T, n &gt;, m &gt; &amp;, std::array&lt; T, m &gt; &amp;, std::array&lt; T, n &gt; &amp;)</td></tr>
<tr class="separator:ga7c89b5bb72d37d035c0268b742961ccb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac2fd037e29fc1ba288d173e10fdae14"><td class="memTemplParams" colspan="2">template&lt;size_t m&gt; </td></tr>
<tr class="memitem:gaac2fd037e29fc1ba288d173e10fdae14"><td class="memTemplItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lasolve.xhtml#gaac2fd037e29fc1ba288d173e10fdae14">factorizeLU</a> (std::array&lt; std::array&lt; double, m &gt;, m &gt; &amp;, std::array&lt; std::array&lt; double, m &gt;, m &gt; &amp;, std::array&lt; std::array&lt; double, m &gt;, m &gt; &amp;, std::array&lt; std::array&lt; double, m &gt;, m &gt; *)</td></tr>
<tr class="separator:gaac2fd037e29fc1ba288d173e10fdae14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf15b4d126fb3f2edd4b8db2d3cb75531"><td class="memTemplParams" colspan="2">template&lt;size_t m&gt; </td></tr>
<tr class="memitem:gaf15b4d126fb3f2edd4b8db2d3cb75531"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lasolve.xhtml#gaf15b4d126fb3f2edd4b8db2d3cb75531">backwardSubstitution</a> (std::array&lt; std::array&lt; double, m &gt;, m &gt; &amp;, std::array&lt; double, m &gt; &amp;, std::array&lt; double, m &gt; &amp;)</td></tr>
<tr class="separator:gaf15b4d126fb3f2edd4b8db2d3cb75531"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf46af9d09bafba0809276642bc5bc311"><td class="memTemplParams" colspan="2">template&lt;size_t m&gt; </td></tr>
<tr class="memitem:gaf46af9d09bafba0809276642bc5bc311"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lasolve.xhtml#gaf46af9d09bafba0809276642bc5bc311">forwardSubstitution</a> (std::array&lt; std::array&lt; double, m &gt;, m &gt; &amp;, std::array&lt; double, m &gt; &amp;, std::array&lt; double, m &gt; &amp;)</td></tr>
<tr class="separator:gaf46af9d09bafba0809276642bc5bc311"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga90f08c6036fb0c863d056070c22962b3"><td class="memTemplParams" colspan="2">template&lt;size_t m&gt; </td></tr>
<tr class="memitem:ga90f08c6036fb0c863d056070c22962b3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__lasolve.xhtml#ga90f08c6036fb0c863d056070c22962b3">solveLU</a> (std::array&lt; std::array&lt; double, m &gt;, m &gt; &amp;, std::array&lt; double, m &gt; &amp;, std::array&lt; double, m &gt; &amp;)</td></tr>
<tr class="separator:ga90f08c6036fb0c863d056070c22962b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:ga4c5a537b3b18c36de373d6450dfcfb55"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__lasolve.xhtml#ga4c5a537b3b18c36de373d6450dfcfb55">factorizeLU</a> (std::vector&lt; std::vector&lt; double &gt;&gt; &amp;, std::vector&lt; std::vector&lt; double &gt;&gt; &amp;, std::vector&lt; std::vector&lt; double &gt;&gt; &amp;, std::vector&lt; std::vector&lt; double &gt;&gt; *)</td></tr>
<tr class="separator:ga4c5a537b3b18c36de373d6450dfcfb55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga208710c1db9463632ef3f36abdc43706"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__lasolve.xhtml#ga208710c1db9463632ef3f36abdc43706">backwardSubstitution</a> (std::vector&lt; std::vector&lt; double &gt;&gt; &amp;, std::vector&lt; double &gt; &amp;, std::vector&lt; double &gt; &amp;)</td></tr>
<tr class="separator:ga208710c1db9463632ef3f36abdc43706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9056208a73cac205c3c84111e2ac69ad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__lasolve.xhtml#ga9056208a73cac205c3c84111e2ac69ad">forwardSubstitution</a> (std::vector&lt; std::vector&lt; double &gt;&gt; &amp;, std::vector&lt; double &gt; &amp;, std::vector&lt; double &gt; &amp;)</td></tr>
<tr class="separator:ga9056208a73cac205c3c84111e2ac69ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4c40170e410b717b7365a964130c9831"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__lasolve.xhtml#ga4c40170e410b717b7365a964130c9831">solveLU</a> (std::vector&lt; std::vector&lt; double &gt;&gt; &amp;, std::vector&lt; double &gt; &amp;, std::vector&lt; double &gt; &amp;)</td></tr>
<tr class="separator:ga4c40170e410b717b7365a964130c9831"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>collection of functions to create and solve small linear systems </p>
</div></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:25 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="bitpit is a C++ library for scientific High Performance Computing." />
    <meta name="keywords" content="bitpit, HPC, octree, PABLO, levelset, RBF, mesh, grid" />
    <link rel="shortcut icon" href="/bitpit-private/images/bitpit_icon.ico" type="image/vnd.microsoft.icon" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/normalize.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/base.css" />
    <link rel="stylesheet" type="text/css" href="/bitpit-private/stylesheets/slideshow.css" />
    <script type="text/javascript" src="/bitpit-private/scripts/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
        });
    </script>
    <meta name="generator" content="Doxygen 1.8.5"/>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="manual.css" rel="stylesheet" type="text/css"/>
    <title>bitpit - Manual - src/RBF/rbf.hpp Source File</title>
</head>
<body>
<!-- Header-->
<div id="header" class="">
    <div class="logo"><a href="/bitpit-private">bitpit</a></div>
    <div class="menu-line"></div>
<ul class="menu">
    <li>
        <span>Modules</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/modules/overview.html">Overview</a></li>
            <li><a href="/bitpit-private/modules/PABLO.html">PABLO</a></li>
            <li><a href="/bitpit-private/modules/RBF.html">RBF</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/examples">Examples</a>
    </li>
    <li class="current">
        <span>Documentation</span>
        <ul class="sub-menu">
            <li><a href="/bitpit-private/documentation/installation.html">Installation guide</a></li>
            <li><a href="/bitpit-private/documentation/manual/1.2.0/index.xhtml">Programmer's manual</a></li>
        </ul>
    </li>
    <li>
        <a href="/bitpit-private/downloads">Downloads</a>
    </li>
</ul>
<script type="text/javascript">
$('.menu li').hover(
    function() {
        $('ul', this).css('height', 'auto');
        $('ul', this).stop().slideDown(200);
    },
    function() {
        $('ul', this).stop().slideUp(200, function() {
            $(this).attr('style','');
        });
    }
);
</script>
</div>
<div id="content" class="">
<div id="manual">
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_fabbdee3de76b6113005b66e11bcc6bf.xhtml">RBF</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">rbf.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*---------------------------------------------------------------------------*\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *  bitpit</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  Copyright (C) 2015-2016 OPTIMAD engineering Srl</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  -------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *  License</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This file is part of bitbit.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  bitpit is free software: you can redistribute it and/or modify it</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  under the terms of the GNU Lesser General Public License v3 (LGPL)</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *  as published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  bitpit is distributed in the hope that it will be useful, but WITHOUT</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *  License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *  along with bitpit. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">\*---------------------------------------------------------------------------*/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#ifndef __BITPIT_RBF_HPP__</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __BITPIT_RBF_HPP__</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>bitpit{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="group__RBF.xhtml#ga8c8d1d0c1feea198901f77f168ec03e3">   42</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="group__RBF.xhtml#ga8c8d1d0c1feea198901f77f168ec03e3">RBFBasisFunction</a>{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    WENDLANDC2 = 1,</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;};</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="group__RBF.xhtml#gabdf6d0f18b513f0364ebe00ede3840e1">   50</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="group__RBF.xhtml#gabdf6d0f18b513f0364ebe00ede3840e1">RBFMode</a>{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    INTERP = 1, </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    PARAM =2    </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;};</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classbitpit_1_1RBF.xhtml">   59</a></span>&#160;<span class="keyword">class </span><a class="code" href="classbitpit_1_1RBF.xhtml">RBF</a>{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">int</span>     m_fields;                               </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">int</span>     m_nodes ;                               </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="group__RBF.xhtml#gabdf6d0f18b513f0364ebe00ede3840e1">RBFMode</a> m_mode;                                 </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">double</span>  m_supportRadius ;                       </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    double  (*m_fPtr)( <span class="keyword">const</span> <span class="keywordtype">double</span> &amp;);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    std::vector&lt;bool&gt;                   m_active ;  </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    std::vector&lt;double&gt;                 m_error ;   </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classbitpit_1_1RBF.xhtml#a3c9ce5329079c33c583fd33121265e90">   74</a></span>&#160;    std::vector&lt;std::vector&lt;double&gt;&gt;    <a class="code" href="classbitpit_1_1RBF.xhtml#a3c9ce5329079c33c583fd33121265e90">m_value</a> ;   </div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classbitpit_1_1RBF.xhtml#a1fd231f352c790186d3c2f3db6cadf43">   75</a></span>&#160;    std::vector&lt;std::vector&lt;double&gt;&gt;    <a class="code" href="classbitpit_1_1RBF.xhtml#a1fd231f352c790186d3c2f3db6cadf43">m_weight</a> ;  </div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classbitpit_1_1RBF.xhtml#a92f4053416fd5cd398d4b062b12ea34f">   76</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbitpit_1_1RBF.xhtml#a92f4053416fd5cd398d4b062b12ea34f">m_maxFields</a>;                                </div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classbitpit_1_1RBF.xhtml#a9b592c701b4d3557769d50e274e5d006">   77</a></span>&#160;    std::vector&lt;std::array&lt;double,3&gt;&gt;   <a class="code" href="classbitpit_1_1RBF.xhtml#a9b592c701b4d3557769d50e274e5d006">m_node</a> ;    </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="classbitpit_1_1RBF.xhtml#a05beb080163a1f663564cde967677fe5">~RBF</a>();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="classbitpit_1_1RBF.xhtml#a9f7a389a44bafb0c9e8537a1f48cb5fc">RBF</a>( <a class="code" href="group__RBF.xhtml#ga8c8d1d0c1feea198901f77f168ec03e3">RBFBasisFunction</a> = RBFBasisFunction::WENDLANDC2 ) ;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classbitpit_1_1RBF.xhtml#a9f7a389a44bafb0c9e8537a1f48cb5fc">RBF</a>(<span class="keyword">const</span> <a class="code" href="classbitpit_1_1RBF.xhtml">RBF</a> &amp; other);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="classbitpit_1_1RBF.xhtml">RBF</a> &amp; <a class="code" href="classbitpit_1_1RBF.xhtml#abb9258ab96749ee16c6e063a667401a6">operator=</a>(<span class="keyword">const</span> <a class="code" href="classbitpit_1_1RBF.xhtml">RBF</a> &amp; other);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a7ff66321fc95da012630f3ca67168206">setFunction</a>( <span class="keyword">const</span> <a class="code" href="group__RBF.xhtml#ga8c8d1d0c1feea198901f77f168ec03e3">RBFBasisFunction</a> &amp; ) ;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a7ff66321fc95da012630f3ca67168206">setFunction</a>( <span class="keywordtype">double</span> (&amp;funct)(<span class="keyword">const</span> <span class="keywordtype">double</span> &amp;) ) ;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">int</span>                     <a class="code" href="classbitpit_1_1RBF.xhtml#a28dc12bd016a3f4790e012cbf7662561">getDataCount</a>();</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">int</span>                     <a class="code" href="classbitpit_1_1RBF.xhtml#a6d6005e661015145e860d7736492e50d">getActiveCount</a>();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">int</span>                     <a class="code" href="classbitpit_1_1RBF.xhtml#a52d14a26c8b0d5a12db9626ccdad5934">getTotalNodesCount</a>();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    std::vector&lt;int&gt;        <a class="code" href="classbitpit_1_1RBF.xhtml#a8f123a42b009f821b65c40b118af0d92">getActiveSet</a>() ;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordtype">bool</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#aa317965660ba137ddcc47b9250b3defb">isActive</a>( <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;) ;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">bool</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a350d405a94d582a07b7a267b654df121">activateNode</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">bool</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a350d405a94d582a07b7a267b654df121">activateNode</a>(<span class="keyword">const</span> std::vector&lt;int&gt; &amp;);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#ab8198e0b6535e512ef6736c01b903ac7">activateAllNodes</a>();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">bool</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#aa3f1b0d74fd1f7a76a47d3d03af378f4">deactivateNode</a>(<span class="keyword">const</span> <span class="keywordtype">int</span> &amp;);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordtype">bool</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#aa3f1b0d74fd1f7a76a47d3d03af378f4">deactivateNode</a>(<span class="keyword">const</span> std::vector&lt;int&gt; &amp;);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#af392e15db5d7f51949d37a4ce7d755cb">deactivateAllNodes</a>();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a54452d4b63fc9d8c42a4fe5a6105d95b">setSupportRadius</a>( <span class="keyword">const</span> <span class="keywordtype">double</span> &amp; ) ;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">double</span>                  <a class="code" href="classbitpit_1_1RBF.xhtml#a26fb7f094cf330b5327d0e3f1b8ba0a8">getSupportRadius</a>();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a040b1750152006d3f786e0db8fa46d09">setMode</a>(<a class="code" href="group__RBF.xhtml#gabdf6d0f18b513f0364ebe00ede3840e1">RBFMode</a> mode);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="group__RBF.xhtml#gabdf6d0f18b513f0364ebe00ede3840e1">RBFMode</a>                 <a class="code" href="classbitpit_1_1RBF.xhtml#a568deeec3559afec4357e83bca414eae">getMode</a>();</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a4bc0ee7870120b0d6ba0214c3871cd7e">setDataToNode</a> ( <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;, <span class="keyword">const</span> std::vector&lt;double&gt; &amp; ) ;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a88dd64f51816cf1fa545a1de9ca65fda">setDataToAllNodes</a>( <span class="keyword">const</span> <span class="keywordtype">int</span> &amp;, <span class="keyword">const</span> std::vector&lt;double&gt; &amp; ) ; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordtype">int</span>                     <a class="code" href="classbitpit_1_1RBF.xhtml#a70fb2d737695522784160be5c7291c4c">addNode</a>( <span class="keyword">const</span> std::array&lt;double,3&gt; &amp; ) ;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    std::vector&lt;int&gt;        <a class="code" href="classbitpit_1_1RBF.xhtml#a70fb2d737695522784160be5c7291c4c">addNode</a>( <span class="keyword">const</span> std::vector&lt;std::array&lt;double,3&gt;&gt; &amp; ) ;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">bool</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a14c9d9cee0674fbf01c33c744bb53526">removeNode</a>(<span class="keywordtype">int</span>);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordtype">bool</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a14c9d9cee0674fbf01c33c744bb53526">removeNode</a>(std::vector&lt;int&gt; &amp;);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a540eb84fe8ae1f76714caf2c0346793a">removeAllNodes</a>();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordtype">int</span>                     <a class="code" href="classbitpit_1_1RBF.xhtml#a2f4558c02c58f1065a21329f6b11faf4">addData</a>( ) ; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordtype">int</span>                     <a class="code" href="classbitpit_1_1RBF.xhtml#a2f4558c02c58f1065a21329f6b11faf4">addData</a>( <span class="keyword">const</span> std::vector&lt;double&gt; &amp; ) ;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">bool</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a07f7102bb895acff926fbb2190b93811">removeData</a>( <span class="keywordtype">int</span>) ; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">bool</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a07f7102bb895acff926fbb2190b93811">removeData</a>(std::vector&lt;int&gt; &amp;); </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#ada4a0c22e73da9f5fd98b2276788ba93">removeAllData</a>(); </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a081331639259f567399c803452cc51e7">fitDataToNodes</a>();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordtype">void</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a081331639259f567399c803452cc51e7">fitDataToNodes</a>(<span class="keywordtype">int</span>);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    std::vector&lt;double&gt;     <a class="code" href="classbitpit_1_1RBF.xhtml#aade7b6d4d986c42647b61f905aa17b99">evalRBF</a>( <span class="keyword">const</span> std::array&lt;double,3&gt; &amp;) ;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">double</span>                  <a class="code" href="classbitpit_1_1RBF.xhtml#a901ba117bec44b2f76749d8594e3f141">evalBasis</a>( <span class="keyword">const</span> <span class="keywordtype">double</span> &amp;) ;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordtype">int</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a0be260a62cbfff2a3d3dfee7f46e6684">solve</a>() ; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordtype">int</span>                    <a class="code" href="classbitpit_1_1RBF.xhtml#a55f883989fe460bb597c47037d356a52">greedy</a>( <span class="keyword">const</span> <span class="keywordtype">double</span> &amp;) ;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">double</span>                  <a class="code" href="classbitpit_1_1RBF.xhtml#ae3d4feea16d2d9e0e2063c6a7c699268">evalError</a>() ;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">int</span>                     <a class="code" href="classbitpit_1_1RBF.xhtml#a70fffda108af8e0f3ac1e0226aea6384">addGreedyPoint</a>() ;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">int</span>                     <a class="code" href="classbitpit_1_1RBF.xhtml#a46c645b54820c91087a1ec3b69d2ade3">solveLSQ</a>() ;    </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;};</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="namespacebitpit_1_1rbf.xhtml">  146</a></span>&#160;<span class="keyword">namespace </span>rbf{</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keywordtype">double</span>                          <a class="code" href="namespacebitpit_1_1rbf.xhtml#ac6b9155e0ef734185569c3eca76d4b93">wendlandc2</a>( <span class="keyword">const</span> <span class="keywordtype">double</span> &amp;) ;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a14c9d9cee0674fbf01c33c744bb53526"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a14c9d9cee0674fbf01c33c744bb53526">bitpit::RBF::removeNode</a></div><div class="ttdeci">bool removeNode(int)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00416">rbf.cpp:416</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_ae3d4feea16d2d9e0e2063c6a7c699268"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#ae3d4feea16d2d9e0e2063c6a7c699268">bitpit::RBF::evalError</a></div><div class="ttdeci">double evalError()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00800">rbf.cpp:800</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_af392e15db5d7f51949d37a4ce7d755cb"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#af392e15db5d7f51949d37a4ce7d755cb">bitpit::RBF::deactivateAllNodes</a></div><div class="ttdeci">void deactivateAllNodes()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00273">rbf.cpp:273</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a70fb2d737695522784160be5c7291c4c"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a70fb2d737695522784160be5c7291c4c">bitpit::RBF::addNode</a></div><div class="ttdeci">int addNode(const std::array&lt; double, 3 &gt; &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00378">rbf.cpp:378</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a350d405a94d582a07b7a267b654df121"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a350d405a94d582a07b7a267b654df121">bitpit::RBF::activateNode</a></div><div class="ttdeci">bool activateNode(const int &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00211">rbf.cpp:211</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a70fffda108af8e0f3ac1e0226aea6384"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a70fffda108af8e0f3ac1e0226aea6384">bitpit::RBF::addGreedyPoint</a></div><div class="ttdeci">int addGreedyPoint()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00758">rbf.cpp:758</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a4bc0ee7870120b0d6ba0214c3871cd7e"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a4bc0ee7870120b0d6ba0214c3871cd7e">bitpit::RBF::setDataToNode</a></div><div class="ttdeci">void setDataToNode(const int &amp;, const std::vector&lt; double &gt; &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00320">rbf.cpp:320</a></div></div>
<div class="ttc" id="namespacebitpit_1_1rbf_xhtml_ac6b9155e0ef734185569c3eca76d4b93"><div class="ttname"><a href="namespacebitpit_1_1rbf.xhtml#ac6b9155e0ef734185569c3eca76d4b93">bitpit::rbf::wendlandc2</a></div><div class="ttdeci">double wendlandc2(const double &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00922">rbf.cpp:922</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_ada4a0c22e73da9f5fd98b2276788ba93"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#ada4a0c22e73da9f5fd98b2276788ba93">bitpit::RBF::removeAllData</a></div><div class="ttdeci">void removeAllData()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00544">rbf.cpp:544</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a55f883989fe460bb597c47037d356a52"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a55f883989fe460bb597c47037d356a52">bitpit::RBF::greedy</a></div><div class="ttdeci">int greedy(const double &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00664">rbf.cpp:664</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_aa317965660ba137ddcc47b9250b3defb"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#aa317965660ba137ddcc47b9250b3defb">bitpit::RBF::isActive</a></div><div class="ttdeci">bool isActive(const int &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00202">rbf.cpp:202</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a540eb84fe8ae1f76714caf2c0346793a"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a540eb84fe8ae1f76714caf2c0346793a">bitpit::RBF::removeAllNodes</a></div><div class="ttdeci">void removeAllNodes()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00452">rbf.cpp:452</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a92f4053416fd5cd398d4b062b12ea34f"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a92f4053416fd5cd398d4b062b12ea34f">bitpit::RBF::m_maxFields</a></div><div class="ttdeci">int m_maxFields</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8hpp_source.xhtml#l00076">rbf.hpp:76</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_abb9258ab96749ee16c6e063a667401a6"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#abb9258ab96749ee16c6e063a667401a6">bitpit::RBF::operator=</a></div><div class="ttdeci">RBF &amp; operator=(const RBF &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00091">rbf.cpp:91</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a8f123a42b009f821b65c40b118af0d92"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a8f123a42b009f821b65c40b118af0d92">bitpit::RBF::getActiveSet</a></div><div class="ttdeci">std::vector&lt; int &gt; getActiveSet()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00181">rbf.cpp:181</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a52d14a26c8b0d5a12db9626ccdad5934"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a52d14a26c8b0d5a12db9626ccdad5934">bitpit::RBF::getTotalNodesCount</a></div><div class="ttdeci">int getTotalNodesCount()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00173">rbf.cpp:173</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a568deeec3559afec4357e83bca414eae"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a568deeec3559afec4357e83bca414eae">bitpit::RBF::getMode</a></div><div class="ttdeci">RBFMode getMode()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00301">rbf.cpp:301</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a54452d4b63fc9d8c42a4fe5a6105d95b"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a54452d4b63fc9d8c42a4fe5a6105d95b">bitpit::RBF::setSupportRadius</a></div><div class="ttdeci">void setSupportRadius(const double &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00283">rbf.cpp:283</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a6d6005e661015145e860d7736492e50d"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a6d6005e661015145e860d7736492e50d">bitpit::RBF::getActiveCount</a></div><div class="ttdeci">int getActiveCount()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00158">rbf.cpp:158</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_aa3f1b0d74fd1f7a76a47d3d03af378f4"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#aa3f1b0d74fd1f7a76a47d3d03af378f4">bitpit::RBF::deactivateNode</a></div><div class="ttdeci">bool deactivateNode(const int &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00248">rbf.cpp:248</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a88dd64f51816cf1fa545a1de9ca65fda"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a88dd64f51816cf1fa545a1de9ca65fda">bitpit::RBF::setDataToAllNodes</a></div><div class="ttdeci">void setDataToAllNodes(const int &amp;, const std::vector&lt; double &gt; &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00351">rbf.cpp:351</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a3c9ce5329079c33c583fd33121265e90"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a3c9ce5329079c33c583fd33121265e90">bitpit::RBF::m_value</a></div><div class="ttdeci">std::vector&lt; std::vector&lt; double &gt; &gt; m_value</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8hpp_source.xhtml#l00074">rbf.hpp:74</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a05beb080163a1f663564cde967677fe5"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a05beb080163a1f663564cde967677fe5">bitpit::RBF::~RBF</a></div><div class="ttdeci">~RBF()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00056">rbf.cpp:56</a></div></div>
<div class="ttc" id="group__RBF_xhtml_ga8c8d1d0c1feea198901f77f168ec03e3"><div class="ttname"><a href="group__RBF.xhtml#ga8c8d1d0c1feea198901f77f168ec03e3">bitpit::RBFBasisFunction</a></div><div class="ttdeci">RBFBasisFunction</div><div class="ttdoc">Enum class defining types of RBF kernel functions that could be used in bitpit::RBF class...</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8hpp_source.xhtml#l00042">rbf.hpp:42</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a46c645b54820c91087a1ec3b69d2ade3"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a46c645b54820c91087a1ec3b69d2ade3">bitpit::RBF::solveLSQ</a></div><div class="ttdeci">int solveLSQ()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00844">rbf.cpp:844</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_ab8198e0b6535e512ef6736c01b903ac7"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#ab8198e0b6535e512ef6736c01b903ac7">bitpit::RBF::activateAllNodes</a></div><div class="ttdeci">void activateAllNodes()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00237">rbf.cpp:237</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a040b1750152006d3f786e0db8fa46d09"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a040b1750152006d3f786e0db8fa46d09">bitpit::RBF::setMode</a></div><div class="ttdeci">void setMode(RBFMode mode)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00309">rbf.cpp:309</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a081331639259f567399c803452cc51e7"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a081331639259f567399c803452cc51e7">bitpit::RBF::fitDataToNodes</a></div><div class="ttdeci">void fitDataToNodes()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00719">rbf.cpp:719</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a9b592c701b4d3557769d50e274e5d006"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a9b592c701b4d3557769d50e274e5d006">bitpit::RBF::m_node</a></div><div class="ttdeci">std::vector&lt; std::array&lt; double, 3 &gt; &gt; m_node</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8hpp_source.xhtml#l00077">rbf.hpp:77</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a7ff66321fc95da012630f3ca67168206"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a7ff66321fc95da012630f3ca67168206">bitpit::RBF::setFunction</a></div><div class="ttdeci">void setFunction(const RBFBasisFunction &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00118">rbf.cpp:118</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a9f7a389a44bafb0c9e8537a1f48cb5fc"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a9f7a389a44bafb0c9e8537a1f48cb5fc">bitpit::RBF::RBF</a></div><div class="ttdeci">RBF(RBFBasisFunction=RBFBasisFunction::WENDLANDC2)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00064">rbf.cpp:64</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a26fb7f094cf330b5327d0e3f1b8ba0a8"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a26fb7f094cf330b5327d0e3f1b8ba0a8">bitpit::RBF::getSupportRadius</a></div><div class="ttdeci">double getSupportRadius()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00293">rbf.cpp:293</a></div></div>
<div class="ttc" id="group__RBF_xhtml_gabdf6d0f18b513f0364ebe00ede3840e1"><div class="ttname"><a href="group__RBF.xhtml#gabdf6d0f18b513f0364ebe00ede3840e1">bitpit::RBFMode</a></div><div class="ttdeci">RBFMode</div><div class="ttdoc">Enum class defining behaviour of the bitpit::RBF class. </div><div class="ttdef"><b>Definition:</b> <a href="rbf_8hpp_source.xhtml#l00050">rbf.hpp:50</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a28dc12bd016a3f4790e012cbf7662561"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a28dc12bd016a3f4790e012cbf7662561">bitpit::RBF::getDataCount</a></div><div class="ttdeci">int getDataCount()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00149">rbf.cpp:149</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a1fd231f352c790186d3c2f3db6cadf43"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a1fd231f352c790186d3c2f3db6cadf43">bitpit::RBF::m_weight</a></div><div class="ttdeci">std::vector&lt; std::vector&lt; double &gt; &gt; m_weight</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8hpp_source.xhtml#l00075">rbf.hpp:75</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a2f4558c02c58f1065a21329f6b11faf4"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a2f4558c02c58f1065a21329f6b11faf4">bitpit::RBF::addData</a></div><div class="ttdeci">int addData()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00466">rbf.cpp:466</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml">bitpit::RBF</a></div><div class="ttdoc">Handling of Radial Basis Function with a large set of nodes. </div><div class="ttdef"><b>Definition:</b> <a href="rbf_8hpp_source.xhtml#l00059">rbf.hpp:59</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_aade7b6d4d986c42647b61f905aa17b99"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#aade7b6d4d986c42647b61f905aa17b99">bitpit::RBF::evalRBF</a></div><div class="ttdeci">std::vector&lt; double &gt; evalRBF(const std::array&lt; double, 3 &gt; &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00559">rbf.cpp:559</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a07f7102bb895acff926fbb2190b93811"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a07f7102bb895acff926fbb2190b93811">bitpit::RBF::removeData</a></div><div class="ttdeci">bool removeData(int)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00504">rbf.cpp:504</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a901ba117bec44b2f76749d8594e3f141"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a901ba117bec44b2f76749d8594e3f141">bitpit::RBF::evalBasis</a></div><div class="ttdeci">double evalBasis(const double &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00749">rbf.cpp:749</a></div></div>
<div class="ttc" id="classbitpit_1_1RBF_xhtml_a0be260a62cbfff2a3d3dfee7f46e6684"><div class="ttname"><a href="classbitpit_1_1RBF.xhtml#a0be260a62cbfff2a3d3dfee7f46e6684">bitpit::RBF::solve</a></div><div class="ttdeci">int solve()</div><div class="ttdef"><b>Definition:</b> <a href="rbf_8cpp_source.xhtml#l00588">rbf.cpp:588</a></div></div>
</div><!-- fragment --></div><!-- contents -->

</div>
<!-- HTML footer for doxygen 1.8.9.1-->
<!-- start footer part -->
<address class="footer"><small>
Generated on Mon Jul 18 2016 09:46:24 for bitpit by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
    <div id="footer" >
        <p><strong>OPTIMAD Engineering Srl</strong> - Via Giacinto Collegno 18 - 10143 Torino</p>
        <p>Capitale Sociale euro 10.000,00 i.v. - Iscr. Reg. Impr. Torino C.F. / P.Iva 09359170017 - R.E.A. TO-1045102</p>
        <p><a href="/bitpit-private/privacy.html">Privacy Policy</a></p>
    </div>
</div>
</body>
</html>

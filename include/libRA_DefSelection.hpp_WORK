#ifndef _LIB_FFDSEL_
#define _LIB_FFDSEL_

// main of 3D morpher based on  Free Form Deformation

     #include <new>
     #include <cmath> 
     #include <iostream>
     #include <fstream>
     #include <sstream>
     #include <string>
     #include <vector>
     #include <cstdlib>
     #include <iomanip>
     #include <map>	

     using namespace std; 

   #include "libRA_Lattice.hpp"	
   #include "lib_STL_IO.hpp"
   #include "libRA_SelectionI_O.hpp"	
   #include "libRA_ControlDef.hpp"

    namespace FFDSEL_EXT { 
   
   /*! Defines the procedure to select the deformable support for each Deformation Lattice previously build. The procedure is based on four possible choices of the User, that is:
    *  
    *  		DEFAULT PROCEDURE: The user does nothing. The deformable support is defined by those simplicies of the original tasselation
    *  				   encased in the Hull box of its associated Lattice.
    *
    *  		INCLUSION        : Starting from The Default selection, the effective deformable support is restricted to those simplicies encased also in some 
    *  				   hexaedrical patches, draw by the User(patchINCLUDE method), or marked with PID identifiers (PIDinclude, only for *.nas geometry format)
    *
    *  		EXCLUSION	 : Starting from the Default selection or Inclusion selection, those simplicies encased in some hexaedrical patches, draw by the User(patchExclude method)
    *  				   or marked with PID identifiers (PIDesclude, only for *.nas geometry format), are cut off from the selection.
    *
    *  		INCLUSION BY FILE: The deformable support is defined by those simplicies reported in an external file.
    *
    *  	Inclusion and Exclusion phases require User information for drawing patches and identifying PID's. Such information are read from an input file 
    *  	(see template patchInclusion.dat), which name is stored in LATTICE<*,*>::file_patch. The same applies for Inclusion by file procedure: simplex id's 
    *  	of tasselation are read from an input file (see template restart_Selection), which name is stored in LATTICE<*,*>::file_external.
    *
    *  	Such procedure is repeated for each Lattice and each deformable support defined in the scenegraph.
    *  	The class Selection control the Inclusion and Exclusion phase. see relative Documentation for further information.   			    	   		   	 
    *
    *  	The function references as input a class ControlDeformation, a class SHAPE and a bool variable that enable/disable the writing 
    *  	on file(in the target folder Selection) of the simplex id's of the deformable support for each lattice.
    *  	The structure of such file is similar to template restart_Selection. */
    void selectingTriangulation(ControlDeformation & , SHAPE &);
    void selectingTriangulation(ControlSurfaceDeformation & , SHAPE &);
    void selectTriangles(LATTICE<3,4> &, SHAPE &, int);
    void selectTriangles(SURFLATTICE &, SHAPE &, int);
    }; //end of namespace;
    
#endif 

#ifndef _LIBRA_UTILITYDEFORM_
#define _LIBRA_UTILITYDEFORM_

// collection of high level functions that globally handling deformation

   #include "lib_STL_IO.hpp"
   #include "Class_SurfTri.hpp"
   #include "Class_UCartMesh.hpp"
   #include "libRA_FFD.hpp"
   #include "libRA_ControlDef.hpp"

	using namespace FFD_Ext;
	namespace UGLOB_FFD
	{

	void deformationGlob( SHAPE & , ControlDeformation &,
						  Class_SurfTri * , Class_UCartMesh3D *,
						  dvector1D &, int *, double *, bool* );

	void deformationGlob( SHAPE & , ControlDeformation &);

	void deformationGlob( SHAPE & , ControlSurfaceDeformation &,
			  	  	  	  Class_SurfTri * , Class_UCartMesh3D *,
						  dvector1D &, int *, double *, bool* );

	void deformationGlob( SHAPE & , ControlSurfaceDeformation &);

	void previewCloudLattices(ControlDeformation &, bool, std::string);
	void previewGridLattices(ControlDeformation &, bool, bool, std::string);

	void previewCloudLattices(ControlSurfaceDeformation &, bool, std::string);
	void previewGridLattices(ControlSurfaceDeformation &, bool, std::string);


	};//end namespace
#endif //end of _LIBRA_UTILITYDEFORM_
